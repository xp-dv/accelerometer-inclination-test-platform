
Accelerometer_Inclination_Test_Platform.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008e30  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000634  08008fd0  08008fd0  00009fd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009604  08009604  0000b1d4  2**0
                  CONTENTS
  4 .ARM          00000008  08009604  08009604  0000a604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800960c  0800960c  0000b1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800960c  0800960c  0000a60c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08009610  08009610  0000a610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08009614  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000448  200001d4  080097e8  0000b1d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000061c  080097e8  0000b61c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000b1d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000103e2  00000000  00000000  0000b204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000271e  00000000  00000000  0001b5e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010e0  00000000  00000000  0001dd08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000d29  00000000  00000000  0001ede8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017eff  00000000  00000000  0001fb11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000127f0  00000000  00000000  00037a10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093e20  00000000  00000000  0004a200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000de020  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000059b4  00000000  00000000  000de064  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000085  00000000  00000000  000e3a18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d4 	.word	0x200001d4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08008fb8 	.word	0x08008fb8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d8 	.word	0x200001d8
 80001dc:	08008fb8 	.word	0x08008fb8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_uldivmod>:
 8000bb8:	b953      	cbnz	r3, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bba:	b94a      	cbnz	r2, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	bf08      	it	eq
 8000bc0:	2800      	cmpeq	r0, #0
 8000bc2:	bf1c      	itt	ne
 8000bc4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bc8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bcc:	f000 b96a 	b.w	8000ea4 <__aeabi_idiv0>
 8000bd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bd8:	f000 f806 	bl	8000be8 <__udivmoddi4>
 8000bdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000be0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000be4:	b004      	add	sp, #16
 8000be6:	4770      	bx	lr

08000be8 <__udivmoddi4>:
 8000be8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bec:	9d08      	ldr	r5, [sp, #32]
 8000bee:	460c      	mov	r4, r1
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d14e      	bne.n	8000c92 <__udivmoddi4+0xaa>
 8000bf4:	4694      	mov	ip, r2
 8000bf6:	458c      	cmp	ip, r1
 8000bf8:	4686      	mov	lr, r0
 8000bfa:	fab2 f282 	clz	r2, r2
 8000bfe:	d962      	bls.n	8000cc6 <__udivmoddi4+0xde>
 8000c00:	b14a      	cbz	r2, 8000c16 <__udivmoddi4+0x2e>
 8000c02:	f1c2 0320 	rsb	r3, r2, #32
 8000c06:	4091      	lsls	r1, r2
 8000c08:	fa20 f303 	lsr.w	r3, r0, r3
 8000c0c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c10:	4319      	orrs	r1, r3
 8000c12:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c16:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c1a:	fa1f f68c 	uxth.w	r6, ip
 8000c1e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c26:	fb07 1114 	mls	r1, r7, r4, r1
 8000c2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c2e:	fb04 f106 	mul.w	r1, r4, r6
 8000c32:	4299      	cmp	r1, r3
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x64>
 8000c36:	eb1c 0303 	adds.w	r3, ip, r3
 8000c3a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c3e:	f080 8112 	bcs.w	8000e66 <__udivmoddi4+0x27e>
 8000c42:	4299      	cmp	r1, r3
 8000c44:	f240 810f 	bls.w	8000e66 <__udivmoddi4+0x27e>
 8000c48:	3c02      	subs	r4, #2
 8000c4a:	4463      	add	r3, ip
 8000c4c:	1a59      	subs	r1, r3, r1
 8000c4e:	fa1f f38e 	uxth.w	r3, lr
 8000c52:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c56:	fb07 1110 	mls	r1, r7, r0, r1
 8000c5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c5e:	fb00 f606 	mul.w	r6, r0, r6
 8000c62:	429e      	cmp	r6, r3
 8000c64:	d90a      	bls.n	8000c7c <__udivmoddi4+0x94>
 8000c66:	eb1c 0303 	adds.w	r3, ip, r3
 8000c6a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000c6e:	f080 80fc 	bcs.w	8000e6a <__udivmoddi4+0x282>
 8000c72:	429e      	cmp	r6, r3
 8000c74:	f240 80f9 	bls.w	8000e6a <__udivmoddi4+0x282>
 8000c78:	4463      	add	r3, ip
 8000c7a:	3802      	subs	r0, #2
 8000c7c:	1b9b      	subs	r3, r3, r6
 8000c7e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000c82:	2100      	movs	r1, #0
 8000c84:	b11d      	cbz	r5, 8000c8e <__udivmoddi4+0xa6>
 8000c86:	40d3      	lsrs	r3, r2
 8000c88:	2200      	movs	r2, #0
 8000c8a:	e9c5 3200 	strd	r3, r2, [r5]
 8000c8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c92:	428b      	cmp	r3, r1
 8000c94:	d905      	bls.n	8000ca2 <__udivmoddi4+0xba>
 8000c96:	b10d      	cbz	r5, 8000c9c <__udivmoddi4+0xb4>
 8000c98:	e9c5 0100 	strd	r0, r1, [r5]
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	4608      	mov	r0, r1
 8000ca0:	e7f5      	b.n	8000c8e <__udivmoddi4+0xa6>
 8000ca2:	fab3 f183 	clz	r1, r3
 8000ca6:	2900      	cmp	r1, #0
 8000ca8:	d146      	bne.n	8000d38 <__udivmoddi4+0x150>
 8000caa:	42a3      	cmp	r3, r4
 8000cac:	d302      	bcc.n	8000cb4 <__udivmoddi4+0xcc>
 8000cae:	4290      	cmp	r0, r2
 8000cb0:	f0c0 80f0 	bcc.w	8000e94 <__udivmoddi4+0x2ac>
 8000cb4:	1a86      	subs	r6, r0, r2
 8000cb6:	eb64 0303 	sbc.w	r3, r4, r3
 8000cba:	2001      	movs	r0, #1
 8000cbc:	2d00      	cmp	r5, #0
 8000cbe:	d0e6      	beq.n	8000c8e <__udivmoddi4+0xa6>
 8000cc0:	e9c5 6300 	strd	r6, r3, [r5]
 8000cc4:	e7e3      	b.n	8000c8e <__udivmoddi4+0xa6>
 8000cc6:	2a00      	cmp	r2, #0
 8000cc8:	f040 8090 	bne.w	8000dec <__udivmoddi4+0x204>
 8000ccc:	eba1 040c 	sub.w	r4, r1, ip
 8000cd0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cd4:	fa1f f78c 	uxth.w	r7, ip
 8000cd8:	2101      	movs	r1, #1
 8000cda:	fbb4 f6f8 	udiv	r6, r4, r8
 8000cde:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000ce2:	fb08 4416 	mls	r4, r8, r6, r4
 8000ce6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000cea:	fb07 f006 	mul.w	r0, r7, r6
 8000cee:	4298      	cmp	r0, r3
 8000cf0:	d908      	bls.n	8000d04 <__udivmoddi4+0x11c>
 8000cf2:	eb1c 0303 	adds.w	r3, ip, r3
 8000cf6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000cfa:	d202      	bcs.n	8000d02 <__udivmoddi4+0x11a>
 8000cfc:	4298      	cmp	r0, r3
 8000cfe:	f200 80cd 	bhi.w	8000e9c <__udivmoddi4+0x2b4>
 8000d02:	4626      	mov	r6, r4
 8000d04:	1a1c      	subs	r4, r3, r0
 8000d06:	fa1f f38e 	uxth.w	r3, lr
 8000d0a:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d0e:	fb08 4410 	mls	r4, r8, r0, r4
 8000d12:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d16:	fb00 f707 	mul.w	r7, r0, r7
 8000d1a:	429f      	cmp	r7, r3
 8000d1c:	d908      	bls.n	8000d30 <__udivmoddi4+0x148>
 8000d1e:	eb1c 0303 	adds.w	r3, ip, r3
 8000d22:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d26:	d202      	bcs.n	8000d2e <__udivmoddi4+0x146>
 8000d28:	429f      	cmp	r7, r3
 8000d2a:	f200 80b0 	bhi.w	8000e8e <__udivmoddi4+0x2a6>
 8000d2e:	4620      	mov	r0, r4
 8000d30:	1bdb      	subs	r3, r3, r7
 8000d32:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d36:	e7a5      	b.n	8000c84 <__udivmoddi4+0x9c>
 8000d38:	f1c1 0620 	rsb	r6, r1, #32
 8000d3c:	408b      	lsls	r3, r1
 8000d3e:	fa22 f706 	lsr.w	r7, r2, r6
 8000d42:	431f      	orrs	r7, r3
 8000d44:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d48:	fa04 f301 	lsl.w	r3, r4, r1
 8000d4c:	ea43 030c 	orr.w	r3, r3, ip
 8000d50:	40f4      	lsrs	r4, r6
 8000d52:	fa00 f801 	lsl.w	r8, r0, r1
 8000d56:	0c38      	lsrs	r0, r7, #16
 8000d58:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000d5c:	fbb4 fef0 	udiv	lr, r4, r0
 8000d60:	fa1f fc87 	uxth.w	ip, r7
 8000d64:	fb00 441e 	mls	r4, r0, lr, r4
 8000d68:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000d6c:	fb0e f90c 	mul.w	r9, lr, ip
 8000d70:	45a1      	cmp	r9, r4
 8000d72:	fa02 f201 	lsl.w	r2, r2, r1
 8000d76:	d90a      	bls.n	8000d8e <__udivmoddi4+0x1a6>
 8000d78:	193c      	adds	r4, r7, r4
 8000d7a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000d7e:	f080 8084 	bcs.w	8000e8a <__udivmoddi4+0x2a2>
 8000d82:	45a1      	cmp	r9, r4
 8000d84:	f240 8081 	bls.w	8000e8a <__udivmoddi4+0x2a2>
 8000d88:	f1ae 0e02 	sub.w	lr, lr, #2
 8000d8c:	443c      	add	r4, r7
 8000d8e:	eba4 0409 	sub.w	r4, r4, r9
 8000d92:	fa1f f983 	uxth.w	r9, r3
 8000d96:	fbb4 f3f0 	udiv	r3, r4, r0
 8000d9a:	fb00 4413 	mls	r4, r0, r3, r4
 8000d9e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000da2:	fb03 fc0c 	mul.w	ip, r3, ip
 8000da6:	45a4      	cmp	ip, r4
 8000da8:	d907      	bls.n	8000dba <__udivmoddi4+0x1d2>
 8000daa:	193c      	adds	r4, r7, r4
 8000dac:	f103 30ff 	add.w	r0, r3, #4294967295
 8000db0:	d267      	bcs.n	8000e82 <__udivmoddi4+0x29a>
 8000db2:	45a4      	cmp	ip, r4
 8000db4:	d965      	bls.n	8000e82 <__udivmoddi4+0x29a>
 8000db6:	3b02      	subs	r3, #2
 8000db8:	443c      	add	r4, r7
 8000dba:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000dbe:	fba0 9302 	umull	r9, r3, r0, r2
 8000dc2:	eba4 040c 	sub.w	r4, r4, ip
 8000dc6:	429c      	cmp	r4, r3
 8000dc8:	46ce      	mov	lr, r9
 8000dca:	469c      	mov	ip, r3
 8000dcc:	d351      	bcc.n	8000e72 <__udivmoddi4+0x28a>
 8000dce:	d04e      	beq.n	8000e6e <__udivmoddi4+0x286>
 8000dd0:	b155      	cbz	r5, 8000de8 <__udivmoddi4+0x200>
 8000dd2:	ebb8 030e 	subs.w	r3, r8, lr
 8000dd6:	eb64 040c 	sbc.w	r4, r4, ip
 8000dda:	fa04 f606 	lsl.w	r6, r4, r6
 8000dde:	40cb      	lsrs	r3, r1
 8000de0:	431e      	orrs	r6, r3
 8000de2:	40cc      	lsrs	r4, r1
 8000de4:	e9c5 6400 	strd	r6, r4, [r5]
 8000de8:	2100      	movs	r1, #0
 8000dea:	e750      	b.n	8000c8e <__udivmoddi4+0xa6>
 8000dec:	f1c2 0320 	rsb	r3, r2, #32
 8000df0:	fa20 f103 	lsr.w	r1, r0, r3
 8000df4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000df8:	fa24 f303 	lsr.w	r3, r4, r3
 8000dfc:	4094      	lsls	r4, r2
 8000dfe:	430c      	orrs	r4, r1
 8000e00:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e04:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e08:	fa1f f78c 	uxth.w	r7, ip
 8000e0c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e10:	fb08 3110 	mls	r1, r8, r0, r3
 8000e14:	0c23      	lsrs	r3, r4, #16
 8000e16:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e1a:	fb00 f107 	mul.w	r1, r0, r7
 8000e1e:	4299      	cmp	r1, r3
 8000e20:	d908      	bls.n	8000e34 <__udivmoddi4+0x24c>
 8000e22:	eb1c 0303 	adds.w	r3, ip, r3
 8000e26:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e2a:	d22c      	bcs.n	8000e86 <__udivmoddi4+0x29e>
 8000e2c:	4299      	cmp	r1, r3
 8000e2e:	d92a      	bls.n	8000e86 <__udivmoddi4+0x29e>
 8000e30:	3802      	subs	r0, #2
 8000e32:	4463      	add	r3, ip
 8000e34:	1a5b      	subs	r3, r3, r1
 8000e36:	b2a4      	uxth	r4, r4
 8000e38:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e3c:	fb08 3311 	mls	r3, r8, r1, r3
 8000e40:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e44:	fb01 f307 	mul.w	r3, r1, r7
 8000e48:	42a3      	cmp	r3, r4
 8000e4a:	d908      	bls.n	8000e5e <__udivmoddi4+0x276>
 8000e4c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e50:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e54:	d213      	bcs.n	8000e7e <__udivmoddi4+0x296>
 8000e56:	42a3      	cmp	r3, r4
 8000e58:	d911      	bls.n	8000e7e <__udivmoddi4+0x296>
 8000e5a:	3902      	subs	r1, #2
 8000e5c:	4464      	add	r4, ip
 8000e5e:	1ae4      	subs	r4, r4, r3
 8000e60:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000e64:	e739      	b.n	8000cda <__udivmoddi4+0xf2>
 8000e66:	4604      	mov	r4, r0
 8000e68:	e6f0      	b.n	8000c4c <__udivmoddi4+0x64>
 8000e6a:	4608      	mov	r0, r1
 8000e6c:	e706      	b.n	8000c7c <__udivmoddi4+0x94>
 8000e6e:	45c8      	cmp	r8, r9
 8000e70:	d2ae      	bcs.n	8000dd0 <__udivmoddi4+0x1e8>
 8000e72:	ebb9 0e02 	subs.w	lr, r9, r2
 8000e76:	eb63 0c07 	sbc.w	ip, r3, r7
 8000e7a:	3801      	subs	r0, #1
 8000e7c:	e7a8      	b.n	8000dd0 <__udivmoddi4+0x1e8>
 8000e7e:	4631      	mov	r1, r6
 8000e80:	e7ed      	b.n	8000e5e <__udivmoddi4+0x276>
 8000e82:	4603      	mov	r3, r0
 8000e84:	e799      	b.n	8000dba <__udivmoddi4+0x1d2>
 8000e86:	4630      	mov	r0, r6
 8000e88:	e7d4      	b.n	8000e34 <__udivmoddi4+0x24c>
 8000e8a:	46d6      	mov	lr, sl
 8000e8c:	e77f      	b.n	8000d8e <__udivmoddi4+0x1a6>
 8000e8e:	4463      	add	r3, ip
 8000e90:	3802      	subs	r0, #2
 8000e92:	e74d      	b.n	8000d30 <__udivmoddi4+0x148>
 8000e94:	4606      	mov	r6, r0
 8000e96:	4623      	mov	r3, r4
 8000e98:	4608      	mov	r0, r1
 8000e9a:	e70f      	b.n	8000cbc <__udivmoddi4+0xd4>
 8000e9c:	3e02      	subs	r6, #2
 8000e9e:	4463      	add	r3, ip
 8000ea0:	e730      	b.n	8000d04 <__udivmoddi4+0x11c>
 8000ea2:	bf00      	nop

08000ea4 <__aeabi_idiv0>:
 8000ea4:	4770      	bx	lr
 8000ea6:	bf00      	nop

08000ea8 <HAL_UART_RxCpltCallback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

//* Interrupt Callbacks
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b082      	sub	sp, #8
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
   * Should allow quick successive messages to fill buffer while waiting for CPU
   * Segments commands by their terminator '}'
   * Perhaps, uses two separate index pointers
   */
  static int i = 0;
  if (instruction_flag == 0) {
 8000eb0:	4b17      	ldr	r3, [pc, #92]	@ (8000f10 <HAL_UART_RxCpltCallback+0x68>)
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	d121      	bne.n	8000efc <HAL_UART_RxCpltCallback+0x54>
    uart_circ_buf[i] = uart_rx_char[0];
 8000eb8:	4b16      	ldr	r3, [pc, #88]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	4a16      	ldr	r2, [pc, #88]	@ (8000f18 <HAL_UART_RxCpltCallback+0x70>)
 8000ebe:	7811      	ldrb	r1, [r2, #0]
 8000ec0:	4a16      	ldr	r2, [pc, #88]	@ (8000f1c <HAL_UART_RxCpltCallback+0x74>)
 8000ec2:	54d1      	strb	r1, [r2, r3]
    if (uart_circ_buf[i] == '}') {
 8000ec4:	4b13      	ldr	r3, [pc, #76]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	4a14      	ldr	r2, [pc, #80]	@ (8000f1c <HAL_UART_RxCpltCallback+0x74>)
 8000eca:	5cd3      	ldrb	r3, [r2, r3]
 8000ecc:	2b7d      	cmp	r3, #125	@ 0x7d
 8000ece:	d106      	bne.n	8000ede <HAL_UART_RxCpltCallback+0x36>
      instruction_flag = 1;
 8000ed0:	4b0f      	ldr	r3, [pc, #60]	@ (8000f10 <HAL_UART_RxCpltCallback+0x68>)
 8000ed2:	2201      	movs	r2, #1
 8000ed4:	701a      	strb	r2, [r3, #0]
      i = 0;
 8000ed6:	4b0f      	ldr	r3, [pc, #60]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000ed8:	2200      	movs	r2, #0
 8000eda:	601a      	str	r2, [r3, #0]
 8000edc:	e00e      	b.n	8000efc <HAL_UART_RxCpltCallback+0x54>
    } else if (++i >= (sizeof(uart_circ_buf) - 1)) { // - 1 for NULL terminator
 8000ede:	4b0d      	ldr	r3, [pc, #52]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000ee0:	681b      	ldr	r3, [r3, #0]
 8000ee2:	3301      	adds	r3, #1
 8000ee4:	4a0b      	ldr	r2, [pc, #44]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000ee6:	6013      	str	r3, [r2, #0]
 8000ee8:	4b0a      	ldr	r3, [pc, #40]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	2b78      	cmp	r3, #120	@ 0x78
 8000eee:	d905      	bls.n	8000efc <HAL_UART_RxCpltCallback+0x54>
      i = 0;
 8000ef0:	4b08      	ldr	r3, [pc, #32]	@ (8000f14 <HAL_UART_RxCpltCallback+0x6c>)
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	601a      	str	r2, [r3, #0]
      uart_it_status = STATUS_ERR_UART_OF; // Buffer Overflow
 8000ef6:	4b0a      	ldr	r3, [pc, #40]	@ (8000f20 <HAL_UART_RxCpltCallback+0x78>)
 8000ef8:	2201      	movs	r2, #1
 8000efa:	701a      	strb	r2, [r3, #0]
    }
  }
  // UART Interrupt Rx Reactivate
  HAL_UART_Receive_IT(&huart2, (uint8_t *)uart_rx_char, 1U); // Receive single char
 8000efc:	2201      	movs	r2, #1
 8000efe:	4906      	ldr	r1, [pc, #24]	@ (8000f18 <HAL_UART_RxCpltCallback+0x70>)
 8000f00:	4808      	ldr	r0, [pc, #32]	@ (8000f24 <HAL_UART_RxCpltCallback+0x7c>)
 8000f02:	f004 fa16 	bl	8005332 <HAL_UART_Receive_IT>
}
 8000f06:	bf00      	nop
 8000f08:	3708      	adds	r7, #8
 8000f0a:	46bd      	mov	sp, r7
 8000f0c:	bd80      	pop	{r7, pc}
 8000f0e:	bf00      	nop
 8000f10:	200003a6 	.word	0x200003a6
 8000f14:	200003a8 	.word	0x200003a8
 8000f18:	20000328 	.word	0x20000328
 8000f1c:	2000032c 	.word	0x2000032c
 8000f20:	200003a7 	.word	0x200003a7
 8000f24:	200002d8 	.word	0x200002d8

08000f28 <uart_echo>:

//* Private Functions
void uart_echo(char* tx_buf, const char* rx_buf, const int status) {
 8000f28:	b580      	push	{r7, lr}
 8000f2a:	b084      	sub	sp, #16
 8000f2c:	af00      	add	r7, sp, #0
 8000f2e:	60f8      	str	r0, [r7, #12]
 8000f30:	60b9      	str	r1, [r7, #8]
 8000f32:	607a      	str	r2, [r7, #4]
  sprintf(tx_buf, "[%02u]%s\r\n", (status % 100), rx_buf); // Modulo truncates to 2 digits
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	4a0e      	ldr	r2, [pc, #56]	@ (8000f70 <uart_echo+0x48>)
 8000f38:	fb82 1203 	smull	r1, r2, r2, r3
 8000f3c:	1151      	asrs	r1, r2, #5
 8000f3e:	17da      	asrs	r2, r3, #31
 8000f40:	1a8a      	subs	r2, r1, r2
 8000f42:	2164      	movs	r1, #100	@ 0x64
 8000f44:	fb01 f202 	mul.w	r2, r1, r2
 8000f48:	1a9a      	subs	r2, r3, r2
 8000f4a:	68bb      	ldr	r3, [r7, #8]
 8000f4c:	4909      	ldr	r1, [pc, #36]	@ (8000f74 <uart_echo+0x4c>)
 8000f4e:	68f8      	ldr	r0, [r7, #12]
 8000f50:	f005 ff5e 	bl	8006e10 <siprintf>
  HAL_UART_Transmit(&huart2, (uint8_t*)tx_buf, strlen(tx_buf), UART_TX_TIMEOUT);
 8000f54:	68f8      	ldr	r0, [r7, #12]
 8000f56:	f7ff f993 	bl	8000280 <strlen>
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	b29a      	uxth	r2, r3
 8000f5e:	2332      	movs	r3, #50	@ 0x32
 8000f60:	68f9      	ldr	r1, [r7, #12]
 8000f62:	4805      	ldr	r0, [pc, #20]	@ (8000f78 <uart_echo+0x50>)
 8000f64:	f004 f95a 	bl	800521c <HAL_UART_Transmit>
}
 8000f68:	bf00      	nop
 8000f6a:	3710      	adds	r7, #16
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	bd80      	pop	{r7, pc}
 8000f70:	51eb851f 	.word	0x51eb851f
 8000f74:	08008fd0 	.word	0x08008fd0
 8000f78:	200002d8 	.word	0x200002d8

08000f7c <strtoint>:

int strtoint(char* str) {
 8000f7c:	b480      	push	{r7}
 8000f7e:	b085      	sub	sp, #20
 8000f80:	af00      	add	r7, sp, #0
 8000f82:	6078      	str	r0, [r7, #4]
  int num = 0;
 8000f84:	2300      	movs	r3, #0
 8000f86:	60fb      	str	r3, [r7, #12]
  if (str != NULL) {
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	2b00      	cmp	r3, #0
 8000f8c:	d01f      	beq.n	8000fce <strtoint+0x52>
    while (*str != '\0') { // Terminates at NULL character
 8000f8e:	e019      	b.n	8000fc4 <strtoint+0x48>
      if (*str >= '0' && *str <= '9') {
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	781b      	ldrb	r3, [r3, #0]
 8000f94:	2b2f      	cmp	r3, #47	@ 0x2f
 8000f96:	d912      	bls.n	8000fbe <strtoint+0x42>
 8000f98:	687b      	ldr	r3, [r7, #4]
 8000f9a:	781b      	ldrb	r3, [r3, #0]
 8000f9c:	2b39      	cmp	r3, #57	@ 0x39
 8000f9e:	d80e      	bhi.n	8000fbe <strtoint+0x42>
        num = num * 10U + (*str - '0'); // String (base 10) to int
 8000fa0:	68fa      	ldr	r2, [r7, #12]
 8000fa2:	4613      	mov	r3, r2
 8000fa4:	009b      	lsls	r3, r3, #2
 8000fa6:	4413      	add	r3, r2
 8000fa8:	005b      	lsls	r3, r3, #1
 8000faa:	461a      	mov	r2, r3
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	781b      	ldrb	r3, [r3, #0]
 8000fb0:	4413      	add	r3, r2
 8000fb2:	3b30      	subs	r3, #48	@ 0x30
 8000fb4:	60fb      	str	r3, [r7, #12]
      } else {
        return -1; // NaN
      }
      str++;
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	3301      	adds	r3, #1
 8000fba:	607b      	str	r3, [r7, #4]
 8000fbc:	e002      	b.n	8000fc4 <strtoint+0x48>
        return -1; // NaN
 8000fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8000fc2:	e008      	b.n	8000fd6 <strtoint+0x5a>
    while (*str != '\0') { // Terminates at NULL character
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	781b      	ldrb	r3, [r3, #0]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d1e1      	bne.n	8000f90 <strtoint+0x14>
 8000fcc:	e002      	b.n	8000fd4 <strtoint+0x58>
    }
  } else {
    return -1; // NULL
 8000fce:	f04f 33ff 	mov.w	r3, #4294967295
 8000fd2:	e000      	b.n	8000fd6 <strtoint+0x5a>
  }
  return num;
 8000fd4:	68fb      	ldr	r3, [r7, #12]
}
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	3714      	adds	r7, #20
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe0:	4770      	bx	lr
	...

08000fe4 <parse_instruction>:

instruction_t parse_instruction(char* parse_buf) {
 8000fe4:	b590      	push	{r4, r7, lr}
 8000fe6:	b08b      	sub	sp, #44	@ 0x2c
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	6078      	str	r0, [r7, #4]
 8000fec:	6039      	str	r1, [r7, #0]
  instruction_t instruction = {
 8000fee:	f107 0308 	add.w	r3, r7, #8
 8000ff2:	2200      	movs	r2, #0
 8000ff4:	601a      	str	r2, [r3, #0]
 8000ff6:	605a      	str	r2, [r3, #4]
 8000ff8:	609a      	str	r2, [r3, #8]
 8000ffa:	819a      	strh	r2, [r3, #12]
  char* terminator_p;
  char* digit_token_p;
  int num;

  // Find start and end characters
  indicator_p = strchr(parse_buf, '{');
 8000ffc:	217b      	movs	r1, #123	@ 0x7b
 8000ffe:	6838      	ldr	r0, [r7, #0]
 8001000:	f005 ff71 	bl	8006ee6 <strchr>
 8001004:	6278      	str	r0, [r7, #36]	@ 0x24
  if (!indicator_p) {
 8001006:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001008:	2b00      	cmp	r3, #0
 800100a:	d10c      	bne.n	8001026 <parse_instruction+0x42>
    instruction.status = STATUS_ERR_NO_INDICATOR;
 800100c:	2302      	movs	r3, #2
 800100e:	723b      	strb	r3, [r7, #8]
    return instruction;
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	461c      	mov	r4, r3
 8001014:	f107 0308 	add.w	r3, r7, #8
 8001018:	cb07      	ldmia	r3!, {r0, r1, r2}
 800101a:	6020      	str	r0, [r4, #0]
 800101c:	6061      	str	r1, [r4, #4]
 800101e:	60a2      	str	r2, [r4, #8]
 8001020:	881b      	ldrh	r3, [r3, #0]
 8001022:	81a3      	strh	r3, [r4, #12]
 8001024:	e0a8      	b.n	8001178 <parse_instruction+0x194>
  }
  terminator_p = strchr(parse_buf, '}');
 8001026:	217d      	movs	r1, #125	@ 0x7d
 8001028:	6838      	ldr	r0, [r7, #0]
 800102a:	f005 ff5c 	bl	8006ee6 <strchr>
 800102e:	6238      	str	r0, [r7, #32]
  if (!terminator_p) {
 8001030:	6a3b      	ldr	r3, [r7, #32]
 8001032:	2b00      	cmp	r3, #0
 8001034:	d10c      	bne.n	8001050 <parse_instruction+0x6c>
    instruction.status = STATUS_ERR_NO_TERMINATOR;
 8001036:	2303      	movs	r3, #3
 8001038:	723b      	strb	r3, [r7, #8]
    return instruction;
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	461c      	mov	r4, r3
 800103e:	f107 0308 	add.w	r3, r7, #8
 8001042:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001044:	6020      	str	r0, [r4, #0]
 8001046:	6061      	str	r1, [r4, #4]
 8001048:	60a2      	str	r2, [r4, #8]
 800104a:	881b      	ldrh	r3, [r3, #0]
 800104c:	81a3      	strh	r3, [r4, #12]
 800104e:	e093      	b.n	8001178 <parse_instruction+0x194>
  }
  ++indicator_p; // Increment past the start indicator '{'
 8001050:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001052:	3301      	adds	r3, #1
 8001054:	627b      	str	r3, [r7, #36]	@ 0x24

  // Parse instruction code
  digit_token_p = strtok(indicator_p, "|}"); // Isolate digits by tokenizing the string between '{' and '}'
 8001056:	494a      	ldr	r1, [pc, #296]	@ (8001180 <parse_instruction+0x19c>)
 8001058:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800105a:	f005 ff51 	bl	8006f00 <strtok>
 800105e:	61f8      	str	r0, [r7, #28]
  num = strtoint(digit_token_p);
 8001060:	69f8      	ldr	r0, [r7, #28]
 8001062:	f7ff ff8b 	bl	8000f7c <strtoint>
 8001066:	61b8      	str	r0, [r7, #24]
  if (num < 0) {
 8001068:	69bb      	ldr	r3, [r7, #24]
 800106a:	2b00      	cmp	r3, #0
 800106c:	da0c      	bge.n	8001088 <parse_instruction+0xa4>
    instruction.status = STATUS_ERR_INVALID_INSTRUCTION;
 800106e:	2304      	movs	r3, #4
 8001070:	723b      	strb	r3, [r7, #8]
    return instruction;
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	461c      	mov	r4, r3
 8001076:	f107 0308 	add.w	r3, r7, #8
 800107a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800107c:	6020      	str	r0, [r4, #0]
 800107e:	6061      	str	r1, [r4, #4]
 8001080:	60a2      	str	r2, [r4, #8]
 8001082:	881b      	ldrh	r3, [r3, #0]
 8001084:	81a3      	strh	r3, [r4, #12]
 8001086:	e077      	b.n	8001178 <parse_instruction+0x194>
  }
  if (num > INPUT_T_MAX) {
 8001088:	69bb      	ldr	r3, [r7, #24]
 800108a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800108e:	d30c      	bcc.n	80010aa <parse_instruction+0xc6>
    instruction.status = STATUS_ERR_INSTRUCTION_OUT_OF_RANGE;
 8001090:	2305      	movs	r3, #5
 8001092:	723b      	strb	r3, [r7, #8]
    return instruction;
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	461c      	mov	r4, r3
 8001098:	f107 0308 	add.w	r3, r7, #8
 800109c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800109e:	6020      	str	r0, [r4, #0]
 80010a0:	6061      	str	r1, [r4, #4]
 80010a2:	60a2      	str	r2, [r4, #8]
 80010a4:	881b      	ldrh	r3, [r3, #0]
 80010a6:	81a3      	strh	r3, [r4, #12]
 80010a8:	e066      	b.n	8001178 <parse_instruction+0x194>
  }
  instruction.code = num;
 80010aa:	69bb      	ldr	r3, [r7, #24]
 80010ac:	b29b      	uxth	r3, r3
 80010ae:	817b      	strh	r3, [r7, #10]

  // Parse arguments
  while ((digit_token_p = strtok(NULL, " }")) != NULL) {
 80010b0:	e050      	b.n	8001154 <parse_instruction+0x170>
    if (*digit_token_p == '{') {
 80010b2:	69fb      	ldr	r3, [r7, #28]
 80010b4:	781b      	ldrb	r3, [r3, #0]
 80010b6:	2b7b      	cmp	r3, #123	@ 0x7b
 80010b8:	d10c      	bne.n	80010d4 <parse_instruction+0xf0>
      instruction.status = STATUS_ERR_TOO_MANY_INSTRUCTIONS;
 80010ba:	2306      	movs	r3, #6
 80010bc:	723b      	strb	r3, [r7, #8]
      return instruction;
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	461c      	mov	r4, r3
 80010c2:	f107 0308 	add.w	r3, r7, #8
 80010c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80010c8:	6020      	str	r0, [r4, #0]
 80010ca:	6061      	str	r1, [r4, #4]
 80010cc:	60a2      	str	r2, [r4, #8]
 80010ce:	881b      	ldrh	r3, [r3, #0]
 80010d0:	81a3      	strh	r3, [r4, #12]
 80010d2:	e051      	b.n	8001178 <parse_instruction+0x194>
    }
    num = strtoint(digit_token_p);
 80010d4:	69f8      	ldr	r0, [r7, #28]
 80010d6:	f7ff ff51 	bl	8000f7c <strtoint>
 80010da:	61b8      	str	r0, [r7, #24]
    if (num < 0) {
 80010dc:	69bb      	ldr	r3, [r7, #24]
 80010de:	2b00      	cmp	r3, #0
 80010e0:	da0c      	bge.n	80010fc <parse_instruction+0x118>
      instruction.status = STATUS_ERR_INVALID_ARG;
 80010e2:	2307      	movs	r3, #7
 80010e4:	723b      	strb	r3, [r7, #8]
      return instruction;
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	461c      	mov	r4, r3
 80010ea:	f107 0308 	add.w	r3, r7, #8
 80010ee:	cb07      	ldmia	r3!, {r0, r1, r2}
 80010f0:	6020      	str	r0, [r4, #0]
 80010f2:	6061      	str	r1, [r4, #4]
 80010f4:	60a2      	str	r2, [r4, #8]
 80010f6:	881b      	ldrh	r3, [r3, #0]
 80010f8:	81a3      	strh	r3, [r4, #12]
 80010fa:	e03d      	b.n	8001178 <parse_instruction+0x194>
    }
    if (num > INPUT_T_MAX) {
 80010fc:	69bb      	ldr	r3, [r7, #24]
 80010fe:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001102:	d30c      	bcc.n	800111e <parse_instruction+0x13a>
      instruction.status = STATUS_ERR_ARG_OUT_OF_RANGE;
 8001104:	230a      	movs	r3, #10
 8001106:	723b      	strb	r3, [r7, #8]
      return instruction;
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	461c      	mov	r4, r3
 800110c:	f107 0308 	add.w	r3, r7, #8
 8001110:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001112:	6020      	str	r0, [r4, #0]
 8001114:	6061      	str	r1, [r4, #4]
 8001116:	60a2      	str	r2, [r4, #8]
 8001118:	881b      	ldrh	r3, [r3, #0]
 800111a:	81a3      	strh	r3, [r4, #12]
 800111c:	e02c      	b.n	8001178 <parse_instruction+0x194>
    }
    if (instruction.arg_count >= INSTRUCTION_MAX_ARGS) {
 800111e:	8abb      	ldrh	r3, [r7, #20]
 8001120:	2b03      	cmp	r3, #3
 8001122:	d90c      	bls.n	800113e <parse_instruction+0x15a>
      instruction.status = STATUS_ERR_TOO_MANY_ARGS;
 8001124:	2309      	movs	r3, #9
 8001126:	723b      	strb	r3, [r7, #8]
      return instruction;
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	461c      	mov	r4, r3
 800112c:	f107 0308 	add.w	r3, r7, #8
 8001130:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001132:	6020      	str	r0, [r4, #0]
 8001134:	6061      	str	r1, [r4, #4]
 8001136:	60a2      	str	r2, [r4, #8]
 8001138:	881b      	ldrh	r3, [r3, #0]
 800113a:	81a3      	strh	r3, [r4, #12]
 800113c:	e01c      	b.n	8001178 <parse_instruction+0x194>
    }
    instruction.args[instruction.arg_count++] = num;
 800113e:	8abb      	ldrh	r3, [r7, #20]
 8001140:	1c5a      	adds	r2, r3, #1
 8001142:	b292      	uxth	r2, r2
 8001144:	82ba      	strh	r2, [r7, #20]
 8001146:	69ba      	ldr	r2, [r7, #24]
 8001148:	b292      	uxth	r2, r2
 800114a:	005b      	lsls	r3, r3, #1
 800114c:	3328      	adds	r3, #40	@ 0x28
 800114e:	443b      	add	r3, r7
 8001150:	f823 2c1c 	strh.w	r2, [r3, #-28]
  while ((digit_token_p = strtok(NULL, " }")) != NULL) {
 8001154:	490b      	ldr	r1, [pc, #44]	@ (8001184 <parse_instruction+0x1a0>)
 8001156:	2000      	movs	r0, #0
 8001158:	f005 fed2 	bl	8006f00 <strtok>
 800115c:	61f8      	str	r0, [r7, #28]
 800115e:	69fb      	ldr	r3, [r7, #28]
 8001160:	2b00      	cmp	r3, #0
 8001162:	d1a6      	bne.n	80010b2 <parse_instruction+0xce>
  }

  return instruction;
 8001164:	687b      	ldr	r3, [r7, #4]
 8001166:	461c      	mov	r4, r3
 8001168:	f107 0308 	add.w	r3, r7, #8
 800116c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800116e:	6020      	str	r0, [r4, #0]
 8001170:	6061      	str	r1, [r4, #4]
 8001172:	60a2      	str	r2, [r4, #8]
 8001174:	881b      	ldrh	r3, [r3, #0]
 8001176:	81a3      	strh	r3, [r4, #12]
}
 8001178:	6878      	ldr	r0, [r7, #4]
 800117a:	372c      	adds	r7, #44	@ 0x2c
 800117c:	46bd      	mov	sp, r7
 800117e:	bd90      	pop	{r4, r7, pc}
 8001180:	08008fdc 	.word	0x08008fdc
 8001184:	08008fe0 	.word	0x08008fe0

08001188 <adxl_tx>:

void adxl_tx(uint8_t address, uint8_t value) {
 8001188:	b580      	push	{r7, lr}
 800118a:	b084      	sub	sp, #16
 800118c:	af00      	add	r7, sp, #0
 800118e:	4603      	mov	r3, r0
 8001190:	460a      	mov	r2, r1
 8001192:	71fb      	strb	r3, [r7, #7]
 8001194:	4613      	mov	r3, r2
 8001196:	71bb      	strb	r3, [r7, #6]
  uint8_t data[2];
  data[0] = address | BIT_6_MASK;  // Multibyte write enabled
 8001198:	79fb      	ldrb	r3, [r7, #7]
 800119a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800119e:	b2db      	uxtb	r3, r3
 80011a0:	733b      	strb	r3, [r7, #12]
  data[1] = value;
 80011a2:	79bb      	ldrb	r3, [r7, #6]
 80011a4:	737b      	strb	r3, [r7, #13]
  HAL_GPIO_WritePin(ADXL_CS_GPIO_Port, ADXL_CS_Pin, GPIO_PIN_RESET); // Pull the cs pin low to enable the slave
 80011a6:	2200      	movs	r2, #0
 80011a8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011ac:	4809      	ldr	r0, [pc, #36]	@ (80011d4 <adxl_tx+0x4c>)
 80011ae:	f001 ff1f 	bl	8002ff0 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi3, data, sizeof(data), ADXL_TIMEOUT); // Transmit the address and data
 80011b2:	f107 010c 	add.w	r1, r7, #12
 80011b6:	2364      	movs	r3, #100	@ 0x64
 80011b8:	2202      	movs	r2, #2
 80011ba:	4807      	ldr	r0, [pc, #28]	@ (80011d8 <adxl_tx+0x50>)
 80011bc:	f002 fc6d 	bl	8003a9a <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(ADXL_CS_GPIO_Port, ADXL_CS_Pin, GPIO_PIN_SET); // Pull the cs pin high to disable the slave
 80011c0:	2201      	movs	r2, #1
 80011c2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011c6:	4803      	ldr	r0, [pc, #12]	@ (80011d4 <adxl_tx+0x4c>)
 80011c8:	f001 ff12 	bl	8002ff0 <HAL_GPIO_WritePin>
}
 80011cc:	bf00      	nop
 80011ce:	3710      	adds	r7, #16
 80011d0:	46bd      	mov	sp, r7
 80011d2:	bd80      	pop	{r7, pc}
 80011d4:	40020400 	.word	0x40020400
 80011d8:	200001f0 	.word	0x200001f0

080011dc <adxl_rx>:

void adxl_rx(uint8_t address) {
 80011dc:	b580      	push	{r7, lr}
 80011de:	b082      	sub	sp, #8
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	4603      	mov	r3, r0
 80011e4:	71fb      	strb	r3, [r7, #7]
  address |= BIT_7_MASK;  // Read operation
 80011e6:	79fb      	ldrb	r3, [r7, #7]
 80011e8:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80011ec:	b2db      	uxtb	r3, r3
 80011ee:	71fb      	strb	r3, [r7, #7]
  address |= BIT_6_MASK;  // Multibyte read
 80011f0:	79fb      	ldrb	r3, [r7, #7]
 80011f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011f6:	b2db      	uxtb	r3, r3
 80011f8:	71fb      	strb	r3, [r7, #7]
  HAL_GPIO_WritePin(ADXL_CS_GPIO_Port, ADXL_CS_Pin, GPIO_PIN_RESET);  // Pull the cs pin low to enable the slave
 80011fa:	2200      	movs	r2, #0
 80011fc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001200:	480c      	ldr	r0, [pc, #48]	@ (8001234 <adxl_rx+0x58>)
 8001202:	f001 fef5 	bl	8002ff0 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi3, &address, ADXL_ADDRESS_SIZE, ADXL_TIMEOUT);  // Send single-byte address from where you want to read data
 8001206:	1df9      	adds	r1, r7, #7
 8001208:	2364      	movs	r3, #100	@ 0x64
 800120a:	2201      	movs	r2, #1
 800120c:	480a      	ldr	r0, [pc, #40]	@ (8001238 <adxl_rx+0x5c>)
 800120e:	f002 fc44 	bl	8003a9a <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi3, adxl_rx_buf, ADXL_DATA_SIZE, ADXL_TIMEOUT);  // Read the 6 bytes of data
 8001212:	2364      	movs	r3, #100	@ 0x64
 8001214:	2206      	movs	r2, #6
 8001216:	4909      	ldr	r1, [pc, #36]	@ (800123c <adxl_rx+0x60>)
 8001218:	4807      	ldr	r0, [pc, #28]	@ (8001238 <adxl_rx+0x5c>)
 800121a:	f002 fd82 	bl	8003d22 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(ADXL_CS_GPIO_Port, ADXL_CS_Pin, GPIO_PIN_SET);  // Pull the cs pin high to disable the slave
 800121e:	2201      	movs	r2, #1
 8001220:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001224:	4803      	ldr	r0, [pc, #12]	@ (8001234 <adxl_rx+0x58>)
 8001226:	f001 fee3 	bl	8002ff0 <HAL_GPIO_WritePin>
}
 800122a:	bf00      	nop
 800122c:	3708      	adds	r7, #8
 800122e:	46bd      	mov	sp, r7
 8001230:	bd80      	pop	{r7, pc}
 8001232:	bf00      	nop
 8001234:	40020400 	.word	0x40020400
 8001238:	200001f0 	.word	0x200001f0
 800123c:	20000320 	.word	0x20000320

08001240 <adxl_init>:

void adxl_init(void) {
 8001240:	b580      	push	{r7, lr}
 8001242:	af00      	add	r7, sp, #0
  HAL_Delay(STARTUP_DELAY);
 8001244:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8001248:	f001 f89e 	bl	8002388 <HAL_Delay>
  adxl_tx(ADXL_DATA_FORMAT, BIT_0_MASK);  // Data format range = +/- 4g
 800124c:	2101      	movs	r1, #1
 800124e:	2031      	movs	r0, #49	@ 0x31
 8001250:	f7ff ff9a 	bl	8001188 <adxl_tx>
  adxl_tx(ADXL_POWER_CTL, BIT_RESET_MASK);  // Reset all bits
 8001254:	2100      	movs	r1, #0
 8001256:	202d      	movs	r0, #45	@ 0x2d
 8001258:	f7ff ff96 	bl	8001188 <adxl_tx>
  adxl_tx(ADXL_POWER_CTL, BIT_3_MASK);  // Set power control mode to measure
 800125c:	2108      	movs	r1, #8
 800125e:	202d      	movs	r0, #45	@ 0x2d
 8001260:	f7ff ff92 	bl	8001188 <adxl_tx>
  adxl_rx(ADXL_DEVID); // Stores the SPI Device ID in adxl_rx_buf
 8001264:	2000      	movs	r0, #0
 8001266:	f7ff ffb9 	bl	80011dc <adxl_rx>
}
 800126a:	bf00      	nop
 800126c:	bd80      	pop	{r7, pc}
	...

08001270 <get_setpoint>:
}

// ! Do not create stop() function here. Trigger an interrupt from the instruction_handler() for the stop instruction, instead.
// Attempts to stop platform. If platform does not stop, reset stm board.

status_code_t get_setpoint(input_t index) {
 8001270:	b5b0      	push	{r4, r5, r7, lr}
 8001272:	b0a6      	sub	sp, #152	@ 0x98
 8001274:	af02      	add	r7, sp, #8
 8001276:	4603      	mov	r3, r0
 8001278:	80fb      	strh	r3, [r7, #6]
  // Get setpoint data
  setpoint_t* setpoint = (void*)(FLASH_USER_START_ADDR + (sizeof(setpoint_t) * index));
 800127a:	88fa      	ldrh	r2, [r7, #6]
 800127c:	4613      	mov	r3, r2
 800127e:	005b      	lsls	r3, r3, #1
 8001280:	4413      	add	r3, r2
 8001282:	005b      	lsls	r3, r3, #1
 8001284:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 8001288:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
 800128c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c

  // Check if requested setpoint contains data
  if (setpoint->x == FLASH_EMPTY && setpoint->x == FLASH_EMPTY && setpoint->x == FLASH_EMPTY) {
 8001290:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8001294:	881b      	ldrh	r3, [r3, #0]
 8001296:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800129a:	4293      	cmp	r3, r2
 800129c:	d10f      	bne.n	80012be <get_setpoint+0x4e>
 800129e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80012a2:	881b      	ldrh	r3, [r3, #0]
 80012a4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80012a8:	4293      	cmp	r3, r2
 80012aa:	d108      	bne.n	80012be <get_setpoint+0x4e>
 80012ac:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80012b0:	881b      	ldrh	r3, [r3, #0]
 80012b2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80012b6:	4293      	cmp	r3, r2
 80012b8:	d101      	bne.n	80012be <get_setpoint+0x4e>
    return STATUS_ERR_NO_DATA;
 80012ba:	230b      	movs	r3, #11
 80012bc:	e03e      	b.n	800133c <get_setpoint+0xcc>
  }

  // Transmit setpoint data
  char uart_tx_buf[UART_TX_BUF_LEN];
  sprintf(uart_tx_buf, "{%03u %03u %03u}\r\n", (setpoint->x % 1000), (setpoint->y % 1000), (setpoint->speed % 1000));
 80012be:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80012c2:	881b      	ldrh	r3, [r3, #0]
 80012c4:	4a1f      	ldr	r2, [pc, #124]	@ (8001344 <get_setpoint+0xd4>)
 80012c6:	fba2 1203 	umull	r1, r2, r2, r3
 80012ca:	0992      	lsrs	r2, r2, #6
 80012cc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80012d0:	fb01 f202 	mul.w	r2, r1, r2
 80012d4:	1a9b      	subs	r3, r3, r2
 80012d6:	b29b      	uxth	r3, r3
 80012d8:	461c      	mov	r4, r3
 80012da:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80012de:	885b      	ldrh	r3, [r3, #2]
 80012e0:	4a18      	ldr	r2, [pc, #96]	@ (8001344 <get_setpoint+0xd4>)
 80012e2:	fba2 1203 	umull	r1, r2, r2, r3
 80012e6:	0992      	lsrs	r2, r2, #6
 80012e8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80012ec:	fb01 f202 	mul.w	r2, r1, r2
 80012f0:	1a9b      	subs	r3, r3, r2
 80012f2:	b29b      	uxth	r3, r3
 80012f4:	461d      	mov	r5, r3
 80012f6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80012fa:	889b      	ldrh	r3, [r3, #4]
 80012fc:	4a11      	ldr	r2, [pc, #68]	@ (8001344 <get_setpoint+0xd4>)
 80012fe:	fba2 1203 	umull	r1, r2, r2, r3
 8001302:	0992      	lsrs	r2, r2, #6
 8001304:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001308:	fb01 f202 	mul.w	r2, r1, r2
 800130c:	1a9b      	subs	r3, r3, r2
 800130e:	b29b      	uxth	r3, r3
 8001310:	f107 000c 	add.w	r0, r7, #12
 8001314:	9300      	str	r3, [sp, #0]
 8001316:	462b      	mov	r3, r5
 8001318:	4622      	mov	r2, r4
 800131a:	490b      	ldr	r1, [pc, #44]	@ (8001348 <get_setpoint+0xd8>)
 800131c:	f005 fd78 	bl	8006e10 <siprintf>
  HAL_UART_Transmit(&huart2, (uint8_t*)uart_tx_buf, strlen(uart_tx_buf), UART_TX_TIMEOUT);
 8001320:	f107 030c 	add.w	r3, r7, #12
 8001324:	4618      	mov	r0, r3
 8001326:	f7fe ffab 	bl	8000280 <strlen>
 800132a:	4603      	mov	r3, r0
 800132c:	b29a      	uxth	r2, r3
 800132e:	f107 010c 	add.w	r1, r7, #12
 8001332:	2332      	movs	r3, #50	@ 0x32
 8001334:	4805      	ldr	r0, [pc, #20]	@ (800134c <get_setpoint+0xdc>)
 8001336:	f003 ff71 	bl	800521c <HAL_UART_Transmit>

  return STATUS_OK;
 800133a:	2300      	movs	r3, #0
}
 800133c:	4618      	mov	r0, r3
 800133e:	3790      	adds	r7, #144	@ 0x90
 8001340:	46bd      	mov	sp, r7
 8001342:	bdb0      	pop	{r4, r5, r7, pc}
 8001344:	10624dd3 	.word	0x10624dd3
 8001348:	08008fe4 	.word	0x08008fe4
 800134c:	200002d8 	.word	0x200002d8

08001350 <add_setpoint>:

status_code_t add_setpoint(input_t x_ang, input_t y_ang, input_t speed) {
 8001350:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001354:	b084      	sub	sp, #16
 8001356:	af00      	add	r7, sp, #0
 8001358:	4603      	mov	r3, r0
 800135a:	80fb      	strh	r3, [r7, #6]
 800135c:	460b      	mov	r3, r1
 800135e:	80bb      	strh	r3, [r7, #4]
 8001360:	4613      	mov	r3, r2
 8001362:	807b      	strh	r3, [r7, #2]
  // Get address and index of last setpoint
  setpoint_t* setpoint = (void*)(FLASH_USER_START_ADDR);
 8001364:	4b35      	ldr	r3, [pc, #212]	@ (800143c <add_setpoint+0xec>)
 8001366:	60fb      	str	r3, [r7, #12]
  input_t index = 0;
 8001368:	2300      	movs	r3, #0
 800136a:	817b      	strh	r3, [r7, #10]
  while(index <= INPUT_T_MAX) {
 800136c:	e01e      	b.n	80013ac <add_setpoint+0x5c>
    if (setpoint->x == FLASH_EMPTY && setpoint->y == FLASH_EMPTY && setpoint->speed == FLASH_EMPTY) {
 800136e:	68fb      	ldr	r3, [r7, #12]
 8001370:	881b      	ldrh	r3, [r3, #0]
 8001372:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001376:	4293      	cmp	r3, r2
 8001378:	d10b      	bne.n	8001392 <add_setpoint+0x42>
 800137a:	68fb      	ldr	r3, [r7, #12]
 800137c:	885b      	ldrh	r3, [r3, #2]
 800137e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001382:	4293      	cmp	r3, r2
 8001384:	d105      	bne.n	8001392 <add_setpoint+0x42>
 8001386:	68fb      	ldr	r3, [r7, #12]
 8001388:	889b      	ldrh	r3, [r3, #4]
 800138a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800138e:	4293      	cmp	r3, r2
 8001390:	d011      	beq.n	80013b6 <add_setpoint+0x66>
      break;
    }
    if (index == INPUT_T_MAX) {
 8001392:	897b      	ldrh	r3, [r7, #10]
 8001394:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001398:	4293      	cmp	r3, r2
 800139a:	d101      	bne.n	80013a0 <add_setpoint+0x50>
      return STATUS_ERR_SETPOINTS_FULL;
 800139c:	230d      	movs	r3, #13
 800139e:	e048      	b.n	8001432 <add_setpoint+0xe2>
    }
    ++setpoint;
 80013a0:	68fb      	ldr	r3, [r7, #12]
 80013a2:	3306      	adds	r3, #6
 80013a4:	60fb      	str	r3, [r7, #12]
    ++index;
 80013a6:	897b      	ldrh	r3, [r7, #10]
 80013a8:	3301      	adds	r3, #1
 80013aa:	817b      	strh	r3, [r7, #10]
  while(index <= INPUT_T_MAX) {
 80013ac:	897b      	ldrh	r3, [r7, #10]
 80013ae:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80013b2:	d3dc      	bcc.n	800136e <add_setpoint+0x1e>
 80013b4:	e000      	b.n	80013b8 <add_setpoint+0x68>
      break;
 80013b6:	bf00      	nop
  }

  // Unlock flash memory to enable writing
  HAL_FLASH_Unlock();
 80013b8:	f001 fa02 	bl	80027c0 <HAL_FLASH_Unlock>

  // Write the array to flash memory
  if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, (uint32_t)(&(setpoint->x)), x_ang) != HAL_OK) {
 80013bc:	68fb      	ldr	r3, [r7, #12]
 80013be:	4619      	mov	r1, r3
 80013c0:	88fb      	ldrh	r3, [r7, #6]
 80013c2:	2200      	movs	r2, #0
 80013c4:	469a      	mov	sl, r3
 80013c6:	4693      	mov	fp, r2
 80013c8:	4652      	mov	r2, sl
 80013ca:	465b      	mov	r3, fp
 80013cc:	2001      	movs	r0, #1
 80013ce:	f001 f9a3 	bl	8002718 <HAL_FLASH_Program>
 80013d2:	4603      	mov	r3, r0
 80013d4:	2b00      	cmp	r3, #0
 80013d6:	d003      	beq.n	80013e0 <add_setpoint+0x90>
    HAL_FLASH_Lock();
 80013d8:	f001 fa14 	bl	8002804 <HAL_FLASH_Lock>
    return STATUS_ERR_FLASH_WRITE_FAILED;
 80013dc:	230c      	movs	r3, #12
 80013de:	e028      	b.n	8001432 <add_setpoint+0xe2>
  }
  if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, (uint32_t)(&(setpoint->y)), y_ang) != HAL_OK) {
 80013e0:	68fb      	ldr	r3, [r7, #12]
 80013e2:	3302      	adds	r3, #2
 80013e4:	4619      	mov	r1, r3
 80013e6:	88bb      	ldrh	r3, [r7, #4]
 80013e8:	2200      	movs	r2, #0
 80013ea:	4698      	mov	r8, r3
 80013ec:	4691      	mov	r9, r2
 80013ee:	4642      	mov	r2, r8
 80013f0:	464b      	mov	r3, r9
 80013f2:	2001      	movs	r0, #1
 80013f4:	f001 f990 	bl	8002718 <HAL_FLASH_Program>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d003      	beq.n	8001406 <add_setpoint+0xb6>
    HAL_FLASH_Lock();
 80013fe:	f001 fa01 	bl	8002804 <HAL_FLASH_Lock>
    return STATUS_ERR_FLASH_WRITE_FAILED;
 8001402:	230c      	movs	r3, #12
 8001404:	e015      	b.n	8001432 <add_setpoint+0xe2>
  }
  if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, (uint32_t)(&(setpoint->speed)), speed) != HAL_OK) {
 8001406:	68fb      	ldr	r3, [r7, #12]
 8001408:	3304      	adds	r3, #4
 800140a:	4619      	mov	r1, r3
 800140c:	887b      	ldrh	r3, [r7, #2]
 800140e:	2200      	movs	r2, #0
 8001410:	461c      	mov	r4, r3
 8001412:	4615      	mov	r5, r2
 8001414:	4622      	mov	r2, r4
 8001416:	462b      	mov	r3, r5
 8001418:	2001      	movs	r0, #1
 800141a:	f001 f97d 	bl	8002718 <HAL_FLASH_Program>
 800141e:	4603      	mov	r3, r0
 8001420:	2b00      	cmp	r3, #0
 8001422:	d003      	beq.n	800142c <add_setpoint+0xdc>
    HAL_FLASH_Lock();
 8001424:	f001 f9ee 	bl	8002804 <HAL_FLASH_Lock>
    return STATUS_ERR_FLASH_WRITE_FAILED;
 8001428:	230c      	movs	r3, #12
 800142a:	e002      	b.n	8001432 <add_setpoint+0xe2>
  }

  // Lock flash memory after writing
  HAL_FLASH_Lock();
 800142c:	f001 f9ea 	bl	8002804 <HAL_FLASH_Lock>

  return STATUS_OK;
 8001430:	2300      	movs	r3, #0
}
 8001432:	4618      	mov	r0, r3
 8001434:	3710      	adds	r7, #16
 8001436:	46bd      	mov	sp, r7
 8001438:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800143c:	08040000 	.word	0x08040000

08001440 <get_all_setpoints>:

status_code_t get_all_setpoints(void) {
 8001440:	b5b0      	push	{r4, r5, r7, lr}
 8001442:	b0a4      	sub	sp, #144	@ 0x90
 8001444:	af02      	add	r7, sp, #8
  setpoint_t* setpoint = (void*)(FLASH_USER_START_ADDR);
 8001446:	4b63      	ldr	r3, [pc, #396]	@ (80015d4 <get_all_setpoints+0x194>)
 8001448:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
  input_t index = 0;
 800144c:	2300      	movs	r3, #0
 800144e:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
  char uart_tx_buf[UART_TX_BUF_LEN];

  // Transmit start indicator and first setpoint index
  sprintf(uart_tx_buf, "{000");
 8001452:	463b      	mov	r3, r7
 8001454:	4960      	ldr	r1, [pc, #384]	@ (80015d8 <get_all_setpoints+0x198>)
 8001456:	4618      	mov	r0, r3
 8001458:	f005 fcda 	bl	8006e10 <siprintf>
  HAL_UART_Transmit(&huart2, (uint8_t*)uart_tx_buf, strlen(uart_tx_buf), UART_TX_TIMEOUT);
 800145c:	463b      	mov	r3, r7
 800145e:	4618      	mov	r0, r3
 8001460:	f7fe ff0e 	bl	8000280 <strlen>
 8001464:	4603      	mov	r3, r0
 8001466:	b29a      	uxth	r2, r3
 8001468:	4639      	mov	r1, r7
 800146a:	2332      	movs	r3, #50	@ 0x32
 800146c:	485b      	ldr	r0, [pc, #364]	@ (80015dc <get_all_setpoints+0x19c>)
 800146e:	f003 fed5 	bl	800521c <HAL_UART_Transmit>
  while(index <= INPUT_T_MAX) {
 8001472:	e08f      	b.n	8001594 <get_all_setpoints+0x154>
    // Stop when next setpoint is empty or when limit is reached
    if (setpoint->x == FLASH_EMPTY && setpoint->y == FLASH_EMPTY && setpoint->speed == FLASH_EMPTY) {
 8001474:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001478:	881b      	ldrh	r3, [r3, #0]
 800147a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800147e:	4293      	cmp	r3, r2
 8001480:	d10e      	bne.n	80014a0 <get_all_setpoints+0x60>
 8001482:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001486:	885b      	ldrh	r3, [r3, #2]
 8001488:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800148c:	4293      	cmp	r3, r2
 800148e:	d107      	bne.n	80014a0 <get_all_setpoints+0x60>
 8001490:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001494:	889b      	ldrh	r3, [r3, #4]
 8001496:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800149a:	4293      	cmp	r3, r2
 800149c:	f000 8081 	beq.w	80015a2 <get_all_setpoints+0x162>
      break;
    }
    if (index == INPUT_T_MAX) {
 80014a0:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 80014a4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80014a8:	4293      	cmp	r3, r2
 80014aa:	d07c      	beq.n	80015a6 <get_all_setpoints+0x166>
      break;
    }

    // Create new packet every 10 setpoints
    if (index > 0 && (index % 10U) == 0) {
 80014ac:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d02a      	beq.n	800150a <get_all_setpoints+0xca>
 80014b4:	f8b7 2082 	ldrh.w	r2, [r7, #130]	@ 0x82
 80014b8:	4b49      	ldr	r3, [pc, #292]	@ (80015e0 <get_all_setpoints+0x1a0>)
 80014ba:	fba3 1302 	umull	r1, r3, r3, r2
 80014be:	08d9      	lsrs	r1, r3, #3
 80014c0:	460b      	mov	r3, r1
 80014c2:	009b      	lsls	r3, r3, #2
 80014c4:	440b      	add	r3, r1
 80014c6:	005b      	lsls	r3, r3, #1
 80014c8:	1ad3      	subs	r3, r2, r3
 80014ca:	b29b      	uxth	r3, r3
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	d11c      	bne.n	800150a <get_all_setpoints+0xca>
      sprintf(uart_tx_buf, "}\r\n{%03u", (index % 1000U));
 80014d0:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 80014d4:	4a43      	ldr	r2, [pc, #268]	@ (80015e4 <get_all_setpoints+0x1a4>)
 80014d6:	fba2 1203 	umull	r1, r2, r2, r3
 80014da:	0992      	lsrs	r2, r2, #6
 80014dc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80014e0:	fb01 f202 	mul.w	r2, r1, r2
 80014e4:	1a9b      	subs	r3, r3, r2
 80014e6:	b29b      	uxth	r3, r3
 80014e8:	461a      	mov	r2, r3
 80014ea:	463b      	mov	r3, r7
 80014ec:	493e      	ldr	r1, [pc, #248]	@ (80015e8 <get_all_setpoints+0x1a8>)
 80014ee:	4618      	mov	r0, r3
 80014f0:	f005 fc8e 	bl	8006e10 <siprintf>
      HAL_UART_Transmit(&huart2, (uint8_t*)uart_tx_buf, strlen(uart_tx_buf), UART_TX_TIMEOUT);
 80014f4:	463b      	mov	r3, r7
 80014f6:	4618      	mov	r0, r3
 80014f8:	f7fe fec2 	bl	8000280 <strlen>
 80014fc:	4603      	mov	r3, r0
 80014fe:	b29a      	uxth	r2, r3
 8001500:	4639      	mov	r1, r7
 8001502:	2332      	movs	r3, #50	@ 0x32
 8001504:	4835      	ldr	r0, [pc, #212]	@ (80015dc <get_all_setpoints+0x19c>)
 8001506:	f003 fe89 	bl	800521c <HAL_UART_Transmit>
    }

    // Transmit setpoint data
    sprintf(uart_tx_buf, "|%03u %03u %03u", (setpoint->x % 1000U), (setpoint->y % 1000U), (setpoint->speed % 1000U));
 800150a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800150e:	881b      	ldrh	r3, [r3, #0]
 8001510:	4a34      	ldr	r2, [pc, #208]	@ (80015e4 <get_all_setpoints+0x1a4>)
 8001512:	fba2 1203 	umull	r1, r2, r2, r3
 8001516:	0992      	lsrs	r2, r2, #6
 8001518:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800151c:	fb01 f202 	mul.w	r2, r1, r2
 8001520:	1a9b      	subs	r3, r3, r2
 8001522:	b29b      	uxth	r3, r3
 8001524:	461c      	mov	r4, r3
 8001526:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800152a:	885b      	ldrh	r3, [r3, #2]
 800152c:	4a2d      	ldr	r2, [pc, #180]	@ (80015e4 <get_all_setpoints+0x1a4>)
 800152e:	fba2 1203 	umull	r1, r2, r2, r3
 8001532:	0992      	lsrs	r2, r2, #6
 8001534:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001538:	fb01 f202 	mul.w	r2, r1, r2
 800153c:	1a9b      	subs	r3, r3, r2
 800153e:	b29b      	uxth	r3, r3
 8001540:	461d      	mov	r5, r3
 8001542:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001546:	889b      	ldrh	r3, [r3, #4]
 8001548:	4a26      	ldr	r2, [pc, #152]	@ (80015e4 <get_all_setpoints+0x1a4>)
 800154a:	fba2 1203 	umull	r1, r2, r2, r3
 800154e:	0992      	lsrs	r2, r2, #6
 8001550:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001554:	fb01 f202 	mul.w	r2, r1, r2
 8001558:	1a9b      	subs	r3, r3, r2
 800155a:	b29b      	uxth	r3, r3
 800155c:	4638      	mov	r0, r7
 800155e:	9300      	str	r3, [sp, #0]
 8001560:	462b      	mov	r3, r5
 8001562:	4622      	mov	r2, r4
 8001564:	4921      	ldr	r1, [pc, #132]	@ (80015ec <get_all_setpoints+0x1ac>)
 8001566:	f005 fc53 	bl	8006e10 <siprintf>
    HAL_UART_Transmit(&huart2, (uint8_t*)uart_tx_buf, strlen(uart_tx_buf), UART_TX_TIMEOUT);
 800156a:	463b      	mov	r3, r7
 800156c:	4618      	mov	r0, r3
 800156e:	f7fe fe87 	bl	8000280 <strlen>
 8001572:	4603      	mov	r3, r0
 8001574:	b29a      	uxth	r2, r3
 8001576:	4639      	mov	r1, r7
 8001578:	2332      	movs	r3, #50	@ 0x32
 800157a:	4818      	ldr	r0, [pc, #96]	@ (80015dc <get_all_setpoints+0x19c>)
 800157c:	f003 fe4e 	bl	800521c <HAL_UART_Transmit>

    // Increment setpoint and index
    ++setpoint;
 8001580:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001584:	3306      	adds	r3, #6
 8001586:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    ++index;
 800158a:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 800158e:	3301      	adds	r3, #1
 8001590:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
  while(index <= INPUT_T_MAX) {
 8001594:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 8001598:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800159c:	f4ff af6a 	bcc.w	8001474 <get_all_setpoints+0x34>
 80015a0:	e002      	b.n	80015a8 <get_all_setpoints+0x168>
      break;
 80015a2:	bf00      	nop
 80015a4:	e000      	b.n	80015a8 <get_all_setpoints+0x168>
      break;
 80015a6:	bf00      	nop
  }
  // Transmit terminator
  sprintf(uart_tx_buf, "}\r\n");
 80015a8:	463b      	mov	r3, r7
 80015aa:	4911      	ldr	r1, [pc, #68]	@ (80015f0 <get_all_setpoints+0x1b0>)
 80015ac:	4618      	mov	r0, r3
 80015ae:	f005 fc2f 	bl	8006e10 <siprintf>
  HAL_UART_Transmit(&huart2, (uint8_t*)uart_tx_buf, strlen(uart_tx_buf), UART_TX_TIMEOUT);
 80015b2:	463b      	mov	r3, r7
 80015b4:	4618      	mov	r0, r3
 80015b6:	f7fe fe63 	bl	8000280 <strlen>
 80015ba:	4603      	mov	r3, r0
 80015bc:	b29a      	uxth	r2, r3
 80015be:	4639      	mov	r1, r7
 80015c0:	2332      	movs	r3, #50	@ 0x32
 80015c2:	4806      	ldr	r0, [pc, #24]	@ (80015dc <get_all_setpoints+0x19c>)
 80015c4:	f003 fe2a 	bl	800521c <HAL_UART_Transmit>

  return STATUS_OK;
 80015c8:	2300      	movs	r3, #0
}
 80015ca:	4618      	mov	r0, r3
 80015cc:	3788      	adds	r7, #136	@ 0x88
 80015ce:	46bd      	mov	sp, r7
 80015d0:	bdb0      	pop	{r4, r5, r7, pc}
 80015d2:	bf00      	nop
 80015d4:	08040000 	.word	0x08040000
 80015d8:	08008ff8 	.word	0x08008ff8
 80015dc:	200002d8 	.word	0x200002d8
 80015e0:	cccccccd 	.word	0xcccccccd
 80015e4:	10624dd3 	.word	0x10624dd3
 80015e8:	08009000 	.word	0x08009000
 80015ec:	0800900c 	.word	0x0800900c
 80015f0:	0800901c 	.word	0x0800901c

080015f4 <clear_all_setpoints>:

status_code_t clear_all_setpoints(void) {
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b086      	sub	sp, #24
 80015f8:	af00      	add	r7, sp, #0
  // Unlock flash memory to enable writing
  HAL_FLASH_Unlock();
 80015fa:	f001 f8e1 	bl	80027c0 <HAL_FLASH_Unlock>

  FLASH_EraseInitTypeDef flash_erase_setup = {
 80015fe:	1d3b      	adds	r3, r7, #4
 8001600:	2200      	movs	r2, #0
 8001602:	601a      	str	r2, [r3, #0]
 8001604:	605a      	str	r2, [r3, #4]
 8001606:	609a      	str	r2, [r3, #8]
 8001608:	60da      	str	r2, [r3, #12]
 800160a:	611a      	str	r2, [r3, #16]
 800160c:	2306      	movs	r3, #6
 800160e:	60fb      	str	r3, [r7, #12]
 8001610:	2301      	movs	r3, #1
 8001612:	613b      	str	r3, [r7, #16]
 8001614:	2302      	movs	r3, #2
 8001616:	617b      	str	r3, [r7, #20]
    .TypeErase = FLASH_TYPEERASE_SECTORS,
    .Sector = SECTOR_NUMBER,
    .NbSectors = 1,
    .VoltageRange = FLASH_VOLTAGE_RANGE_3,
  };
  uint32_t sector_error = 0;
 8001618:	2300      	movs	r3, #0
 800161a:	603b      	str	r3, [r7, #0]

  if (HAL_FLASHEx_Erase(&flash_erase_setup, &sector_error) != HAL_OK) {
 800161c:	463a      	mov	r2, r7
 800161e:	1d3b      	adds	r3, r7, #4
 8001620:	4611      	mov	r1, r2
 8001622:	4618      	mov	r0, r3
 8001624:	f001 fa3e 	bl	8002aa4 <HAL_FLASHEx_Erase>
 8001628:	4603      	mov	r3, r0
 800162a:	2b00      	cmp	r3, #0
 800162c:	d001      	beq.n	8001632 <clear_all_setpoints+0x3e>
    return STATUS_ERR_FLASH_WRITE_FAILED;
 800162e:	230c      	movs	r3, #12
 8001630:	e002      	b.n	8001638 <clear_all_setpoints+0x44>
  }

  // Lock flash memory after writing
  HAL_FLASH_Lock();
 8001632:	f001 f8e7 	bl	8002804 <HAL_FLASH_Lock>

  return STATUS_OK;
 8001636:	2300      	movs	r3, #0
}
 8001638:	4618      	mov	r0, r3
 800163a:	3718      	adds	r7, #24
 800163c:	46bd      	mov	sp, r7
 800163e:	bd80      	pop	{r7, pc}

08001640 <test_flash>:
  adxl_read();

  return STATUS_OK;
}

status_code_t test_flash(void) {
 8001640:	b580      	push	{r7, lr}
 8001642:	b082      	sub	sp, #8
 8001644:	af00      	add	r7, sp, #0
  status_code_t status;

  status = clear_all_setpoints();
 8001646:	f7ff ffd5 	bl	80015f4 <clear_all_setpoints>
 800164a:	4603      	mov	r3, r0
 800164c:	70fb      	strb	r3, [r7, #3]
  if (status != STATUS_OK) {
 800164e:	78fb      	ldrb	r3, [r7, #3]
 8001650:	2b00      	cmp	r3, #0
 8001652:	d001      	beq.n	8001658 <test_flash+0x18>
    return status;
 8001654:	78fb      	ldrb	r3, [r7, #3]
 8001656:	e027      	b.n	80016a8 <test_flash+0x68>
  }

  for (int i = 0; i < 300; i += 3) {
 8001658:	2300      	movs	r3, #0
 800165a:	607b      	str	r3, [r7, #4]
 800165c:	e016      	b.n	800168c <test_flash+0x4c>
    status = add_setpoint(i, (i + 1), (i + 2));
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	b298      	uxth	r0, r3
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	b29b      	uxth	r3, r3
 8001666:	3301      	adds	r3, #1
 8001668:	b299      	uxth	r1, r3
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	b29b      	uxth	r3, r3
 800166e:	3302      	adds	r3, #2
 8001670:	b29b      	uxth	r3, r3
 8001672:	461a      	mov	r2, r3
 8001674:	f7ff fe6c 	bl	8001350 <add_setpoint>
 8001678:	4603      	mov	r3, r0
 800167a:	70fb      	strb	r3, [r7, #3]
    if (status != STATUS_OK) {
 800167c:	78fb      	ldrb	r3, [r7, #3]
 800167e:	2b00      	cmp	r3, #0
 8001680:	d001      	beq.n	8001686 <test_flash+0x46>
      return status;
 8001682:	78fb      	ldrb	r3, [r7, #3]
 8001684:	e010      	b.n	80016a8 <test_flash+0x68>
  for (int i = 0; i < 300; i += 3) {
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	3303      	adds	r3, #3
 800168a:	607b      	str	r3, [r7, #4]
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8001692:	dbe4      	blt.n	800165e <test_flash+0x1e>
    }
  }

  status = get_all_setpoints();
 8001694:	f7ff fed4 	bl	8001440 <get_all_setpoints>
 8001698:	4603      	mov	r3, r0
 800169a:	70fb      	strb	r3, [r7, #3]
  if (status != STATUS_OK) {
 800169c:	78fb      	ldrb	r3, [r7, #3]
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d001      	beq.n	80016a6 <test_flash+0x66>
    return status;
 80016a2:	78fb      	ldrb	r3, [r7, #3]
 80016a4:	e000      	b.n	80016a8 <test_flash+0x68>
  }

  return STATUS_OK;
 80016a6:	2300      	movs	r3, #0
}
 80016a8:	4618      	mov	r0, r3
 80016aa:	3708      	adds	r7, #8
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bd80      	pop	{r7, pc}

080016b0 <startup_state_handler>:

//* Event Handlers
system_state_t startup_state_handler(void) {
 80016b0:	b580      	push	{r7, lr}
 80016b2:	af00      	add	r7, sp, #0
  //* PWM
  // Internal Clock (HCLK) = 100 MHz. If Prescaler = (100 - 1) & Max Timer Count = (20000 - 1),
  // then f = 100 MHz / 100 = 1 MHz, T = 1 us, and PWM f = 1/(20000 * T) = 50 Hz
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 80016b4:	2100      	movs	r1, #0
 80016b6:	4808      	ldr	r0, [pc, #32]	@ (80016d8 <startup_state_handler+0x28>)
 80016b8:	f002 ffe0 	bl	800467c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 80016bc:	2104      	movs	r1, #4
 80016be:	4806      	ldr	r0, [pc, #24]	@ (80016d8 <startup_state_handler+0x28>)
 80016c0:	f002 ffdc 	bl	800467c <HAL_TIM_PWM_Start>

  //* Accelerometer
  adxl_init();
 80016c4:	f7ff fdbc 	bl	8001240 <adxl_init>

  //* UART
  // Rx Interrupt Setup
  HAL_UART_Receive_IT(&huart2, (uint8_t *)uart_rx_char, 1U); // Receive single char
 80016c8:	2201      	movs	r2, #1
 80016ca:	4904      	ldr	r1, [pc, #16]	@ (80016dc <startup_state_handler+0x2c>)
 80016cc:	4804      	ldr	r0, [pc, #16]	@ (80016e0 <startup_state_handler+0x30>)
 80016ce:	f003 fe30 	bl	8005332 <HAL_UART_Receive_IT>

  return INSTRUCTION_WAIT_STATE;
 80016d2:	2301      	movs	r3, #1
}
 80016d4:	4618      	mov	r0, r3
 80016d6:	bd80      	pop	{r7, pc}
 80016d8:	20000248 	.word	0x20000248
 80016dc:	20000328 	.word	0x20000328
 80016e0:	200002d8 	.word	0x200002d8

080016e4 <instruction_wait_state_handler>:

system_state_t instruction_wait_state_handler(void) {
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b086      	sub	sp, #24
 80016e8:	af00      	add	r7, sp, #0
  static char uart_tx_buf[UART_TX_BUF_LEN];
  static char uart_rx_buf[UART_RX_BUF_LEN];

  //* Wait for UART instruction_flag to trigger via interrupt
  if (instruction_flag) {
 80016ea:	4b76      	ldr	r3, [pc, #472]	@ (80018c4 <instruction_wait_state_handler+0x1e0>)
 80016ec:	781b      	ldrb	r3, [r3, #0]
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	f000 80e2 	beq.w	80018b8 <instruction_wait_state_handler+0x1d4>
    strcpy(uart_rx_buf, uart_circ_buf); // TODO: True circular buffer
 80016f4:	4974      	ldr	r1, [pc, #464]	@ (80018c8 <instruction_wait_state_handler+0x1e4>)
 80016f6:	4875      	ldr	r0, [pc, #468]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 80016f8:	f005 fce5 	bl	80070c6 <strcpy>

    if (uart_it_status != STATUS_OK) {
 80016fc:	4b74      	ldr	r3, [pc, #464]	@ (80018d0 <instruction_wait_state_handler+0x1ec>)
 80016fe:	781b      	ldrb	r3, [r3, #0]
 8001700:	2b00      	cmp	r3, #0
 8001702:	d00a      	beq.n	800171a <instruction_wait_state_handler+0x36>

      // Echo received instruction with error status
      uart_echo(uart_tx_buf, uart_rx_buf, uart_it_status);
 8001704:	4b72      	ldr	r3, [pc, #456]	@ (80018d0 <instruction_wait_state_handler+0x1ec>)
 8001706:	781b      	ldrb	r3, [r3, #0]
 8001708:	461a      	mov	r2, r3
 800170a:	4970      	ldr	r1, [pc, #448]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 800170c:	4871      	ldr	r0, [pc, #452]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 800170e:	f7ff fc0b 	bl	8000f28 <uart_echo>
      uart_it_status = STATUS_OK;
 8001712:	4b6f      	ldr	r3, [pc, #444]	@ (80018d0 <instruction_wait_state_handler+0x1ec>)
 8001714:	2200      	movs	r2, #0
 8001716:	701a      	strb	r2, [r3, #0]
 8001718:	e0c1      	b.n	800189e <instruction_wait_state_handler+0x1ba>

    } else if (uart_it_status == STATUS_OK) {
 800171a:	4b6d      	ldr	r3, [pc, #436]	@ (80018d0 <instruction_wait_state_handler+0x1ec>)
 800171c:	781b      	ldrb	r3, [r3, #0]
 800171e:	2b00      	cmp	r3, #0
 8001720:	f040 80bd 	bne.w	800189e <instruction_wait_state_handler+0x1ba>

      //* Parse received instruction
      // Copy UART buffer to prevent parse_instruction() from manipulating the original (due to strtok())
      char* parse_buf = calloc((strlen(uart_rx_buf) + 1U), sizeof(char)); // Allocate memory based on size of text in buffer
 8001724:	4869      	ldr	r0, [pc, #420]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001726:	f7fe fdab 	bl	8000280 <strlen>
 800172a:	4603      	mov	r3, r0
 800172c:	3301      	adds	r3, #1
 800172e:	2101      	movs	r1, #1
 8001730:	4618      	mov	r0, r3
 8001732:	f004 fd79 	bl	8006228 <calloc>
 8001736:	4603      	mov	r3, r0
 8001738:	617b      	str	r3, [r7, #20]
      strcpy(parse_buf, uart_rx_buf);
 800173a:	4964      	ldr	r1, [pc, #400]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 800173c:	6978      	ldr	r0, [r7, #20]
 800173e:	f005 fcc2 	bl	80070c6 <strcpy>

      instruction_t instruction = parse_instruction(parse_buf);
 8001742:	1d3b      	adds	r3, r7, #4
 8001744:	6979      	ldr	r1, [r7, #20]
 8001746:	4618      	mov	r0, r3
 8001748:	f7ff fc4c 	bl	8000fe4 <parse_instruction>
      free(parse_buf); // Free memory allocated by calloc()
 800174c:	6978      	ldr	r0, [r7, #20]
 800174e:	f004 fd8f 	bl	8006270 <free>

      //* Echo received instruction with status if error occurred
      if (instruction.status != STATUS_OK) {
 8001752:	793b      	ldrb	r3, [r7, #4]
 8001754:	2b00      	cmp	r3, #0
 8001756:	d006      	beq.n	8001766 <instruction_wait_state_handler+0x82>
        uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 8001758:	793b      	ldrb	r3, [r7, #4]
 800175a:	461a      	mov	r2, r3
 800175c:	495b      	ldr	r1, [pc, #364]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 800175e:	485d      	ldr	r0, [pc, #372]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001760:	f7ff fbe2 	bl	8000f28 <uart_echo>
 8001764:	e09b      	b.n	800189e <instruction_wait_state_handler+0x1ba>
      } else {
        //* Instruction switch
        // TODO: Finish all cases in instruction_code_t
        // TODO: Find more elegant implementation of arg_count check
        switch (instruction.code) {
 8001766:	88fb      	ldrh	r3, [r7, #6]
 8001768:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800176c:	4293      	cmp	r3, r2
 800176e:	f000 8086 	beq.w	800187e <instruction_wait_state_handler+0x19a>
 8001772:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001776:	f280 8089 	bge.w	800188c <instruction_wait_state_handler+0x1a8>
 800177a:	f240 32e6 	movw	r2, #998	@ 0x3e6
 800177e:	4293      	cmp	r3, r2
 8001780:	d072      	beq.n	8001868 <instruction_wait_state_handler+0x184>
 8001782:	f240 32e6 	movw	r2, #998	@ 0x3e6
 8001786:	4293      	cmp	r3, r2
 8001788:	f300 8080 	bgt.w	800188c <instruction_wait_state_handler+0x1a8>
 800178c:	2b07      	cmp	r3, #7
 800178e:	dc11      	bgt.n	80017b4 <instruction_wait_state_handler+0xd0>
 8001790:	2b03      	cmp	r3, #3
 8001792:	db7b      	blt.n	800188c <instruction_wait_state_handler+0x1a8>
 8001794:	3b03      	subs	r3, #3
 8001796:	2b04      	cmp	r3, #4
 8001798:	d878      	bhi.n	800188c <instruction_wait_state_handler+0x1a8>
 800179a:	a201      	add	r2, pc, #4	@ (adr r2, 80017a0 <instruction_wait_state_handler+0xbc>)
 800179c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80017a0:	080017bf 	.word	0x080017bf
 80017a4:	080017f1 	.word	0x080017f1
 80017a8:	0800188d 	.word	0x0800188d
 80017ac:	08001827 	.word	0x08001827
 80017b0:	0800183d 	.word	0x0800183d
 80017b4:	f240 32e5 	movw	r2, #997	@ 0x3e5
 80017b8:	4293      	cmp	r3, r2
 80017ba:	d04a      	beq.n	8001852 <instruction_wait_state_handler+0x16e>
 80017bc:	e066      	b.n	800188c <instruction_wait_state_handler+0x1a8>
        case GET_SETPOINT_INSTRUCTION:
          if (instruction.arg_count < 1U) {
 80017be:	8a3b      	ldrh	r3, [r7, #16]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d102      	bne.n	80017ca <instruction_wait_state_handler+0xe6>
            instruction.status = STATUS_ERR_MISSING_ARGS;
 80017c4:	2308      	movs	r3, #8
 80017c6:	713b      	strb	r3, [r7, #4]
 80017c8:	e00b      	b.n	80017e2 <instruction_wait_state_handler+0xfe>
          } else if (instruction.arg_count > 1U) {
 80017ca:	8a3b      	ldrh	r3, [r7, #16]
 80017cc:	2b01      	cmp	r3, #1
 80017ce:	d902      	bls.n	80017d6 <instruction_wait_state_handler+0xf2>
            instruction.status = STATUS_ERR_TOO_MANY_ARGS;
 80017d0:	2309      	movs	r3, #9
 80017d2:	713b      	strb	r3, [r7, #4]
 80017d4:	e005      	b.n	80017e2 <instruction_wait_state_handler+0xfe>
          } else {
            instruction.status = get_setpoint(instruction.args[0]);
 80017d6:	893b      	ldrh	r3, [r7, #8]
 80017d8:	4618      	mov	r0, r3
 80017da:	f7ff fd49 	bl	8001270 <get_setpoint>
 80017de:	4603      	mov	r3, r0
 80017e0:	713b      	strb	r3, [r7, #4]
          }
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 80017e2:	793b      	ldrb	r3, [r7, #4]
 80017e4:	461a      	mov	r2, r3
 80017e6:	4939      	ldr	r1, [pc, #228]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 80017e8:	483a      	ldr	r0, [pc, #232]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 80017ea:	f7ff fb9d 	bl	8000f28 <uart_echo>
          break;
 80017ee:	e056      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case ADD_SETPOINT_INSTRUCTION:
          if (instruction.arg_count < 3U) {
 80017f0:	8a3b      	ldrh	r3, [r7, #16]
 80017f2:	2b02      	cmp	r3, #2
 80017f4:	d802      	bhi.n	80017fc <instruction_wait_state_handler+0x118>
            instruction.status = STATUS_ERR_MISSING_ARGS;
 80017f6:	2308      	movs	r3, #8
 80017f8:	713b      	strb	r3, [r7, #4]
 80017fa:	e00d      	b.n	8001818 <instruction_wait_state_handler+0x134>
          } else if (instruction.arg_count > 3U) {
 80017fc:	8a3b      	ldrh	r3, [r7, #16]
 80017fe:	2b03      	cmp	r3, #3
 8001800:	d902      	bls.n	8001808 <instruction_wait_state_handler+0x124>
            instruction.status = STATUS_ERR_TOO_MANY_ARGS;
 8001802:	2309      	movs	r3, #9
 8001804:	713b      	strb	r3, [r7, #4]
 8001806:	e007      	b.n	8001818 <instruction_wait_state_handler+0x134>
          } else {
            instruction.status = add_setpoint(instruction.args[0], instruction.args[1], instruction.args[2]);
 8001808:	893b      	ldrh	r3, [r7, #8]
 800180a:	8979      	ldrh	r1, [r7, #10]
 800180c:	89ba      	ldrh	r2, [r7, #12]
 800180e:	4618      	mov	r0, r3
 8001810:	f7ff fd9e 	bl	8001350 <add_setpoint>
 8001814:	4603      	mov	r3, r0
 8001816:	713b      	strb	r3, [r7, #4]
          }
          // TODO: Consider echoing index after adding. Otherwise, user can use get_all_setpoints().
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 8001818:	793b      	ldrb	r3, [r7, #4]
 800181a:	461a      	mov	r2, r3
 800181c:	492b      	ldr	r1, [pc, #172]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 800181e:	482d      	ldr	r0, [pc, #180]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001820:	f7ff fb82 	bl	8000f28 <uart_echo>
          break;
 8001824:	e03b      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case GET_ALL_SETPOINTS_INSTRUCTION:
          instruction.status = get_all_setpoints();
 8001826:	f7ff fe0b 	bl	8001440 <get_all_setpoints>
 800182a:	4603      	mov	r3, r0
 800182c:	713b      	strb	r3, [r7, #4]
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 800182e:	793b      	ldrb	r3, [r7, #4]
 8001830:	461a      	mov	r2, r3
 8001832:	4926      	ldr	r1, [pc, #152]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001834:	4827      	ldr	r0, [pc, #156]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001836:	f7ff fb77 	bl	8000f28 <uart_echo>
          break;
 800183a:	e030      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case CLEAR_ALL_SETPOINTS_INSTRUCTION:
          instruction.status = clear_all_setpoints();
 800183c:	f7ff feda 	bl	80015f4 <clear_all_setpoints>
 8001840:	4603      	mov	r3, r0
 8001842:	713b      	strb	r3, [r7, #4]
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 8001844:	793b      	ldrb	r3, [r7, #4]
 8001846:	461a      	mov	r2, r3
 8001848:	4920      	ldr	r1, [pc, #128]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 800184a:	4822      	ldr	r0, [pc, #136]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 800184c:	f7ff fb6c 	bl	8000f28 <uart_echo>
          break;
 8001850:	e025      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case TEST_FLASH_INSTRUCTION:
          instruction.status = test_flash();
 8001852:	f7ff fef5 	bl	8001640 <test_flash>
 8001856:	4603      	mov	r3, r0
 8001858:	713b      	strb	r3, [r7, #4]
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 800185a:	793b      	ldrb	r3, [r7, #4]
 800185c:	461a      	mov	r2, r3
 800185e:	491b      	ldr	r1, [pc, #108]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001860:	481c      	ldr	r0, [pc, #112]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001862:	f7ff fb61 	bl	8000f28 <uart_echo>
          break;
 8001866:	e01a      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case TEST_LED_INSTRUCTION:
          HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 8001868:	2120      	movs	r1, #32
 800186a:	481b      	ldr	r0, [pc, #108]	@ (80018d8 <instruction_wait_state_handler+0x1f4>)
 800186c:	f001 fbd9 	bl	8003022 <HAL_GPIO_TogglePin>
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 8001870:	793b      	ldrb	r3, [r7, #4]
 8001872:	461a      	mov	r2, r3
 8001874:	4915      	ldr	r1, [pc, #84]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001876:	4817      	ldr	r0, [pc, #92]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001878:	f7ff fb56 	bl	8000f28 <uart_echo>
          break;
 800187c:	e00f      	b.n	800189e <instruction_wait_state_handler+0x1ba>
        case TEST_ECHO_INSTRUCTION:
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 800187e:	793b      	ldrb	r3, [r7, #4]
 8001880:	461a      	mov	r2, r3
 8001882:	4912      	ldr	r1, [pc, #72]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001884:	4813      	ldr	r0, [pc, #76]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001886:	f7ff fb4f 	bl	8000f28 <uart_echo>
          break;
 800188a:	e008      	b.n	800189e <instruction_wait_state_handler+0x1ba>

        // Instruction not in list of instruction codes
        default:
          instruction.status = STATUS_ERR_INVALID_INSTRUCTION;
 800188c:	2304      	movs	r3, #4
 800188e:	713b      	strb	r3, [r7, #4]
          uart_echo(uart_tx_buf, uart_rx_buf, instruction.status);
 8001890:	793b      	ldrb	r3, [r7, #4]
 8001892:	461a      	mov	r2, r3
 8001894:	490d      	ldr	r1, [pc, #52]	@ (80018cc <instruction_wait_state_handler+0x1e8>)
 8001896:	480f      	ldr	r0, [pc, #60]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 8001898:	f7ff fb46 	bl	8000f28 <uart_echo>
          break;
 800189c:	bf00      	nop
        }
      }
    }
    // Reset buffers and flags
    memset(uart_circ_buf, 0, sizeof(uart_circ_buf)); // TODO: True circular buffer
 800189e:	227a      	movs	r2, #122	@ 0x7a
 80018a0:	2100      	movs	r1, #0
 80018a2:	4809      	ldr	r0, [pc, #36]	@ (80018c8 <instruction_wait_state_handler+0x1e4>)
 80018a4:	f005 fb17 	bl	8006ed6 <memset>
    memset(uart_tx_buf, 0, sizeof(uart_tx_buf));
 80018a8:	2280      	movs	r2, #128	@ 0x80
 80018aa:	2100      	movs	r1, #0
 80018ac:	4809      	ldr	r0, [pc, #36]	@ (80018d4 <instruction_wait_state_handler+0x1f0>)
 80018ae:	f005 fb12 	bl	8006ed6 <memset>
    instruction_flag = 0;
 80018b2:	4b04      	ldr	r3, [pc, #16]	@ (80018c4 <instruction_wait_state_handler+0x1e0>)
 80018b4:	2200      	movs	r2, #0
 80018b6:	701a      	strb	r2, [r3, #0]
  }
  return INSTRUCTION_WAIT_STATE;
 80018b8:	2301      	movs	r3, #1
}
 80018ba:	4618      	mov	r0, r3
 80018bc:	3718      	adds	r7, #24
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd80      	pop	{r7, pc}
 80018c2:	bf00      	nop
 80018c4:	200003a6 	.word	0x200003a6
 80018c8:	2000032c 	.word	0x2000032c
 80018cc:	200003ac 	.word	0x200003ac
 80018d0:	200003a7 	.word	0x200003a7
 80018d4:	20000428 	.word	0x20000428
 80018d8:	40020000 	.word	0x40020000

080018dc <edit_sequence_state_handler>:

system_state_t edit_sequence_state_handler(void) {
 80018dc:	b480      	push	{r7}
 80018de:	af00      	add	r7, sp, #0
  // Allow user to define and store a sequence
  return INSTRUCTION_WAIT_STATE;
 80018e0:	2301      	movs	r3, #1
}
 80018e2:	4618      	mov	r0, r3
 80018e4:	46bd      	mov	sp, r7
 80018e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ea:	4770      	bx	lr

080018ec <run_state_handler>:

system_state_t run_state_handler(void) {
 80018ec:	b480      	push	{r7}
 80018ee:	af00      	add	r7, sp, #0
  // Listen for stop commands
  // Run test setpoint
  // Calls move servo function
  return INSTRUCTION_WAIT_STATE;
 80018f0:	2301      	movs	r3, #1
}
 80018f2:	4618      	mov	r0, r3
 80018f4:	46bd      	mov	sp, r7
 80018f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fa:	4770      	bx	lr

080018fc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80018fc:	b580      	push	{r7, lr}
 80018fe:	b082      	sub	sp, #8
 8001900:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001902:	f000 fccf 	bl	80022a4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001906:	f000 f835 	bl	8001974 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800190a:	f000 f9a5 	bl	8001c58 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 800190e:	f000 f979 	bl	8001c04 <MX_USART2_UART_Init>
  MX_SPI3_Init();
 8001912:	f000 f897 	bl	8001a44 <MX_SPI3_Init>
  MX_USART1_UART_Init();
 8001916:	f000 f94b 	bl	8001bb0 <MX_USART1_UART_Init>
  MX_TIM2_Init();
 800191a:	f000 f8c9 	bl	8001ab0 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

  //* Startup State
  system_state_t next_state_e = STARTUP_STATE;
 800191e:	2300      	movs	r3, #0
 8001920:	71fb      	strb	r3, [r7, #7]

    /* USER CODE BEGIN 3 */

    //* State Handlers
    // Perform functions for given state, then return the value of the next state
    switch (next_state_e) {
 8001922:	79fb      	ldrb	r3, [r7, #7]
 8001924:	2b03      	cmp	r3, #3
 8001926:	d81f      	bhi.n	8001968 <main+0x6c>
 8001928:	a201      	add	r2, pc, #4	@ (adr r2, 8001930 <main+0x34>)
 800192a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800192e:	bf00      	nop
 8001930:	08001941 	.word	0x08001941
 8001934:	0800194b 	.word	0x0800194b
 8001938:	08001955 	.word	0x08001955
 800193c:	0800195f 	.word	0x0800195f
      case STARTUP_STATE:
        next_state_e = startup_state_handler();
 8001940:	f7ff feb6 	bl	80016b0 <startup_state_handler>
 8001944:	4603      	mov	r3, r0
 8001946:	71fb      	strb	r3, [r7, #7]
        break;
 8001948:	e013      	b.n	8001972 <main+0x76>
      case INSTRUCTION_WAIT_STATE:
        next_state_e = instruction_wait_state_handler();
 800194a:	f7ff fecb 	bl	80016e4 <instruction_wait_state_handler>
 800194e:	4603      	mov	r3, r0
 8001950:	71fb      	strb	r3, [r7, #7]
        break;
 8001952:	e00e      	b.n	8001972 <main+0x76>
      case EDIT_SEQUENCE_STATE:
        next_state_e = edit_sequence_state_handler();
 8001954:	f7ff ffc2 	bl	80018dc <edit_sequence_state_handler>
 8001958:	4603      	mov	r3, r0
 800195a:	71fb      	strb	r3, [r7, #7]
        break;
 800195c:	e009      	b.n	8001972 <main+0x76>
      case RUN_STATE:
        next_state_e = run_state_handler();
 800195e:	f7ff ffc5 	bl	80018ec <run_state_handler>
 8001962:	4603      	mov	r3, r0
 8001964:	71fb      	strb	r3, [r7, #7]
        break;
 8001966:	e004      	b.n	8001972 <main+0x76>
      default:
        next_state_e = startup_state_handler();
 8001968:	f7ff fea2 	bl	80016b0 <startup_state_handler>
 800196c:	4603      	mov	r3, r0
 800196e:	71fb      	strb	r3, [r7, #7]
        break;
 8001970:	bf00      	nop
    switch (next_state_e) {
 8001972:	e7d6      	b.n	8001922 <main+0x26>

08001974 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b094      	sub	sp, #80	@ 0x50
 8001978:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800197a:	f107 0320 	add.w	r3, r7, #32
 800197e:	2230      	movs	r2, #48	@ 0x30
 8001980:	2100      	movs	r1, #0
 8001982:	4618      	mov	r0, r3
 8001984:	f005 faa7 	bl	8006ed6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001988:	f107 030c 	add.w	r3, r7, #12
 800198c:	2200      	movs	r2, #0
 800198e:	601a      	str	r2, [r3, #0]
 8001990:	605a      	str	r2, [r3, #4]
 8001992:	609a      	str	r2, [r3, #8]
 8001994:	60da      	str	r2, [r3, #12]
 8001996:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001998:	2300      	movs	r3, #0
 800199a:	60bb      	str	r3, [r7, #8]
 800199c:	4b27      	ldr	r3, [pc, #156]	@ (8001a3c <SystemClock_Config+0xc8>)
 800199e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019a0:	4a26      	ldr	r2, [pc, #152]	@ (8001a3c <SystemClock_Config+0xc8>)
 80019a2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80019a6:	6413      	str	r3, [r2, #64]	@ 0x40
 80019a8:	4b24      	ldr	r3, [pc, #144]	@ (8001a3c <SystemClock_Config+0xc8>)
 80019aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019ac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019b0:	60bb      	str	r3, [r7, #8]
 80019b2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80019b4:	2300      	movs	r3, #0
 80019b6:	607b      	str	r3, [r7, #4]
 80019b8:	4b21      	ldr	r3, [pc, #132]	@ (8001a40 <SystemClock_Config+0xcc>)
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	4a20      	ldr	r2, [pc, #128]	@ (8001a40 <SystemClock_Config+0xcc>)
 80019be:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80019c2:	6013      	str	r3, [r2, #0]
 80019c4:	4b1e      	ldr	r3, [pc, #120]	@ (8001a40 <SystemClock_Config+0xcc>)
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80019cc:	607b      	str	r3, [r7, #4]
 80019ce:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80019d0:	2301      	movs	r3, #1
 80019d2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 80019d4:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
 80019d8:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80019da:	2302      	movs	r3, #2
 80019dc:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80019de:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80019e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80019e4:	2304      	movs	r3, #4
 80019e6:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 80019e8:	2364      	movs	r3, #100	@ 0x64
 80019ea:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80019ec:	2302      	movs	r3, #2
 80019ee:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80019f0:	2304      	movs	r3, #4
 80019f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80019f4:	f107 0320 	add.w	r3, r7, #32
 80019f8:	4618      	mov	r0, r3
 80019fa:	f001 fb2d 	bl	8003058 <HAL_RCC_OscConfig>
 80019fe:	4603      	mov	r3, r0
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d001      	beq.n	8001a08 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001a04:	f000 f9ae 	bl	8001d64 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a08:	230f      	movs	r3, #15
 8001a0a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a0c:	2302      	movs	r3, #2
 8001a0e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a10:	2300      	movs	r3, #0
 8001a12:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001a14:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a18:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001a1e:	f107 030c 	add.w	r3, r7, #12
 8001a22:	2103      	movs	r1, #3
 8001a24:	4618      	mov	r0, r3
 8001a26:	f001 fd8f 	bl	8003548 <HAL_RCC_ClockConfig>
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	2b00      	cmp	r3, #0
 8001a2e:	d001      	beq.n	8001a34 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8001a30:	f000 f998 	bl	8001d64 <Error_Handler>
  }
}
 8001a34:	bf00      	nop
 8001a36:	3750      	adds	r7, #80	@ 0x50
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	bd80      	pop	{r7, pc}
 8001a3c:	40023800 	.word	0x40023800
 8001a40:	40007000 	.word	0x40007000

08001a44 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001a44:	b580      	push	{r7, lr}
 8001a46:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8001a48:	4b17      	ldr	r3, [pc, #92]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a4a:	4a18      	ldr	r2, [pc, #96]	@ (8001aac <MX_SPI3_Init+0x68>)
 8001a4c:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8001a4e:	4b16      	ldr	r3, [pc, #88]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a50:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001a54:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8001a56:	4b14      	ldr	r3, [pc, #80]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a58:	2200      	movs	r2, #0
 8001a5a:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 8001a5c:	4b12      	ldr	r3, [pc, #72]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a5e:	2200      	movs	r2, #0
 8001a60:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8001a62:	4b11      	ldr	r3, [pc, #68]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a64:	2202      	movs	r2, #2
 8001a66:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 8001a68:	4b0f      	ldr	r3, [pc, #60]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a6a:	2201      	movs	r2, #1
 8001a6c:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8001a6e:	4b0e      	ldr	r3, [pc, #56]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a70:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001a74:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 8001a76:	4b0c      	ldr	r3, [pc, #48]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a78:	2228      	movs	r2, #40	@ 0x28
 8001a7a:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001a7c:	4b0a      	ldr	r3, [pc, #40]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a7e:	2200      	movs	r2, #0
 8001a80:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8001a82:	4b09      	ldr	r3, [pc, #36]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a84:	2200      	movs	r2, #0
 8001a86:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001a88:	4b07      	ldr	r3, [pc, #28]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a8a:	2200      	movs	r2, #0
 8001a8c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 10;
 8001a8e:	4b06      	ldr	r3, [pc, #24]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a90:	220a      	movs	r2, #10
 8001a92:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001a94:	4804      	ldr	r0, [pc, #16]	@ (8001aa8 <MX_SPI3_Init+0x64>)
 8001a96:	f001 ff77 	bl	8003988 <HAL_SPI_Init>
 8001a9a:	4603      	mov	r3, r0
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d001      	beq.n	8001aa4 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 8001aa0:	f000 f960 	bl	8001d64 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001aa4:	bf00      	nop
 8001aa6:	bd80      	pop	{r7, pc}
 8001aa8:	200001f0 	.word	0x200001f0
 8001aac:	40003c00 	.word	0x40003c00

08001ab0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b08e      	sub	sp, #56	@ 0x38
 8001ab4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ab6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001aba:	2200      	movs	r2, #0
 8001abc:	601a      	str	r2, [r3, #0]
 8001abe:	605a      	str	r2, [r3, #4]
 8001ac0:	609a      	str	r2, [r3, #8]
 8001ac2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ac4:	f107 0320 	add.w	r3, r7, #32
 8001ac8:	2200      	movs	r2, #0
 8001aca:	601a      	str	r2, [r3, #0]
 8001acc:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ace:	1d3b      	adds	r3, r7, #4
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	601a      	str	r2, [r3, #0]
 8001ad4:	605a      	str	r2, [r3, #4]
 8001ad6:	609a      	str	r2, [r3, #8]
 8001ad8:	60da      	str	r2, [r3, #12]
 8001ada:	611a      	str	r2, [r3, #16]
 8001adc:	615a      	str	r2, [r3, #20]
 8001ade:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001ae0:	4b32      	ldr	r3, [pc, #200]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001ae2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001ae6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100 - 1;
 8001ae8:	4b30      	ldr	r3, [pc, #192]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001aea:	2263      	movs	r2, #99	@ 0x63
 8001aec:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001aee:	4b2f      	ldr	r3, [pc, #188]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 20000 - 1;
 8001af4:	4b2d      	ldr	r3, [pc, #180]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001af6:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 8001afa:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001afc:	4b2b      	ldr	r3, [pc, #172]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001afe:	2200      	movs	r2, #0
 8001b00:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b02:	4b2a      	ldr	r3, [pc, #168]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b04:	2280      	movs	r2, #128	@ 0x80
 8001b06:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b08:	4828      	ldr	r0, [pc, #160]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b0a:	f002 fd0f 	bl	800452c <HAL_TIM_Base_Init>
 8001b0e:	4603      	mov	r3, r0
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d001      	beq.n	8001b18 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001b14:	f000 f926 	bl	8001d64 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b18:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b1c:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b1e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001b22:	4619      	mov	r1, r3
 8001b24:	4821      	ldr	r0, [pc, #132]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b26:	f002 ff1b 	bl	8004960 <HAL_TIM_ConfigClockSource>
 8001b2a:	4603      	mov	r3, r0
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d001      	beq.n	8001b34 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001b30:	f000 f918 	bl	8001d64 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001b34:	481d      	ldr	r0, [pc, #116]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b36:	f002 fd48 	bl	80045ca <HAL_TIM_PWM_Init>
 8001b3a:	4603      	mov	r3, r0
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d001      	beq.n	8001b44 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001b40:	f000 f910 	bl	8001d64 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001b44:	2300      	movs	r3, #0
 8001b46:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b48:	2300      	movs	r3, #0
 8001b4a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b4c:	f107 0320 	add.w	r3, r7, #32
 8001b50:	4619      	mov	r1, r3
 8001b52:	4816      	ldr	r0, [pc, #88]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b54:	f003 faa4 	bl	80050a0 <HAL_TIMEx_MasterConfigSynchronization>
 8001b58:	4603      	mov	r3, r0
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	d001      	beq.n	8001b62 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8001b5e:	f000 f901 	bl	8001d64 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b62:	2360      	movs	r3, #96	@ 0x60
 8001b64:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001b66:	2300      	movs	r3, #0
 8001b68:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001b6a:	2300      	movs	r3, #0
 8001b6c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001b6e:	2300      	movs	r3, #0
 8001b70:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b72:	1d3b      	adds	r3, r7, #4
 8001b74:	2200      	movs	r2, #0
 8001b76:	4619      	mov	r1, r3
 8001b78:	480c      	ldr	r0, [pc, #48]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b7a:	f002 fe2f 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001b7e:	4603      	mov	r3, r0
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	d001      	beq.n	8001b88 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8001b84:	f000 f8ee 	bl	8001d64 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001b88:	1d3b      	adds	r3, r7, #4
 8001b8a:	2204      	movs	r2, #4
 8001b8c:	4619      	mov	r1, r3
 8001b8e:	4807      	ldr	r0, [pc, #28]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001b90:	f002 fe24 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001b94:	4603      	mov	r3, r0
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d001      	beq.n	8001b9e <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 8001b9a:	f000 f8e3 	bl	8001d64 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001b9e:	4803      	ldr	r0, [pc, #12]	@ (8001bac <MX_TIM2_Init+0xfc>)
 8001ba0:	f000 f976 	bl	8001e90 <HAL_TIM_MspPostInit>

}
 8001ba4:	bf00      	nop
 8001ba6:	3738      	adds	r7, #56	@ 0x38
 8001ba8:	46bd      	mov	sp, r7
 8001baa:	bd80      	pop	{r7, pc}
 8001bac:	20000248 	.word	0x20000248

08001bb0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001bb4:	4b11      	ldr	r3, [pc, #68]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bb6:	4a12      	ldr	r2, [pc, #72]	@ (8001c00 <MX_USART1_UART_Init+0x50>)
 8001bb8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = BAUD_RATE;
 8001bba:	4b10      	ldr	r3, [pc, #64]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bbc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001bc0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001bc2:	4b0e      	ldr	r3, [pc, #56]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001bc8:	4b0c      	ldr	r3, [pc, #48]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bca:	2200      	movs	r2, #0
 8001bcc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001bce:	4b0b      	ldr	r3, [pc, #44]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bd0:	2200      	movs	r2, #0
 8001bd2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001bd4:	4b09      	ldr	r3, [pc, #36]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bd6:	220c      	movs	r2, #12
 8001bd8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001bda:	4b08      	ldr	r3, [pc, #32]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001bdc:	2200      	movs	r2, #0
 8001bde:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001be0:	4b06      	ldr	r3, [pc, #24]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001be2:	2200      	movs	r2, #0
 8001be4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001be6:	4805      	ldr	r0, [pc, #20]	@ (8001bfc <MX_USART1_UART_Init+0x4c>)
 8001be8:	f003 fac8 	bl	800517c <HAL_UART_Init>
 8001bec:	4603      	mov	r3, r0
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d001      	beq.n	8001bf6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001bf2:	f000 f8b7 	bl	8001d64 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001bf6:	bf00      	nop
 8001bf8:	bd80      	pop	{r7, pc}
 8001bfa:	bf00      	nop
 8001bfc:	20000290 	.word	0x20000290
 8001c00:	40011000 	.word	0x40011000

08001c04 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001c04:	b580      	push	{r7, lr}
 8001c06:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001c08:	4b11      	ldr	r3, [pc, #68]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c0a:	4a12      	ldr	r2, [pc, #72]	@ (8001c54 <MX_USART2_UART_Init+0x50>)
 8001c0c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = BAUD_RATE;
 8001c0e:	4b10      	ldr	r3, [pc, #64]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c10:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001c14:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001c16:	4b0e      	ldr	r3, [pc, #56]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c18:	2200      	movs	r2, #0
 8001c1a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001c1c:	4b0c      	ldr	r3, [pc, #48]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c1e:	2200      	movs	r2, #0
 8001c20:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001c22:	4b0b      	ldr	r3, [pc, #44]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c24:	2200      	movs	r2, #0
 8001c26:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001c28:	4b09      	ldr	r3, [pc, #36]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c2a:	220c      	movs	r2, #12
 8001c2c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001c2e:	4b08      	ldr	r3, [pc, #32]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c30:	2200      	movs	r2, #0
 8001c32:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001c34:	4b06      	ldr	r3, [pc, #24]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c36:	2200      	movs	r2, #0
 8001c38:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001c3a:	4805      	ldr	r0, [pc, #20]	@ (8001c50 <MX_USART2_UART_Init+0x4c>)
 8001c3c:	f003 fa9e 	bl	800517c <HAL_UART_Init>
 8001c40:	4603      	mov	r3, r0
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d001      	beq.n	8001c4a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001c46:	f000 f88d 	bl	8001d64 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001c4a:	bf00      	nop
 8001c4c:	bd80      	pop	{r7, pc}
 8001c4e:	bf00      	nop
 8001c50:	200002d8 	.word	0x200002d8
 8001c54:	40004400 	.word	0x40004400

08001c58 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	b08a      	sub	sp, #40	@ 0x28
 8001c5c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c5e:	f107 0314 	add.w	r3, r7, #20
 8001c62:	2200      	movs	r2, #0
 8001c64:	601a      	str	r2, [r3, #0]
 8001c66:	605a      	str	r2, [r3, #4]
 8001c68:	609a      	str	r2, [r3, #8]
 8001c6a:	60da      	str	r2, [r3, #12]
 8001c6c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c6e:	2300      	movs	r3, #0
 8001c70:	613b      	str	r3, [r7, #16]
 8001c72:	4b38      	ldr	r3, [pc, #224]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c76:	4a37      	ldr	r2, [pc, #220]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c78:	f043 0304 	orr.w	r3, r3, #4
 8001c7c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c7e:	4b35      	ldr	r3, [pc, #212]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c82:	f003 0304 	and.w	r3, r3, #4
 8001c86:	613b      	str	r3, [r7, #16]
 8001c88:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	60fb      	str	r3, [r7, #12]
 8001c8e:	4b31      	ldr	r3, [pc, #196]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c92:	4a30      	ldr	r2, [pc, #192]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c94:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001c98:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c9a:	4b2e      	ldr	r3, [pc, #184]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c9e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001ca2:	60fb      	str	r3, [r7, #12]
 8001ca4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	60bb      	str	r3, [r7, #8]
 8001caa:	4b2a      	ldr	r3, [pc, #168]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cae:	4a29      	ldr	r2, [pc, #164]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001cb0:	f043 0301 	orr.w	r3, r3, #1
 8001cb4:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cb6:	4b27      	ldr	r3, [pc, #156]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001cb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cba:	f003 0301 	and.w	r3, r3, #1
 8001cbe:	60bb      	str	r3, [r7, #8]
 8001cc0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	607b      	str	r3, [r7, #4]
 8001cc6:	4b23      	ldr	r3, [pc, #140]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001cc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cca:	4a22      	ldr	r2, [pc, #136]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001ccc:	f043 0302 	orr.w	r3, r3, #2
 8001cd0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cd2:	4b20      	ldr	r3, [pc, #128]	@ (8001d54 <MX_GPIO_Init+0xfc>)
 8001cd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cd6:	f003 0302 	and.w	r3, r3, #2
 8001cda:	607b      	str	r3, [r7, #4]
 8001cdc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8001cde:	2200      	movs	r2, #0
 8001ce0:	2120      	movs	r1, #32
 8001ce2:	481d      	ldr	r0, [pc, #116]	@ (8001d58 <MX_GPIO_Init+0x100>)
 8001ce4:	f001 f984 	bl	8002ff0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ADXL_CS_GPIO_Port, ADXL_CS_Pin, GPIO_PIN_RESET);
 8001ce8:	2200      	movs	r2, #0
 8001cea:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001cee:	481b      	ldr	r0, [pc, #108]	@ (8001d5c <MX_GPIO_Init+0x104>)
 8001cf0:	f001 f97e 	bl	8002ff0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001cf4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001cf8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001cfa:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001cfe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d00:	2300      	movs	r3, #0
 8001d02:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001d04:	f107 0314 	add.w	r3, r7, #20
 8001d08:	4619      	mov	r1, r3
 8001d0a:	4815      	ldr	r0, [pc, #84]	@ (8001d60 <MX_GPIO_Init+0x108>)
 8001d0c:	f000 ffec 	bl	8002ce8 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8001d10:	2320      	movs	r3, #32
 8001d12:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d14:	2301      	movs	r3, #1
 8001d16:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d18:	2300      	movs	r3, #0
 8001d1a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d1c:	2300      	movs	r3, #0
 8001d1e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8001d20:	f107 0314 	add.w	r3, r7, #20
 8001d24:	4619      	mov	r1, r3
 8001d26:	480c      	ldr	r0, [pc, #48]	@ (8001d58 <MX_GPIO_Init+0x100>)
 8001d28:	f000 ffde 	bl	8002ce8 <HAL_GPIO_Init>

  /*Configure GPIO pin : ADXL_CS_Pin */
  GPIO_InitStruct.Pin = ADXL_CS_Pin;
 8001d2c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001d30:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d32:	2301      	movs	r3, #1
 8001d34:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d36:	2300      	movs	r3, #0
 8001d38:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(ADXL_CS_GPIO_Port, &GPIO_InitStruct);
 8001d3e:	f107 0314 	add.w	r3, r7, #20
 8001d42:	4619      	mov	r1, r3
 8001d44:	4805      	ldr	r0, [pc, #20]	@ (8001d5c <MX_GPIO_Init+0x104>)
 8001d46:	f000 ffcf 	bl	8002ce8 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001d4a:	bf00      	nop
 8001d4c:	3728      	adds	r7, #40	@ 0x28
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	bd80      	pop	{r7, pc}
 8001d52:	bf00      	nop
 8001d54:	40023800 	.word	0x40023800
 8001d58:	40020000 	.word	0x40020000
 8001d5c:	40020400 	.word	0x40020400
 8001d60:	40020800 	.word	0x40020800

08001d64 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001d64:	b480      	push	{r7}
 8001d66:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001d68:	b672      	cpsid	i
}
 8001d6a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001d6c:	bf00      	nop
 8001d6e:	e7fd      	b.n	8001d6c <Error_Handler+0x8>

08001d70 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d70:	b580      	push	{r7, lr}
 8001d72:	b082      	sub	sp, #8
 8001d74:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d76:	2300      	movs	r3, #0
 8001d78:	607b      	str	r3, [r7, #4]
 8001d7a:	4b10      	ldr	r3, [pc, #64]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001d7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001d7e:	4a0f      	ldr	r2, [pc, #60]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001d80:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001d84:	6453      	str	r3, [r2, #68]	@ 0x44
 8001d86:	4b0d      	ldr	r3, [pc, #52]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001d88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001d8a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001d8e:	607b      	str	r3, [r7, #4]
 8001d90:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d92:	2300      	movs	r3, #0
 8001d94:	603b      	str	r3, [r7, #0]
 8001d96:	4b09      	ldr	r3, [pc, #36]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001d98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d9a:	4a08      	ldr	r2, [pc, #32]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001d9c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001da0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001da2:	4b06      	ldr	r3, [pc, #24]	@ (8001dbc <HAL_MspInit+0x4c>)
 8001da4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001da6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001daa:	603b      	str	r3, [r7, #0]
 8001dac:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001dae:	2007      	movs	r0, #7
 8001db0:	f000 fbde 	bl	8002570 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	40023800 	.word	0x40023800

08001dc0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b08a      	sub	sp, #40	@ 0x28
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc8:	f107 0314 	add.w	r3, r7, #20
 8001dcc:	2200      	movs	r2, #0
 8001dce:	601a      	str	r2, [r3, #0]
 8001dd0:	605a      	str	r2, [r3, #4]
 8001dd2:	609a      	str	r2, [r3, #8]
 8001dd4:	60da      	str	r2, [r3, #12]
 8001dd6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	4a19      	ldr	r2, [pc, #100]	@ (8001e44 <HAL_SPI_MspInit+0x84>)
 8001dde:	4293      	cmp	r3, r2
 8001de0:	d12b      	bne.n	8001e3a <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001de2:	2300      	movs	r3, #0
 8001de4:	613b      	str	r3, [r7, #16]
 8001de6:	4b18      	ldr	r3, [pc, #96]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dea:	4a17      	ldr	r2, [pc, #92]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001dec:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001df0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001df2:	4b15      	ldr	r3, [pc, #84]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001df4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001df6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001dfa:	613b      	str	r3, [r7, #16]
 8001dfc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001dfe:	2300      	movs	r3, #0
 8001e00:	60fb      	str	r3, [r7, #12]
 8001e02:	4b11      	ldr	r3, [pc, #68]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001e04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e06:	4a10      	ldr	r2, [pc, #64]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001e08:	f043 0302 	orr.w	r3, r3, #2
 8001e0c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e0e:	4b0e      	ldr	r3, [pc, #56]	@ (8001e48 <HAL_SPI_MspInit+0x88>)
 8001e10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e12:	f003 0302 	and.w	r3, r3, #2
 8001e16:	60fb      	str	r3, [r7, #12]
 8001e18:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration
    PB3     ------> SPI3_SCK
    PB4     ------> SPI3_MISO
    PB5     ------> SPI3_MOSI
    */
    GPIO_InitStruct.Pin = ADXL_SCL_Pin|ADXL_SDO_Pin|ADXL_SDA_Pin;
 8001e1a:	2338      	movs	r3, #56	@ 0x38
 8001e1c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1e:	2302      	movs	r3, #2
 8001e20:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e22:	2300      	movs	r3, #0
 8001e24:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e26:	2303      	movs	r3, #3
 8001e28:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001e2a:	2306      	movs	r3, #6
 8001e2c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2e:	f107 0314 	add.w	r3, r7, #20
 8001e32:	4619      	mov	r1, r3
 8001e34:	4805      	ldr	r0, [pc, #20]	@ (8001e4c <HAL_SPI_MspInit+0x8c>)
 8001e36:	f000 ff57 	bl	8002ce8 <HAL_GPIO_Init>

  /* USER CODE END SPI3_MspInit 1 */

  }

}
 8001e3a:	bf00      	nop
 8001e3c:	3728      	adds	r7, #40	@ 0x28
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bd80      	pop	{r7, pc}
 8001e42:	bf00      	nop
 8001e44:	40003c00 	.word	0x40003c00
 8001e48:	40023800 	.word	0x40023800
 8001e4c:	40020400 	.word	0x40020400

08001e50 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001e50:	b480      	push	{r7}
 8001e52:	b085      	sub	sp, #20
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001e60:	d10d      	bne.n	8001e7e <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001e62:	2300      	movs	r3, #0
 8001e64:	60fb      	str	r3, [r7, #12]
 8001e66:	4b09      	ldr	r3, [pc, #36]	@ (8001e8c <HAL_TIM_Base_MspInit+0x3c>)
 8001e68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e6a:	4a08      	ldr	r2, [pc, #32]	@ (8001e8c <HAL_TIM_Base_MspInit+0x3c>)
 8001e6c:	f043 0301 	orr.w	r3, r3, #1
 8001e70:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e72:	4b06      	ldr	r3, [pc, #24]	@ (8001e8c <HAL_TIM_Base_MspInit+0x3c>)
 8001e74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e76:	f003 0301 	and.w	r3, r3, #1
 8001e7a:	60fb      	str	r3, [r7, #12]
 8001e7c:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 8001e7e:	bf00      	nop
 8001e80:	3714      	adds	r7, #20
 8001e82:	46bd      	mov	sp, r7
 8001e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e88:	4770      	bx	lr
 8001e8a:	bf00      	nop
 8001e8c:	40023800 	.word	0x40023800

08001e90 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b088      	sub	sp, #32
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e98:	f107 030c 	add.w	r3, r7, #12
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	605a      	str	r2, [r3, #4]
 8001ea2:	609a      	str	r2, [r3, #8]
 8001ea4:	60da      	str	r2, [r3, #12]
 8001ea6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001eb0:	d11d      	bne.n	8001eee <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eb2:	2300      	movs	r3, #0
 8001eb4:	60bb      	str	r3, [r7, #8]
 8001eb6:	4b10      	ldr	r3, [pc, #64]	@ (8001ef8 <HAL_TIM_MspPostInit+0x68>)
 8001eb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001eba:	4a0f      	ldr	r2, [pc, #60]	@ (8001ef8 <HAL_TIM_MspPostInit+0x68>)
 8001ebc:	f043 0301 	orr.w	r3, r3, #1
 8001ec0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ec2:	4b0d      	ldr	r3, [pc, #52]	@ (8001ef8 <HAL_TIM_MspPostInit+0x68>)
 8001ec4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ec6:	f003 0301 	and.w	r3, r3, #1
 8001eca:	60bb      	str	r3, [r7, #8]
 8001ecc:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    PA1     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = PWM_X_Pin|PWM_Y_Pin;
 8001ece:	2303      	movs	r3, #3
 8001ed0:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed2:	2302      	movs	r3, #2
 8001ed4:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ed6:	2300      	movs	r3, #0
 8001ed8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001eda:	2300      	movs	r3, #0
 8001edc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001ede:	2301      	movs	r3, #1
 8001ee0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ee2:	f107 030c 	add.w	r3, r7, #12
 8001ee6:	4619      	mov	r1, r3
 8001ee8:	4804      	ldr	r0, [pc, #16]	@ (8001efc <HAL_TIM_MspPostInit+0x6c>)
 8001eea:	f000 fefd 	bl	8002ce8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001eee:	bf00      	nop
 8001ef0:	3720      	adds	r7, #32
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	40023800 	.word	0x40023800
 8001efc:	40020000 	.word	0x40020000

08001f00 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b08c      	sub	sp, #48	@ 0x30
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f08:	f107 031c 	add.w	r3, r7, #28
 8001f0c:	2200      	movs	r2, #0
 8001f0e:	601a      	str	r2, [r3, #0]
 8001f10:	605a      	str	r2, [r3, #4]
 8001f12:	609a      	str	r2, [r3, #8]
 8001f14:	60da      	str	r2, [r3, #12]
 8001f16:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	4a3a      	ldr	r2, [pc, #232]	@ (8002008 <HAL_UART_MspInit+0x108>)
 8001f1e:	4293      	cmp	r3, r2
 8001f20:	d135      	bne.n	8001f8e <HAL_UART_MspInit+0x8e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001f22:	2300      	movs	r3, #0
 8001f24:	61bb      	str	r3, [r7, #24]
 8001f26:	4b39      	ldr	r3, [pc, #228]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f2a:	4a38      	ldr	r2, [pc, #224]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f2c:	f043 0310 	orr.w	r3, r3, #16
 8001f30:	6453      	str	r3, [r2, #68]	@ 0x44
 8001f32:	4b36      	ldr	r3, [pc, #216]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f36:	f003 0310 	and.w	r3, r3, #16
 8001f3a:	61bb      	str	r3, [r7, #24]
 8001f3c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f3e:	2300      	movs	r3, #0
 8001f40:	617b      	str	r3, [r7, #20]
 8001f42:	4b32      	ldr	r3, [pc, #200]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f46:	4a31      	ldr	r2, [pc, #196]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f48:	f043 0301 	orr.w	r3, r3, #1
 8001f4c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f4e:	4b2f      	ldr	r3, [pc, #188]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f52:	f003 0301 	and.w	r3, r3, #1
 8001f56:	617b      	str	r3, [r7, #20]
 8001f58:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001f5a:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8001f5e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f60:	2302      	movs	r3, #2
 8001f62:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f64:	2300      	movs	r3, #0
 8001f66:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f68:	2303      	movs	r3, #3
 8001f6a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001f6c:	2307      	movs	r3, #7
 8001f6e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f70:	f107 031c 	add.w	r3, r7, #28
 8001f74:	4619      	mov	r1, r3
 8001f76:	4826      	ldr	r0, [pc, #152]	@ (8002010 <HAL_UART_MspInit+0x110>)
 8001f78:	f000 feb6 	bl	8002ce8 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8001f7c:	2200      	movs	r2, #0
 8001f7e:	2100      	movs	r1, #0
 8001f80:	2025      	movs	r0, #37	@ 0x25
 8001f82:	f000 fb00 	bl	8002586 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001f86:	2025      	movs	r0, #37	@ 0x25
 8001f88:	f000 fb19 	bl	80025be <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001f8c:	e038      	b.n	8002000 <HAL_UART_MspInit+0x100>
  else if(huart->Instance==USART2)
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4a20      	ldr	r2, [pc, #128]	@ (8002014 <HAL_UART_MspInit+0x114>)
 8001f94:	4293      	cmp	r3, r2
 8001f96:	d133      	bne.n	8002000 <HAL_UART_MspInit+0x100>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001f98:	2300      	movs	r3, #0
 8001f9a:	613b      	str	r3, [r7, #16]
 8001f9c:	4b1b      	ldr	r3, [pc, #108]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001f9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fa0:	4a1a      	ldr	r2, [pc, #104]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001fa2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001fa6:	6413      	str	r3, [r2, #64]	@ 0x40
 8001fa8:	4b18      	ldr	r3, [pc, #96]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001faa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fac:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001fb0:	613b      	str	r3, [r7, #16]
 8001fb2:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	60fb      	str	r3, [r7, #12]
 8001fb8:	4b14      	ldr	r3, [pc, #80]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001fba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fbc:	4a13      	ldr	r2, [pc, #76]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001fbe:	f043 0301 	orr.w	r3, r3, #1
 8001fc2:	6313      	str	r3, [r2, #48]	@ 0x30
 8001fc4:	4b11      	ldr	r3, [pc, #68]	@ (800200c <HAL_UART_MspInit+0x10c>)
 8001fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fc8:	f003 0301 	and.w	r3, r3, #1
 8001fcc:	60fb      	str	r3, [r7, #12]
 8001fce:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001fd0:	230c      	movs	r3, #12
 8001fd2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd4:	2302      	movs	r3, #2
 8001fd6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd8:	2300      	movs	r3, #0
 8001fda:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fdc:	2303      	movs	r3, #3
 8001fde:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001fe0:	2307      	movs	r3, #7
 8001fe2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fe4:	f107 031c 	add.w	r3, r7, #28
 8001fe8:	4619      	mov	r1, r3
 8001fea:	4809      	ldr	r0, [pc, #36]	@ (8002010 <HAL_UART_MspInit+0x110>)
 8001fec:	f000 fe7c 	bl	8002ce8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	2100      	movs	r1, #0
 8001ff4:	2026      	movs	r0, #38	@ 0x26
 8001ff6:	f000 fac6 	bl	8002586 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001ffa:	2026      	movs	r0, #38	@ 0x26
 8001ffc:	f000 fadf 	bl	80025be <HAL_NVIC_EnableIRQ>
}
 8002000:	bf00      	nop
 8002002:	3730      	adds	r7, #48	@ 0x30
 8002004:	46bd      	mov	sp, r7
 8002006:	bd80      	pop	{r7, pc}
 8002008:	40011000 	.word	0x40011000
 800200c:	40023800 	.word	0x40023800
 8002010:	40020000 	.word	0x40020000
 8002014:	40004400 	.word	0x40004400

08002018 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002018:	b480      	push	{r7}
 800201a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800201c:	bf00      	nop
 800201e:	e7fd      	b.n	800201c <NMI_Handler+0x4>

08002020 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002020:	b480      	push	{r7}
 8002022:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002024:	bf00      	nop
 8002026:	e7fd      	b.n	8002024 <HardFault_Handler+0x4>

08002028 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002028:	b480      	push	{r7}
 800202a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800202c:	bf00      	nop
 800202e:	e7fd      	b.n	800202c <MemManage_Handler+0x4>

08002030 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002030:	b480      	push	{r7}
 8002032:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002034:	bf00      	nop
 8002036:	e7fd      	b.n	8002034 <BusFault_Handler+0x4>

08002038 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002038:	b480      	push	{r7}
 800203a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800203c:	bf00      	nop
 800203e:	e7fd      	b.n	800203c <UsageFault_Handler+0x4>

08002040 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002040:	b480      	push	{r7}
 8002042:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002044:	bf00      	nop
 8002046:	46bd      	mov	sp, r7
 8002048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800204c:	4770      	bx	lr

0800204e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800204e:	b480      	push	{r7}
 8002050:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002052:	bf00      	nop
 8002054:	46bd      	mov	sp, r7
 8002056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205a:	4770      	bx	lr

0800205c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800205c:	b480      	push	{r7}
 800205e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002060:	bf00      	nop
 8002062:	46bd      	mov	sp, r7
 8002064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002068:	4770      	bx	lr

0800206a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800206a:	b580      	push	{r7, lr}
 800206c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800206e:	f000 f96b 	bl	8002348 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002072:	bf00      	nop
 8002074:	bd80      	pop	{r7, pc}
	...

08002078 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002078:	b580      	push	{r7, lr}
 800207a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800207c:	4802      	ldr	r0, [pc, #8]	@ (8002088 <USART1_IRQHandler+0x10>)
 800207e:	f003 f97d 	bl	800537c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002082:	bf00      	nop
 8002084:	bd80      	pop	{r7, pc}
 8002086:	bf00      	nop
 8002088:	20000290 	.word	0x20000290

0800208c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 800208c:	b580      	push	{r7, lr}
 800208e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002090:	4802      	ldr	r0, [pc, #8]	@ (800209c <USART2_IRQHandler+0x10>)
 8002092:	f003 f973 	bl	800537c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002096:	bf00      	nop
 8002098:	bd80      	pop	{r7, pc}
 800209a:	bf00      	nop
 800209c:	200002d8 	.word	0x200002d8

080020a0 <_getpid>:
 80020a0:	b480      	push	{r7}
 80020a2:	af00      	add	r7, sp, #0
 80020a4:	2301      	movs	r3, #1
 80020a6:	4618      	mov	r0, r3
 80020a8:	46bd      	mov	sp, r7
 80020aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ae:	4770      	bx	lr

080020b0 <_kill>:
 80020b0:	b580      	push	{r7, lr}
 80020b2:	b082      	sub	sp, #8
 80020b4:	af00      	add	r7, sp, #0
 80020b6:	6078      	str	r0, [r7, #4]
 80020b8:	6039      	str	r1, [r7, #0]
 80020ba:	f004 ffd7 	bl	800706c <__errno>
 80020be:	4603      	mov	r3, r0
 80020c0:	2216      	movs	r2, #22
 80020c2:	601a      	str	r2, [r3, #0]
 80020c4:	f04f 33ff 	mov.w	r3, #4294967295
 80020c8:	4618      	mov	r0, r3
 80020ca:	3708      	adds	r7, #8
 80020cc:	46bd      	mov	sp, r7
 80020ce:	bd80      	pop	{r7, pc}

080020d0 <_exit>:
 80020d0:	b580      	push	{r7, lr}
 80020d2:	b082      	sub	sp, #8
 80020d4:	af00      	add	r7, sp, #0
 80020d6:	6078      	str	r0, [r7, #4]
 80020d8:	f04f 31ff 	mov.w	r1, #4294967295
 80020dc:	6878      	ldr	r0, [r7, #4]
 80020de:	f7ff ffe7 	bl	80020b0 <_kill>
 80020e2:	bf00      	nop
 80020e4:	e7fd      	b.n	80020e2 <_exit+0x12>

080020e6 <_read>:
 80020e6:	b580      	push	{r7, lr}
 80020e8:	b086      	sub	sp, #24
 80020ea:	af00      	add	r7, sp, #0
 80020ec:	60f8      	str	r0, [r7, #12]
 80020ee:	60b9      	str	r1, [r7, #8]
 80020f0:	607a      	str	r2, [r7, #4]
 80020f2:	2300      	movs	r3, #0
 80020f4:	617b      	str	r3, [r7, #20]
 80020f6:	e00a      	b.n	800210e <_read+0x28>
 80020f8:	f3af 8000 	nop.w
 80020fc:	4601      	mov	r1, r0
 80020fe:	68bb      	ldr	r3, [r7, #8]
 8002100:	1c5a      	adds	r2, r3, #1
 8002102:	60ba      	str	r2, [r7, #8]
 8002104:	b2ca      	uxtb	r2, r1
 8002106:	701a      	strb	r2, [r3, #0]
 8002108:	697b      	ldr	r3, [r7, #20]
 800210a:	3301      	adds	r3, #1
 800210c:	617b      	str	r3, [r7, #20]
 800210e:	697a      	ldr	r2, [r7, #20]
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	429a      	cmp	r2, r3
 8002114:	dbf0      	blt.n	80020f8 <_read+0x12>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	4618      	mov	r0, r3
 800211a:	3718      	adds	r7, #24
 800211c:	46bd      	mov	sp, r7
 800211e:	bd80      	pop	{r7, pc}

08002120 <_write>:
 8002120:	b580      	push	{r7, lr}
 8002122:	b086      	sub	sp, #24
 8002124:	af00      	add	r7, sp, #0
 8002126:	60f8      	str	r0, [r7, #12]
 8002128:	60b9      	str	r1, [r7, #8]
 800212a:	607a      	str	r2, [r7, #4]
 800212c:	2300      	movs	r3, #0
 800212e:	617b      	str	r3, [r7, #20]
 8002130:	e009      	b.n	8002146 <_write+0x26>
 8002132:	68bb      	ldr	r3, [r7, #8]
 8002134:	1c5a      	adds	r2, r3, #1
 8002136:	60ba      	str	r2, [r7, #8]
 8002138:	781b      	ldrb	r3, [r3, #0]
 800213a:	4618      	mov	r0, r3
 800213c:	f3af 8000 	nop.w
 8002140:	697b      	ldr	r3, [r7, #20]
 8002142:	3301      	adds	r3, #1
 8002144:	617b      	str	r3, [r7, #20]
 8002146:	697a      	ldr	r2, [r7, #20]
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	429a      	cmp	r2, r3
 800214c:	dbf1      	blt.n	8002132 <_write+0x12>
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	4618      	mov	r0, r3
 8002152:	3718      	adds	r7, #24
 8002154:	46bd      	mov	sp, r7
 8002156:	bd80      	pop	{r7, pc}

08002158 <_close>:
 8002158:	b480      	push	{r7}
 800215a:	b083      	sub	sp, #12
 800215c:	af00      	add	r7, sp, #0
 800215e:	6078      	str	r0, [r7, #4]
 8002160:	f04f 33ff 	mov.w	r3, #4294967295
 8002164:	4618      	mov	r0, r3
 8002166:	370c      	adds	r7, #12
 8002168:	46bd      	mov	sp, r7
 800216a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800216e:	4770      	bx	lr

08002170 <_fstat>:
 8002170:	b480      	push	{r7}
 8002172:	b083      	sub	sp, #12
 8002174:	af00      	add	r7, sp, #0
 8002176:	6078      	str	r0, [r7, #4]
 8002178:	6039      	str	r1, [r7, #0]
 800217a:	683b      	ldr	r3, [r7, #0]
 800217c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002180:	605a      	str	r2, [r3, #4]
 8002182:	2300      	movs	r3, #0
 8002184:	4618      	mov	r0, r3
 8002186:	370c      	adds	r7, #12
 8002188:	46bd      	mov	sp, r7
 800218a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800218e:	4770      	bx	lr

08002190 <_isatty>:
 8002190:	b480      	push	{r7}
 8002192:	b083      	sub	sp, #12
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	2301      	movs	r3, #1
 800219a:	4618      	mov	r0, r3
 800219c:	370c      	adds	r7, #12
 800219e:	46bd      	mov	sp, r7
 80021a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a4:	4770      	bx	lr

080021a6 <_lseek>:
 80021a6:	b480      	push	{r7}
 80021a8:	b085      	sub	sp, #20
 80021aa:	af00      	add	r7, sp, #0
 80021ac:	60f8      	str	r0, [r7, #12]
 80021ae:	60b9      	str	r1, [r7, #8]
 80021b0:	607a      	str	r2, [r7, #4]
 80021b2:	2300      	movs	r3, #0
 80021b4:	4618      	mov	r0, r3
 80021b6:	3714      	adds	r7, #20
 80021b8:	46bd      	mov	sp, r7
 80021ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021be:	4770      	bx	lr

080021c0 <_sbrk>:
 80021c0:	b580      	push	{r7, lr}
 80021c2:	b086      	sub	sp, #24
 80021c4:	af00      	add	r7, sp, #0
 80021c6:	6078      	str	r0, [r7, #4]
 80021c8:	4a14      	ldr	r2, [pc, #80]	@ (800221c <_sbrk+0x5c>)
 80021ca:	4b15      	ldr	r3, [pc, #84]	@ (8002220 <_sbrk+0x60>)
 80021cc:	1ad3      	subs	r3, r2, r3
 80021ce:	617b      	str	r3, [r7, #20]
 80021d0:	697b      	ldr	r3, [r7, #20]
 80021d2:	613b      	str	r3, [r7, #16]
 80021d4:	4b13      	ldr	r3, [pc, #76]	@ (8002224 <_sbrk+0x64>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	2b00      	cmp	r3, #0
 80021da:	d102      	bne.n	80021e2 <_sbrk+0x22>
 80021dc:	4b11      	ldr	r3, [pc, #68]	@ (8002224 <_sbrk+0x64>)
 80021de:	4a12      	ldr	r2, [pc, #72]	@ (8002228 <_sbrk+0x68>)
 80021e0:	601a      	str	r2, [r3, #0]
 80021e2:	4b10      	ldr	r3, [pc, #64]	@ (8002224 <_sbrk+0x64>)
 80021e4:	681a      	ldr	r2, [r3, #0]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	4413      	add	r3, r2
 80021ea:	693a      	ldr	r2, [r7, #16]
 80021ec:	429a      	cmp	r2, r3
 80021ee:	d207      	bcs.n	8002200 <_sbrk+0x40>
 80021f0:	f004 ff3c 	bl	800706c <__errno>
 80021f4:	4603      	mov	r3, r0
 80021f6:	220c      	movs	r2, #12
 80021f8:	601a      	str	r2, [r3, #0]
 80021fa:	f04f 33ff 	mov.w	r3, #4294967295
 80021fe:	e009      	b.n	8002214 <_sbrk+0x54>
 8002200:	4b08      	ldr	r3, [pc, #32]	@ (8002224 <_sbrk+0x64>)
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	60fb      	str	r3, [r7, #12]
 8002206:	4b07      	ldr	r3, [pc, #28]	@ (8002224 <_sbrk+0x64>)
 8002208:	681a      	ldr	r2, [r3, #0]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	4413      	add	r3, r2
 800220e:	4a05      	ldr	r2, [pc, #20]	@ (8002224 <_sbrk+0x64>)
 8002210:	6013      	str	r3, [r2, #0]
 8002212:	68fb      	ldr	r3, [r7, #12]
 8002214:	4618      	mov	r0, r3
 8002216:	3718      	adds	r7, #24
 8002218:	46bd      	mov	sp, r7
 800221a:	bd80      	pop	{r7, pc}
 800221c:	20020000 	.word	0x20020000
 8002220:	00000400 	.word	0x00000400
 8002224:	200004a8 	.word	0x200004a8
 8002228:	20000620 	.word	0x20000620

0800222c <SystemInit>:
 800222c:	b480      	push	{r7}
 800222e:	af00      	add	r7, sp, #0
 8002230:	4b06      	ldr	r3, [pc, #24]	@ (800224c <SystemInit+0x20>)
 8002232:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002236:	4a05      	ldr	r2, [pc, #20]	@ (800224c <SystemInit+0x20>)
 8002238:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800223c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002240:	bf00      	nop
 8002242:	46bd      	mov	sp, r7
 8002244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002248:	4770      	bx	lr
 800224a:	bf00      	nop
 800224c:	e000ed00 	.word	0xe000ed00

08002250 <Reset_Handler>:
 8002250:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002288 <LoopFillZerobss+0x12>
 8002254:	480d      	ldr	r0, [pc, #52]	@ (800228c <LoopFillZerobss+0x16>)
 8002256:	490e      	ldr	r1, [pc, #56]	@ (8002290 <LoopFillZerobss+0x1a>)
 8002258:	4a0e      	ldr	r2, [pc, #56]	@ (8002294 <LoopFillZerobss+0x1e>)
 800225a:	2300      	movs	r3, #0
 800225c:	e002      	b.n	8002264 <LoopCopyDataInit>

0800225e <CopyDataInit>:
 800225e:	58d4      	ldr	r4, [r2, r3]
 8002260:	50c4      	str	r4, [r0, r3]
 8002262:	3304      	adds	r3, #4

08002264 <LoopCopyDataInit>:
 8002264:	18c4      	adds	r4, r0, r3
 8002266:	428c      	cmp	r4, r1
 8002268:	d3f9      	bcc.n	800225e <CopyDataInit>
 800226a:	4a0b      	ldr	r2, [pc, #44]	@ (8002298 <LoopFillZerobss+0x22>)
 800226c:	4c0b      	ldr	r4, [pc, #44]	@ (800229c <LoopFillZerobss+0x26>)
 800226e:	2300      	movs	r3, #0
 8002270:	e001      	b.n	8002276 <LoopFillZerobss>

08002272 <FillZerobss>:
 8002272:	6013      	str	r3, [r2, #0]
 8002274:	3204      	adds	r2, #4

08002276 <LoopFillZerobss>:
 8002276:	42a2      	cmp	r2, r4
 8002278:	d3fb      	bcc.n	8002272 <FillZerobss>
 800227a:	f7ff ffd7 	bl	800222c <SystemInit>
 800227e:	f004 fefb 	bl	8007078 <__libc_init_array>
 8002282:	f7ff fb3b 	bl	80018fc <main>
 8002286:	4770      	bx	lr
 8002288:	20020000 	.word	0x20020000
 800228c:	20000000 	.word	0x20000000
 8002290:	200001d4 	.word	0x200001d4
 8002294:	08009614 	.word	0x08009614
 8002298:	200001d4 	.word	0x200001d4
 800229c:	2000061c 	.word	0x2000061c

080022a0 <ADC_IRQHandler>:
 80022a0:	e7fe      	b.n	80022a0 <ADC_IRQHandler>
	...

080022a4 <HAL_Init>:
 80022a4:	b580      	push	{r7, lr}
 80022a6:	af00      	add	r7, sp, #0
 80022a8:	4b0e      	ldr	r3, [pc, #56]	@ (80022e4 <HAL_Init+0x40>)
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	4a0d      	ldr	r2, [pc, #52]	@ (80022e4 <HAL_Init+0x40>)
 80022ae:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80022b2:	6013      	str	r3, [r2, #0]
 80022b4:	4b0b      	ldr	r3, [pc, #44]	@ (80022e4 <HAL_Init+0x40>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4a0a      	ldr	r2, [pc, #40]	@ (80022e4 <HAL_Init+0x40>)
 80022ba:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80022be:	6013      	str	r3, [r2, #0]
 80022c0:	4b08      	ldr	r3, [pc, #32]	@ (80022e4 <HAL_Init+0x40>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	4a07      	ldr	r2, [pc, #28]	@ (80022e4 <HAL_Init+0x40>)
 80022c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80022ca:	6013      	str	r3, [r2, #0]
 80022cc:	2003      	movs	r0, #3
 80022ce:	f000 f94f 	bl	8002570 <HAL_NVIC_SetPriorityGrouping>
 80022d2:	2000      	movs	r0, #0
 80022d4:	f000 f808 	bl	80022e8 <HAL_InitTick>
 80022d8:	f7ff fd4a 	bl	8001d70 <HAL_MspInit>
 80022dc:	2300      	movs	r3, #0
 80022de:	4618      	mov	r0, r3
 80022e0:	bd80      	pop	{r7, pc}
 80022e2:	bf00      	nop
 80022e4:	40023c00 	.word	0x40023c00

080022e8 <HAL_InitTick>:
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b082      	sub	sp, #8
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	4b12      	ldr	r3, [pc, #72]	@ (800233c <HAL_InitTick+0x54>)
 80022f2:	681a      	ldr	r2, [r3, #0]
 80022f4:	4b12      	ldr	r3, [pc, #72]	@ (8002340 <HAL_InitTick+0x58>)
 80022f6:	781b      	ldrb	r3, [r3, #0]
 80022f8:	4619      	mov	r1, r3
 80022fa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80022fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8002302:	fbb2 f3f3 	udiv	r3, r2, r3
 8002306:	4618      	mov	r0, r3
 8002308:	f000 f967 	bl	80025da <HAL_SYSTICK_Config>
 800230c:	4603      	mov	r3, r0
 800230e:	2b00      	cmp	r3, #0
 8002310:	d001      	beq.n	8002316 <HAL_InitTick+0x2e>
 8002312:	2301      	movs	r3, #1
 8002314:	e00e      	b.n	8002334 <HAL_InitTick+0x4c>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	2b0f      	cmp	r3, #15
 800231a:	d80a      	bhi.n	8002332 <HAL_InitTick+0x4a>
 800231c:	2200      	movs	r2, #0
 800231e:	6879      	ldr	r1, [r7, #4]
 8002320:	f04f 30ff 	mov.w	r0, #4294967295
 8002324:	f000 f92f 	bl	8002586 <HAL_NVIC_SetPriority>
 8002328:	4a06      	ldr	r2, [pc, #24]	@ (8002344 <HAL_InitTick+0x5c>)
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	6013      	str	r3, [r2, #0]
 800232e:	2300      	movs	r3, #0
 8002330:	e000      	b.n	8002334 <HAL_InitTick+0x4c>
 8002332:	2301      	movs	r3, #1
 8002334:	4618      	mov	r0, r3
 8002336:	3708      	adds	r7, #8
 8002338:	46bd      	mov	sp, r7
 800233a:	bd80      	pop	{r7, pc}
 800233c:	20000000 	.word	0x20000000
 8002340:	20000008 	.word	0x20000008
 8002344:	20000004 	.word	0x20000004

08002348 <HAL_IncTick>:
 8002348:	b480      	push	{r7}
 800234a:	af00      	add	r7, sp, #0
 800234c:	4b06      	ldr	r3, [pc, #24]	@ (8002368 <HAL_IncTick+0x20>)
 800234e:	781b      	ldrb	r3, [r3, #0]
 8002350:	461a      	mov	r2, r3
 8002352:	4b06      	ldr	r3, [pc, #24]	@ (800236c <HAL_IncTick+0x24>)
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	4413      	add	r3, r2
 8002358:	4a04      	ldr	r2, [pc, #16]	@ (800236c <HAL_IncTick+0x24>)
 800235a:	6013      	str	r3, [r2, #0]
 800235c:	bf00      	nop
 800235e:	46bd      	mov	sp, r7
 8002360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002364:	4770      	bx	lr
 8002366:	bf00      	nop
 8002368:	20000008 	.word	0x20000008
 800236c:	200004ac 	.word	0x200004ac

08002370 <HAL_GetTick>:
 8002370:	b480      	push	{r7}
 8002372:	af00      	add	r7, sp, #0
 8002374:	4b03      	ldr	r3, [pc, #12]	@ (8002384 <HAL_GetTick+0x14>)
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4618      	mov	r0, r3
 800237a:	46bd      	mov	sp, r7
 800237c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002380:	4770      	bx	lr
 8002382:	bf00      	nop
 8002384:	200004ac 	.word	0x200004ac

08002388 <HAL_Delay>:
 8002388:	b580      	push	{r7, lr}
 800238a:	b084      	sub	sp, #16
 800238c:	af00      	add	r7, sp, #0
 800238e:	6078      	str	r0, [r7, #4]
 8002390:	f7ff ffee 	bl	8002370 <HAL_GetTick>
 8002394:	60b8      	str	r0, [r7, #8]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	60fb      	str	r3, [r7, #12]
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80023a0:	d005      	beq.n	80023ae <HAL_Delay+0x26>
 80023a2:	4b0a      	ldr	r3, [pc, #40]	@ (80023cc <HAL_Delay+0x44>)
 80023a4:	781b      	ldrb	r3, [r3, #0]
 80023a6:	461a      	mov	r2, r3
 80023a8:	68fb      	ldr	r3, [r7, #12]
 80023aa:	4413      	add	r3, r2
 80023ac:	60fb      	str	r3, [r7, #12]
 80023ae:	bf00      	nop
 80023b0:	f7ff ffde 	bl	8002370 <HAL_GetTick>
 80023b4:	4602      	mov	r2, r0
 80023b6:	68bb      	ldr	r3, [r7, #8]
 80023b8:	1ad3      	subs	r3, r2, r3
 80023ba:	68fa      	ldr	r2, [r7, #12]
 80023bc:	429a      	cmp	r2, r3
 80023be:	d8f7      	bhi.n	80023b0 <HAL_Delay+0x28>
 80023c0:	bf00      	nop
 80023c2:	bf00      	nop
 80023c4:	3710      	adds	r7, #16
 80023c6:	46bd      	mov	sp, r7
 80023c8:	bd80      	pop	{r7, pc}
 80023ca:	bf00      	nop
 80023cc:	20000008 	.word	0x20000008

080023d0 <__NVIC_SetPriorityGrouping>:
 80023d0:	b480      	push	{r7}
 80023d2:	b085      	sub	sp, #20
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	f003 0307 	and.w	r3, r3, #7
 80023de:	60fb      	str	r3, [r7, #12]
 80023e0:	4b0c      	ldr	r3, [pc, #48]	@ (8002414 <__NVIC_SetPriorityGrouping+0x44>)
 80023e2:	68db      	ldr	r3, [r3, #12]
 80023e4:	60bb      	str	r3, [r7, #8]
 80023e6:	68ba      	ldr	r2, [r7, #8]
 80023e8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80023ec:	4013      	ands	r3, r2
 80023ee:	60bb      	str	r3, [r7, #8]
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	021a      	lsls	r2, r3, #8
 80023f4:	68bb      	ldr	r3, [r7, #8]
 80023f6:	4313      	orrs	r3, r2
 80023f8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80023fc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002400:	60bb      	str	r3, [r7, #8]
 8002402:	4a04      	ldr	r2, [pc, #16]	@ (8002414 <__NVIC_SetPriorityGrouping+0x44>)
 8002404:	68bb      	ldr	r3, [r7, #8]
 8002406:	60d3      	str	r3, [r2, #12]
 8002408:	bf00      	nop
 800240a:	3714      	adds	r7, #20
 800240c:	46bd      	mov	sp, r7
 800240e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002412:	4770      	bx	lr
 8002414:	e000ed00 	.word	0xe000ed00

08002418 <__NVIC_GetPriorityGrouping>:
 8002418:	b480      	push	{r7}
 800241a:	af00      	add	r7, sp, #0
 800241c:	4b04      	ldr	r3, [pc, #16]	@ (8002430 <__NVIC_GetPriorityGrouping+0x18>)
 800241e:	68db      	ldr	r3, [r3, #12]
 8002420:	0a1b      	lsrs	r3, r3, #8
 8002422:	f003 0307 	and.w	r3, r3, #7
 8002426:	4618      	mov	r0, r3
 8002428:	46bd      	mov	sp, r7
 800242a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800242e:	4770      	bx	lr
 8002430:	e000ed00 	.word	0xe000ed00

08002434 <__NVIC_EnableIRQ>:
 8002434:	b480      	push	{r7}
 8002436:	b083      	sub	sp, #12
 8002438:	af00      	add	r7, sp, #0
 800243a:	4603      	mov	r3, r0
 800243c:	71fb      	strb	r3, [r7, #7]
 800243e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002442:	2b00      	cmp	r3, #0
 8002444:	db0b      	blt.n	800245e <__NVIC_EnableIRQ+0x2a>
 8002446:	79fb      	ldrb	r3, [r7, #7]
 8002448:	f003 021f 	and.w	r2, r3, #31
 800244c:	4907      	ldr	r1, [pc, #28]	@ (800246c <__NVIC_EnableIRQ+0x38>)
 800244e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002452:	095b      	lsrs	r3, r3, #5
 8002454:	2001      	movs	r0, #1
 8002456:	fa00 f202 	lsl.w	r2, r0, r2
 800245a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800245e:	bf00      	nop
 8002460:	370c      	adds	r7, #12
 8002462:	46bd      	mov	sp, r7
 8002464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002468:	4770      	bx	lr
 800246a:	bf00      	nop
 800246c:	e000e100 	.word	0xe000e100

08002470 <__NVIC_SetPriority>:
 8002470:	b480      	push	{r7}
 8002472:	b083      	sub	sp, #12
 8002474:	af00      	add	r7, sp, #0
 8002476:	4603      	mov	r3, r0
 8002478:	6039      	str	r1, [r7, #0]
 800247a:	71fb      	strb	r3, [r7, #7]
 800247c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002480:	2b00      	cmp	r3, #0
 8002482:	db0a      	blt.n	800249a <__NVIC_SetPriority+0x2a>
 8002484:	683b      	ldr	r3, [r7, #0]
 8002486:	b2da      	uxtb	r2, r3
 8002488:	490c      	ldr	r1, [pc, #48]	@ (80024bc <__NVIC_SetPriority+0x4c>)
 800248a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800248e:	0112      	lsls	r2, r2, #4
 8002490:	b2d2      	uxtb	r2, r2
 8002492:	440b      	add	r3, r1
 8002494:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002498:	e00a      	b.n	80024b0 <__NVIC_SetPriority+0x40>
 800249a:	683b      	ldr	r3, [r7, #0]
 800249c:	b2da      	uxtb	r2, r3
 800249e:	4908      	ldr	r1, [pc, #32]	@ (80024c0 <__NVIC_SetPriority+0x50>)
 80024a0:	79fb      	ldrb	r3, [r7, #7]
 80024a2:	f003 030f 	and.w	r3, r3, #15
 80024a6:	3b04      	subs	r3, #4
 80024a8:	0112      	lsls	r2, r2, #4
 80024aa:	b2d2      	uxtb	r2, r2
 80024ac:	440b      	add	r3, r1
 80024ae:	761a      	strb	r2, [r3, #24]
 80024b0:	bf00      	nop
 80024b2:	370c      	adds	r7, #12
 80024b4:	46bd      	mov	sp, r7
 80024b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ba:	4770      	bx	lr
 80024bc:	e000e100 	.word	0xe000e100
 80024c0:	e000ed00 	.word	0xe000ed00

080024c4 <NVIC_EncodePriority>:
 80024c4:	b480      	push	{r7}
 80024c6:	b089      	sub	sp, #36	@ 0x24
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	60f8      	str	r0, [r7, #12]
 80024cc:	60b9      	str	r1, [r7, #8]
 80024ce:	607a      	str	r2, [r7, #4]
 80024d0:	68fb      	ldr	r3, [r7, #12]
 80024d2:	f003 0307 	and.w	r3, r3, #7
 80024d6:	61fb      	str	r3, [r7, #28]
 80024d8:	69fb      	ldr	r3, [r7, #28]
 80024da:	f1c3 0307 	rsb	r3, r3, #7
 80024de:	2b04      	cmp	r3, #4
 80024e0:	bf28      	it	cs
 80024e2:	2304      	movcs	r3, #4
 80024e4:	61bb      	str	r3, [r7, #24]
 80024e6:	69fb      	ldr	r3, [r7, #28]
 80024e8:	3304      	adds	r3, #4
 80024ea:	2b06      	cmp	r3, #6
 80024ec:	d902      	bls.n	80024f4 <NVIC_EncodePriority+0x30>
 80024ee:	69fb      	ldr	r3, [r7, #28]
 80024f0:	3b03      	subs	r3, #3
 80024f2:	e000      	b.n	80024f6 <NVIC_EncodePriority+0x32>
 80024f4:	2300      	movs	r3, #0
 80024f6:	617b      	str	r3, [r7, #20]
 80024f8:	f04f 32ff 	mov.w	r2, #4294967295
 80024fc:	69bb      	ldr	r3, [r7, #24]
 80024fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002502:	43da      	mvns	r2, r3
 8002504:	68bb      	ldr	r3, [r7, #8]
 8002506:	401a      	ands	r2, r3
 8002508:	697b      	ldr	r3, [r7, #20]
 800250a:	409a      	lsls	r2, r3
 800250c:	f04f 31ff 	mov.w	r1, #4294967295
 8002510:	697b      	ldr	r3, [r7, #20]
 8002512:	fa01 f303 	lsl.w	r3, r1, r3
 8002516:	43d9      	mvns	r1, r3
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	400b      	ands	r3, r1
 800251c:	4313      	orrs	r3, r2
 800251e:	4618      	mov	r0, r3
 8002520:	3724      	adds	r7, #36	@ 0x24
 8002522:	46bd      	mov	sp, r7
 8002524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002528:	4770      	bx	lr
	...

0800252c <SysTick_Config>:
 800252c:	b580      	push	{r7, lr}
 800252e:	b082      	sub	sp, #8
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	3b01      	subs	r3, #1
 8002538:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800253c:	d301      	bcc.n	8002542 <SysTick_Config+0x16>
 800253e:	2301      	movs	r3, #1
 8002540:	e00f      	b.n	8002562 <SysTick_Config+0x36>
 8002542:	4a0a      	ldr	r2, [pc, #40]	@ (800256c <SysTick_Config+0x40>)
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	3b01      	subs	r3, #1
 8002548:	6053      	str	r3, [r2, #4]
 800254a:	210f      	movs	r1, #15
 800254c:	f04f 30ff 	mov.w	r0, #4294967295
 8002550:	f7ff ff8e 	bl	8002470 <__NVIC_SetPriority>
 8002554:	4b05      	ldr	r3, [pc, #20]	@ (800256c <SysTick_Config+0x40>)
 8002556:	2200      	movs	r2, #0
 8002558:	609a      	str	r2, [r3, #8]
 800255a:	4b04      	ldr	r3, [pc, #16]	@ (800256c <SysTick_Config+0x40>)
 800255c:	2207      	movs	r2, #7
 800255e:	601a      	str	r2, [r3, #0]
 8002560:	2300      	movs	r3, #0
 8002562:	4618      	mov	r0, r3
 8002564:	3708      	adds	r7, #8
 8002566:	46bd      	mov	sp, r7
 8002568:	bd80      	pop	{r7, pc}
 800256a:	bf00      	nop
 800256c:	e000e010 	.word	0xe000e010

08002570 <HAL_NVIC_SetPriorityGrouping>:
 8002570:	b580      	push	{r7, lr}
 8002572:	b082      	sub	sp, #8
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
 8002578:	6878      	ldr	r0, [r7, #4]
 800257a:	f7ff ff29 	bl	80023d0 <__NVIC_SetPriorityGrouping>
 800257e:	bf00      	nop
 8002580:	3708      	adds	r7, #8
 8002582:	46bd      	mov	sp, r7
 8002584:	bd80      	pop	{r7, pc}

08002586 <HAL_NVIC_SetPriority>:
 8002586:	b580      	push	{r7, lr}
 8002588:	b086      	sub	sp, #24
 800258a:	af00      	add	r7, sp, #0
 800258c:	4603      	mov	r3, r0
 800258e:	60b9      	str	r1, [r7, #8]
 8002590:	607a      	str	r2, [r7, #4]
 8002592:	73fb      	strb	r3, [r7, #15]
 8002594:	2300      	movs	r3, #0
 8002596:	617b      	str	r3, [r7, #20]
 8002598:	f7ff ff3e 	bl	8002418 <__NVIC_GetPriorityGrouping>
 800259c:	6178      	str	r0, [r7, #20]
 800259e:	687a      	ldr	r2, [r7, #4]
 80025a0:	68b9      	ldr	r1, [r7, #8]
 80025a2:	6978      	ldr	r0, [r7, #20]
 80025a4:	f7ff ff8e 	bl	80024c4 <NVIC_EncodePriority>
 80025a8:	4602      	mov	r2, r0
 80025aa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80025ae:	4611      	mov	r1, r2
 80025b0:	4618      	mov	r0, r3
 80025b2:	f7ff ff5d 	bl	8002470 <__NVIC_SetPriority>
 80025b6:	bf00      	nop
 80025b8:	3718      	adds	r7, #24
 80025ba:	46bd      	mov	sp, r7
 80025bc:	bd80      	pop	{r7, pc}

080025be <HAL_NVIC_EnableIRQ>:
 80025be:	b580      	push	{r7, lr}
 80025c0:	b082      	sub	sp, #8
 80025c2:	af00      	add	r7, sp, #0
 80025c4:	4603      	mov	r3, r0
 80025c6:	71fb      	strb	r3, [r7, #7]
 80025c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025cc:	4618      	mov	r0, r3
 80025ce:	f7ff ff31 	bl	8002434 <__NVIC_EnableIRQ>
 80025d2:	bf00      	nop
 80025d4:	3708      	adds	r7, #8
 80025d6:	46bd      	mov	sp, r7
 80025d8:	bd80      	pop	{r7, pc}

080025da <HAL_SYSTICK_Config>:
 80025da:	b580      	push	{r7, lr}
 80025dc:	b082      	sub	sp, #8
 80025de:	af00      	add	r7, sp, #0
 80025e0:	6078      	str	r0, [r7, #4]
 80025e2:	6878      	ldr	r0, [r7, #4]
 80025e4:	f7ff ffa2 	bl	800252c <SysTick_Config>
 80025e8:	4603      	mov	r3, r0
 80025ea:	4618      	mov	r0, r3
 80025ec:	3708      	adds	r7, #8
 80025ee:	46bd      	mov	sp, r7
 80025f0:	bd80      	pop	{r7, pc}

080025f2 <HAL_DMA_Abort>:
 80025f2:	b580      	push	{r7, lr}
 80025f4:	b084      	sub	sp, #16
 80025f6:	af00      	add	r7, sp, #0
 80025f8:	6078      	str	r0, [r7, #4]
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80025fe:	60fb      	str	r3, [r7, #12]
 8002600:	f7ff feb6 	bl	8002370 <HAL_GetTick>
 8002604:	60b8      	str	r0, [r7, #8]
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800260c:	b2db      	uxtb	r3, r3
 800260e:	2b02      	cmp	r3, #2
 8002610:	d008      	beq.n	8002624 <HAL_DMA_Abort+0x32>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	2280      	movs	r2, #128	@ 0x80
 8002616:	655a      	str	r2, [r3, #84]	@ 0x54
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	2200      	movs	r2, #0
 800261c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002620:	2301      	movs	r3, #1
 8002622:	e052      	b.n	80026ca <HAL_DMA_Abort+0xd8>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	681a      	ldr	r2, [r3, #0]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	f022 0216 	bic.w	r2, r2, #22
 8002632:	601a      	str	r2, [r3, #0]
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	695a      	ldr	r2, [r3, #20]
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002642:	615a      	str	r2, [r3, #20]
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002648:	2b00      	cmp	r3, #0
 800264a:	d103      	bne.n	8002654 <HAL_DMA_Abort+0x62>
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002650:	2b00      	cmp	r3, #0
 8002652:	d007      	beq.n	8002664 <HAL_DMA_Abort+0x72>
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	681a      	ldr	r2, [r3, #0]
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	f022 0208 	bic.w	r2, r2, #8
 8002662:	601a      	str	r2, [r3, #0]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	681a      	ldr	r2, [r3, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	f022 0201 	bic.w	r2, r2, #1
 8002672:	601a      	str	r2, [r3, #0]
 8002674:	e013      	b.n	800269e <HAL_DMA_Abort+0xac>
 8002676:	f7ff fe7b 	bl	8002370 <HAL_GetTick>
 800267a:	4602      	mov	r2, r0
 800267c:	68bb      	ldr	r3, [r7, #8]
 800267e:	1ad3      	subs	r3, r2, r3
 8002680:	2b05      	cmp	r3, #5
 8002682:	d90c      	bls.n	800269e <HAL_DMA_Abort+0xac>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	2220      	movs	r2, #32
 8002688:	655a      	str	r2, [r3, #84]	@ 0x54
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	2203      	movs	r2, #3
 800268e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	2200      	movs	r2, #0
 8002696:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800269a:	2303      	movs	r3, #3
 800269c:	e015      	b.n	80026ca <HAL_DMA_Abort+0xd8>
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	f003 0301 	and.w	r3, r3, #1
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d1e4      	bne.n	8002676 <HAL_DMA_Abort+0x84>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80026b0:	223f      	movs	r2, #63	@ 0x3f
 80026b2:	409a      	lsls	r2, r3
 80026b4:	68fb      	ldr	r3, [r7, #12]
 80026b6:	609a      	str	r2, [r3, #8]
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	2201      	movs	r2, #1
 80026bc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	2200      	movs	r2, #0
 80026c4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80026c8:	2300      	movs	r3, #0
 80026ca:	4618      	mov	r0, r3
 80026cc:	3710      	adds	r7, #16
 80026ce:	46bd      	mov	sp, r7
 80026d0:	bd80      	pop	{r7, pc}

080026d2 <HAL_DMA_Abort_IT>:
 80026d2:	b480      	push	{r7}
 80026d4:	b083      	sub	sp, #12
 80026d6:	af00      	add	r7, sp, #0
 80026d8:	6078      	str	r0, [r7, #4]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80026e0:	b2db      	uxtb	r3, r3
 80026e2:	2b02      	cmp	r3, #2
 80026e4:	d004      	beq.n	80026f0 <HAL_DMA_Abort_IT+0x1e>
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	2280      	movs	r2, #128	@ 0x80
 80026ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80026ec:	2301      	movs	r3, #1
 80026ee:	e00c      	b.n	800270a <HAL_DMA_Abort_IT+0x38>
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	2205      	movs	r2, #5
 80026f4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	681a      	ldr	r2, [r3, #0]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	f022 0201 	bic.w	r2, r2, #1
 8002706:	601a      	str	r2, [r3, #0]
 8002708:	2300      	movs	r3, #0
 800270a:	4618      	mov	r0, r3
 800270c:	370c      	adds	r7, #12
 800270e:	46bd      	mov	sp, r7
 8002710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002714:	4770      	bx	lr
	...

08002718 <HAL_FLASH_Program>:
 8002718:	b580      	push	{r7, lr}
 800271a:	b086      	sub	sp, #24
 800271c:	af00      	add	r7, sp, #0
 800271e:	60f8      	str	r0, [r7, #12]
 8002720:	60b9      	str	r1, [r7, #8]
 8002722:	e9c7 2300 	strd	r2, r3, [r7]
 8002726:	2301      	movs	r3, #1
 8002728:	75fb      	strb	r3, [r7, #23]
 800272a:	4b23      	ldr	r3, [pc, #140]	@ (80027b8 <HAL_FLASH_Program+0xa0>)
 800272c:	7e1b      	ldrb	r3, [r3, #24]
 800272e:	2b01      	cmp	r3, #1
 8002730:	d101      	bne.n	8002736 <HAL_FLASH_Program+0x1e>
 8002732:	2302      	movs	r3, #2
 8002734:	e03b      	b.n	80027ae <HAL_FLASH_Program+0x96>
 8002736:	4b20      	ldr	r3, [pc, #128]	@ (80027b8 <HAL_FLASH_Program+0xa0>)
 8002738:	2201      	movs	r2, #1
 800273a:	761a      	strb	r2, [r3, #24]
 800273c:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002740:	f000 f870 	bl	8002824 <FLASH_WaitForLastOperation>
 8002744:	4603      	mov	r3, r0
 8002746:	75fb      	strb	r3, [r7, #23]
 8002748:	7dfb      	ldrb	r3, [r7, #23]
 800274a:	2b00      	cmp	r3, #0
 800274c:	d12b      	bne.n	80027a6 <HAL_FLASH_Program+0x8e>
 800274e:	68fb      	ldr	r3, [r7, #12]
 8002750:	2b00      	cmp	r3, #0
 8002752:	d105      	bne.n	8002760 <HAL_FLASH_Program+0x48>
 8002754:	783b      	ldrb	r3, [r7, #0]
 8002756:	4619      	mov	r1, r3
 8002758:	68b8      	ldr	r0, [r7, #8]
 800275a:	f000 f91b 	bl	8002994 <FLASH_Program_Byte>
 800275e:	e016      	b.n	800278e <HAL_FLASH_Program+0x76>
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	2b01      	cmp	r3, #1
 8002764:	d105      	bne.n	8002772 <HAL_FLASH_Program+0x5a>
 8002766:	883b      	ldrh	r3, [r7, #0]
 8002768:	4619      	mov	r1, r3
 800276a:	68b8      	ldr	r0, [r7, #8]
 800276c:	f000 f8ee 	bl	800294c <FLASH_Program_HalfWord>
 8002770:	e00d      	b.n	800278e <HAL_FLASH_Program+0x76>
 8002772:	68fb      	ldr	r3, [r7, #12]
 8002774:	2b02      	cmp	r3, #2
 8002776:	d105      	bne.n	8002784 <HAL_FLASH_Program+0x6c>
 8002778:	683b      	ldr	r3, [r7, #0]
 800277a:	4619      	mov	r1, r3
 800277c:	68b8      	ldr	r0, [r7, #8]
 800277e:	f000 f8c3 	bl	8002908 <FLASH_Program_Word>
 8002782:	e004      	b.n	800278e <HAL_FLASH_Program+0x76>
 8002784:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002788:	68b8      	ldr	r0, [r7, #8]
 800278a:	f000 f88b 	bl	80028a4 <FLASH_Program_DoubleWord>
 800278e:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002792:	f000 f847 	bl	8002824 <FLASH_WaitForLastOperation>
 8002796:	4603      	mov	r3, r0
 8002798:	75fb      	strb	r3, [r7, #23]
 800279a:	4b08      	ldr	r3, [pc, #32]	@ (80027bc <HAL_FLASH_Program+0xa4>)
 800279c:	691b      	ldr	r3, [r3, #16]
 800279e:	4a07      	ldr	r2, [pc, #28]	@ (80027bc <HAL_FLASH_Program+0xa4>)
 80027a0:	f023 0301 	bic.w	r3, r3, #1
 80027a4:	6113      	str	r3, [r2, #16]
 80027a6:	4b04      	ldr	r3, [pc, #16]	@ (80027b8 <HAL_FLASH_Program+0xa0>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	761a      	strb	r2, [r3, #24]
 80027ac:	7dfb      	ldrb	r3, [r7, #23]
 80027ae:	4618      	mov	r0, r3
 80027b0:	3718      	adds	r7, #24
 80027b2:	46bd      	mov	sp, r7
 80027b4:	bd80      	pop	{r7, pc}
 80027b6:	bf00      	nop
 80027b8:	200004b0 	.word	0x200004b0
 80027bc:	40023c00 	.word	0x40023c00

080027c0 <HAL_FLASH_Unlock>:
 80027c0:	b480      	push	{r7}
 80027c2:	b083      	sub	sp, #12
 80027c4:	af00      	add	r7, sp, #0
 80027c6:	2300      	movs	r3, #0
 80027c8:	71fb      	strb	r3, [r7, #7]
 80027ca:	4b0b      	ldr	r3, [pc, #44]	@ (80027f8 <HAL_FLASH_Unlock+0x38>)
 80027cc:	691b      	ldr	r3, [r3, #16]
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	da0b      	bge.n	80027ea <HAL_FLASH_Unlock+0x2a>
 80027d2:	4b09      	ldr	r3, [pc, #36]	@ (80027f8 <HAL_FLASH_Unlock+0x38>)
 80027d4:	4a09      	ldr	r2, [pc, #36]	@ (80027fc <HAL_FLASH_Unlock+0x3c>)
 80027d6:	605a      	str	r2, [r3, #4]
 80027d8:	4b07      	ldr	r3, [pc, #28]	@ (80027f8 <HAL_FLASH_Unlock+0x38>)
 80027da:	4a09      	ldr	r2, [pc, #36]	@ (8002800 <HAL_FLASH_Unlock+0x40>)
 80027dc:	605a      	str	r2, [r3, #4]
 80027de:	4b06      	ldr	r3, [pc, #24]	@ (80027f8 <HAL_FLASH_Unlock+0x38>)
 80027e0:	691b      	ldr	r3, [r3, #16]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	da01      	bge.n	80027ea <HAL_FLASH_Unlock+0x2a>
 80027e6:	2301      	movs	r3, #1
 80027e8:	71fb      	strb	r3, [r7, #7]
 80027ea:	79fb      	ldrb	r3, [r7, #7]
 80027ec:	4618      	mov	r0, r3
 80027ee:	370c      	adds	r7, #12
 80027f0:	46bd      	mov	sp, r7
 80027f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f6:	4770      	bx	lr
 80027f8:	40023c00 	.word	0x40023c00
 80027fc:	45670123 	.word	0x45670123
 8002800:	cdef89ab 	.word	0xcdef89ab

08002804 <HAL_FLASH_Lock>:
 8002804:	b480      	push	{r7}
 8002806:	af00      	add	r7, sp, #0
 8002808:	4b05      	ldr	r3, [pc, #20]	@ (8002820 <HAL_FLASH_Lock+0x1c>)
 800280a:	691b      	ldr	r3, [r3, #16]
 800280c:	4a04      	ldr	r2, [pc, #16]	@ (8002820 <HAL_FLASH_Lock+0x1c>)
 800280e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8002812:	6113      	str	r3, [r2, #16]
 8002814:	2300      	movs	r3, #0
 8002816:	4618      	mov	r0, r3
 8002818:	46bd      	mov	sp, r7
 800281a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800281e:	4770      	bx	lr
 8002820:	40023c00 	.word	0x40023c00

08002824 <FLASH_WaitForLastOperation>:
 8002824:	b580      	push	{r7, lr}
 8002826:	b084      	sub	sp, #16
 8002828:	af00      	add	r7, sp, #0
 800282a:	6078      	str	r0, [r7, #4]
 800282c:	2300      	movs	r3, #0
 800282e:	60fb      	str	r3, [r7, #12]
 8002830:	4b1a      	ldr	r3, [pc, #104]	@ (800289c <FLASH_WaitForLastOperation+0x78>)
 8002832:	2200      	movs	r2, #0
 8002834:	61da      	str	r2, [r3, #28]
 8002836:	f7ff fd9b 	bl	8002370 <HAL_GetTick>
 800283a:	60f8      	str	r0, [r7, #12]
 800283c:	e010      	b.n	8002860 <FLASH_WaitForLastOperation+0x3c>
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002844:	d00c      	beq.n	8002860 <FLASH_WaitForLastOperation+0x3c>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	2b00      	cmp	r3, #0
 800284a:	d007      	beq.n	800285c <FLASH_WaitForLastOperation+0x38>
 800284c:	f7ff fd90 	bl	8002370 <HAL_GetTick>
 8002850:	4602      	mov	r2, r0
 8002852:	68fb      	ldr	r3, [r7, #12]
 8002854:	1ad3      	subs	r3, r2, r3
 8002856:	687a      	ldr	r2, [r7, #4]
 8002858:	429a      	cmp	r2, r3
 800285a:	d201      	bcs.n	8002860 <FLASH_WaitForLastOperation+0x3c>
 800285c:	2303      	movs	r3, #3
 800285e:	e019      	b.n	8002894 <FLASH_WaitForLastOperation+0x70>
 8002860:	4b0f      	ldr	r3, [pc, #60]	@ (80028a0 <FLASH_WaitForLastOperation+0x7c>)
 8002862:	68db      	ldr	r3, [r3, #12]
 8002864:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002868:	2b00      	cmp	r3, #0
 800286a:	d1e8      	bne.n	800283e <FLASH_WaitForLastOperation+0x1a>
 800286c:	4b0c      	ldr	r3, [pc, #48]	@ (80028a0 <FLASH_WaitForLastOperation+0x7c>)
 800286e:	68db      	ldr	r3, [r3, #12]
 8002870:	f003 0301 	and.w	r3, r3, #1
 8002874:	2b00      	cmp	r3, #0
 8002876:	d002      	beq.n	800287e <FLASH_WaitForLastOperation+0x5a>
 8002878:	4b09      	ldr	r3, [pc, #36]	@ (80028a0 <FLASH_WaitForLastOperation+0x7c>)
 800287a:	2201      	movs	r2, #1
 800287c:	60da      	str	r2, [r3, #12]
 800287e:	4b08      	ldr	r3, [pc, #32]	@ (80028a0 <FLASH_WaitForLastOperation+0x7c>)
 8002880:	68db      	ldr	r3, [r3, #12]
 8002882:	f403 73f9 	and.w	r3, r3, #498	@ 0x1f2
 8002886:	2b00      	cmp	r3, #0
 8002888:	d003      	beq.n	8002892 <FLASH_WaitForLastOperation+0x6e>
 800288a:	f000 f8a5 	bl	80029d8 <FLASH_SetErrorCode>
 800288e:	2301      	movs	r3, #1
 8002890:	e000      	b.n	8002894 <FLASH_WaitForLastOperation+0x70>
 8002892:	2300      	movs	r3, #0
 8002894:	4618      	mov	r0, r3
 8002896:	3710      	adds	r7, #16
 8002898:	46bd      	mov	sp, r7
 800289a:	bd80      	pop	{r7, pc}
 800289c:	200004b0 	.word	0x200004b0
 80028a0:	40023c00 	.word	0x40023c00

080028a4 <FLASH_Program_DoubleWord>:
 80028a4:	b480      	push	{r7}
 80028a6:	b085      	sub	sp, #20
 80028a8:	af00      	add	r7, sp, #0
 80028aa:	60f8      	str	r0, [r7, #12]
 80028ac:	e9c7 2300 	strd	r2, r3, [r7]
 80028b0:	4b14      	ldr	r3, [pc, #80]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028b2:	691b      	ldr	r3, [r3, #16]
 80028b4:	4a13      	ldr	r2, [pc, #76]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028b6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80028ba:	6113      	str	r3, [r2, #16]
 80028bc:	4b11      	ldr	r3, [pc, #68]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028be:	691b      	ldr	r3, [r3, #16]
 80028c0:	4a10      	ldr	r2, [pc, #64]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028c2:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 80028c6:	6113      	str	r3, [r2, #16]
 80028c8:	4b0e      	ldr	r3, [pc, #56]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028ca:	691b      	ldr	r3, [r3, #16]
 80028cc:	4a0d      	ldr	r2, [pc, #52]	@ (8002904 <FLASH_Program_DoubleWord+0x60>)
 80028ce:	f043 0301 	orr.w	r3, r3, #1
 80028d2:	6113      	str	r3, [r2, #16]
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	683a      	ldr	r2, [r7, #0]
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	f3bf 8f6f 	isb	sy
 80028de:	bf00      	nop
 80028e0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80028e4:	f04f 0200 	mov.w	r2, #0
 80028e8:	f04f 0300 	mov.w	r3, #0
 80028ec:	000a      	movs	r2, r1
 80028ee:	2300      	movs	r3, #0
 80028f0:	68f9      	ldr	r1, [r7, #12]
 80028f2:	3104      	adds	r1, #4
 80028f4:	4613      	mov	r3, r2
 80028f6:	600b      	str	r3, [r1, #0]
 80028f8:	bf00      	nop
 80028fa:	3714      	adds	r7, #20
 80028fc:	46bd      	mov	sp, r7
 80028fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002902:	4770      	bx	lr
 8002904:	40023c00 	.word	0x40023c00

08002908 <FLASH_Program_Word>:
 8002908:	b480      	push	{r7}
 800290a:	b083      	sub	sp, #12
 800290c:	af00      	add	r7, sp, #0
 800290e:	6078      	str	r0, [r7, #4]
 8002910:	6039      	str	r1, [r7, #0]
 8002912:	4b0d      	ldr	r3, [pc, #52]	@ (8002948 <FLASH_Program_Word+0x40>)
 8002914:	691b      	ldr	r3, [r3, #16]
 8002916:	4a0c      	ldr	r2, [pc, #48]	@ (8002948 <FLASH_Program_Word+0x40>)
 8002918:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800291c:	6113      	str	r3, [r2, #16]
 800291e:	4b0a      	ldr	r3, [pc, #40]	@ (8002948 <FLASH_Program_Word+0x40>)
 8002920:	691b      	ldr	r3, [r3, #16]
 8002922:	4a09      	ldr	r2, [pc, #36]	@ (8002948 <FLASH_Program_Word+0x40>)
 8002924:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002928:	6113      	str	r3, [r2, #16]
 800292a:	4b07      	ldr	r3, [pc, #28]	@ (8002948 <FLASH_Program_Word+0x40>)
 800292c:	691b      	ldr	r3, [r3, #16]
 800292e:	4a06      	ldr	r2, [pc, #24]	@ (8002948 <FLASH_Program_Word+0x40>)
 8002930:	f043 0301 	orr.w	r3, r3, #1
 8002934:	6113      	str	r3, [r2, #16]
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	683a      	ldr	r2, [r7, #0]
 800293a:	601a      	str	r2, [r3, #0]
 800293c:	bf00      	nop
 800293e:	370c      	adds	r7, #12
 8002940:	46bd      	mov	sp, r7
 8002942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002946:	4770      	bx	lr
 8002948:	40023c00 	.word	0x40023c00

0800294c <FLASH_Program_HalfWord>:
 800294c:	b480      	push	{r7}
 800294e:	b083      	sub	sp, #12
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	460b      	mov	r3, r1
 8002956:	807b      	strh	r3, [r7, #2]
 8002958:	4b0d      	ldr	r3, [pc, #52]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 800295a:	691b      	ldr	r3, [r3, #16]
 800295c:	4a0c      	ldr	r2, [pc, #48]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 800295e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002962:	6113      	str	r3, [r2, #16]
 8002964:	4b0a      	ldr	r3, [pc, #40]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 8002966:	691b      	ldr	r3, [r3, #16]
 8002968:	4a09      	ldr	r2, [pc, #36]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 800296a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800296e:	6113      	str	r3, [r2, #16]
 8002970:	4b07      	ldr	r3, [pc, #28]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 8002972:	691b      	ldr	r3, [r3, #16]
 8002974:	4a06      	ldr	r2, [pc, #24]	@ (8002990 <FLASH_Program_HalfWord+0x44>)
 8002976:	f043 0301 	orr.w	r3, r3, #1
 800297a:	6113      	str	r3, [r2, #16]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	887a      	ldrh	r2, [r7, #2]
 8002980:	801a      	strh	r2, [r3, #0]
 8002982:	bf00      	nop
 8002984:	370c      	adds	r7, #12
 8002986:	46bd      	mov	sp, r7
 8002988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800298c:	4770      	bx	lr
 800298e:	bf00      	nop
 8002990:	40023c00 	.word	0x40023c00

08002994 <FLASH_Program_Byte>:
 8002994:	b480      	push	{r7}
 8002996:	b083      	sub	sp, #12
 8002998:	af00      	add	r7, sp, #0
 800299a:	6078      	str	r0, [r7, #4]
 800299c:	460b      	mov	r3, r1
 800299e:	70fb      	strb	r3, [r7, #3]
 80029a0:	4b0c      	ldr	r3, [pc, #48]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029a2:	691b      	ldr	r3, [r3, #16]
 80029a4:	4a0b      	ldr	r2, [pc, #44]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029a6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80029aa:	6113      	str	r3, [r2, #16]
 80029ac:	4b09      	ldr	r3, [pc, #36]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029ae:	4a09      	ldr	r2, [pc, #36]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029b0:	691b      	ldr	r3, [r3, #16]
 80029b2:	6113      	str	r3, [r2, #16]
 80029b4:	4b07      	ldr	r3, [pc, #28]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029b6:	691b      	ldr	r3, [r3, #16]
 80029b8:	4a06      	ldr	r2, [pc, #24]	@ (80029d4 <FLASH_Program_Byte+0x40>)
 80029ba:	f043 0301 	orr.w	r3, r3, #1
 80029be:	6113      	str	r3, [r2, #16]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	78fa      	ldrb	r2, [r7, #3]
 80029c4:	701a      	strb	r2, [r3, #0]
 80029c6:	bf00      	nop
 80029c8:	370c      	adds	r7, #12
 80029ca:	46bd      	mov	sp, r7
 80029cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d0:	4770      	bx	lr
 80029d2:	bf00      	nop
 80029d4:	40023c00 	.word	0x40023c00

080029d8 <FLASH_SetErrorCode>:
 80029d8:	b480      	push	{r7}
 80029da:	af00      	add	r7, sp, #0
 80029dc:	4b2f      	ldr	r3, [pc, #188]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 80029de:	68db      	ldr	r3, [r3, #12]
 80029e0:	f003 0310 	and.w	r3, r3, #16
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d008      	beq.n	80029fa <FLASH_SetErrorCode+0x22>
 80029e8:	4b2d      	ldr	r3, [pc, #180]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 80029ea:	69db      	ldr	r3, [r3, #28]
 80029ec:	f043 0310 	orr.w	r3, r3, #16
 80029f0:	4a2b      	ldr	r2, [pc, #172]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 80029f2:	61d3      	str	r3, [r2, #28]
 80029f4:	4b29      	ldr	r3, [pc, #164]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 80029f6:	2210      	movs	r2, #16
 80029f8:	60da      	str	r2, [r3, #12]
 80029fa:	4b28      	ldr	r3, [pc, #160]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 80029fc:	68db      	ldr	r3, [r3, #12]
 80029fe:	f003 0320 	and.w	r3, r3, #32
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d008      	beq.n	8002a18 <FLASH_SetErrorCode+0x40>
 8002a06:	4b26      	ldr	r3, [pc, #152]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a08:	69db      	ldr	r3, [r3, #28]
 8002a0a:	f043 0308 	orr.w	r3, r3, #8
 8002a0e:	4a24      	ldr	r2, [pc, #144]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a10:	61d3      	str	r3, [r2, #28]
 8002a12:	4b22      	ldr	r3, [pc, #136]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a14:	2220      	movs	r2, #32
 8002a16:	60da      	str	r2, [r3, #12]
 8002a18:	4b20      	ldr	r3, [pc, #128]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a1a:	68db      	ldr	r3, [r3, #12]
 8002a1c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002a20:	2b00      	cmp	r3, #0
 8002a22:	d008      	beq.n	8002a36 <FLASH_SetErrorCode+0x5e>
 8002a24:	4b1e      	ldr	r3, [pc, #120]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a26:	69db      	ldr	r3, [r3, #28]
 8002a28:	f043 0304 	orr.w	r3, r3, #4
 8002a2c:	4a1c      	ldr	r2, [pc, #112]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a2e:	61d3      	str	r3, [r2, #28]
 8002a30:	4b1a      	ldr	r3, [pc, #104]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a32:	2240      	movs	r2, #64	@ 0x40
 8002a34:	60da      	str	r2, [r3, #12]
 8002a36:	4b19      	ldr	r3, [pc, #100]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a38:	68db      	ldr	r3, [r3, #12]
 8002a3a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	d008      	beq.n	8002a54 <FLASH_SetErrorCode+0x7c>
 8002a42:	4b17      	ldr	r3, [pc, #92]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a44:	69db      	ldr	r3, [r3, #28]
 8002a46:	f043 0302 	orr.w	r3, r3, #2
 8002a4a:	4a15      	ldr	r2, [pc, #84]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a4c:	61d3      	str	r3, [r2, #28]
 8002a4e:	4b13      	ldr	r3, [pc, #76]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a50:	2280      	movs	r2, #128	@ 0x80
 8002a52:	60da      	str	r2, [r3, #12]
 8002a54:	4b11      	ldr	r3, [pc, #68]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a56:	68db      	ldr	r3, [r3, #12]
 8002a58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d009      	beq.n	8002a74 <FLASH_SetErrorCode+0x9c>
 8002a60:	4b0f      	ldr	r3, [pc, #60]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a62:	69db      	ldr	r3, [r3, #28]
 8002a64:	f043 0301 	orr.w	r3, r3, #1
 8002a68:	4a0d      	ldr	r2, [pc, #52]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a6a:	61d3      	str	r3, [r2, #28]
 8002a6c:	4b0b      	ldr	r3, [pc, #44]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a6e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002a72:	60da      	str	r2, [r3, #12]
 8002a74:	4b09      	ldr	r3, [pc, #36]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a76:	68db      	ldr	r3, [r3, #12]
 8002a78:	f003 0302 	and.w	r3, r3, #2
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d008      	beq.n	8002a92 <FLASH_SetErrorCode+0xba>
 8002a80:	4b07      	ldr	r3, [pc, #28]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a82:	69db      	ldr	r3, [r3, #28]
 8002a84:	f043 0320 	orr.w	r3, r3, #32
 8002a88:	4a05      	ldr	r2, [pc, #20]	@ (8002aa0 <FLASH_SetErrorCode+0xc8>)
 8002a8a:	61d3      	str	r3, [r2, #28]
 8002a8c:	4b03      	ldr	r3, [pc, #12]	@ (8002a9c <FLASH_SetErrorCode+0xc4>)
 8002a8e:	2202      	movs	r2, #2
 8002a90:	60da      	str	r2, [r3, #12]
 8002a92:	bf00      	nop
 8002a94:	46bd      	mov	sp, r7
 8002a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a9a:	4770      	bx	lr
 8002a9c:	40023c00 	.word	0x40023c00
 8002aa0:	200004b0 	.word	0x200004b0

08002aa4 <HAL_FLASHEx_Erase>:
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	b084      	sub	sp, #16
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	6078      	str	r0, [r7, #4]
 8002aac:	6039      	str	r1, [r7, #0]
 8002aae:	2301      	movs	r3, #1
 8002ab0:	73fb      	strb	r3, [r7, #15]
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	60bb      	str	r3, [r7, #8]
 8002ab6:	4b31      	ldr	r3, [pc, #196]	@ (8002b7c <HAL_FLASHEx_Erase+0xd8>)
 8002ab8:	7e1b      	ldrb	r3, [r3, #24]
 8002aba:	2b01      	cmp	r3, #1
 8002abc:	d101      	bne.n	8002ac2 <HAL_FLASHEx_Erase+0x1e>
 8002abe:	2302      	movs	r3, #2
 8002ac0:	e058      	b.n	8002b74 <HAL_FLASHEx_Erase+0xd0>
 8002ac2:	4b2e      	ldr	r3, [pc, #184]	@ (8002b7c <HAL_FLASHEx_Erase+0xd8>)
 8002ac4:	2201      	movs	r2, #1
 8002ac6:	761a      	strb	r2, [r3, #24]
 8002ac8:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002acc:	f7ff feaa 	bl	8002824 <FLASH_WaitForLastOperation>
 8002ad0:	4603      	mov	r3, r0
 8002ad2:	73fb      	strb	r3, [r7, #15]
 8002ad4:	7bfb      	ldrb	r3, [r7, #15]
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d148      	bne.n	8002b6c <HAL_FLASHEx_Erase+0xc8>
 8002ada:	683b      	ldr	r3, [r7, #0]
 8002adc:	f04f 32ff 	mov.w	r2, #4294967295
 8002ae0:	601a      	str	r2, [r3, #0]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	2b01      	cmp	r3, #1
 8002ae8:	d115      	bne.n	8002b16 <HAL_FLASHEx_Erase+0x72>
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	691b      	ldr	r3, [r3, #16]
 8002aee:	b2da      	uxtb	r2, r3
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	685b      	ldr	r3, [r3, #4]
 8002af4:	4619      	mov	r1, r3
 8002af6:	4610      	mov	r0, r2
 8002af8:	f000 f844 	bl	8002b84 <FLASH_MassErase>
 8002afc:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002b00:	f7ff fe90 	bl	8002824 <FLASH_WaitForLastOperation>
 8002b04:	4603      	mov	r3, r0
 8002b06:	73fb      	strb	r3, [r7, #15]
 8002b08:	4b1d      	ldr	r3, [pc, #116]	@ (8002b80 <HAL_FLASHEx_Erase+0xdc>)
 8002b0a:	691b      	ldr	r3, [r3, #16]
 8002b0c:	4a1c      	ldr	r2, [pc, #112]	@ (8002b80 <HAL_FLASHEx_Erase+0xdc>)
 8002b0e:	f023 0304 	bic.w	r3, r3, #4
 8002b12:	6113      	str	r3, [r2, #16]
 8002b14:	e028      	b.n	8002b68 <HAL_FLASHEx_Erase+0xc4>
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	689b      	ldr	r3, [r3, #8]
 8002b1a:	60bb      	str	r3, [r7, #8]
 8002b1c:	e01c      	b.n	8002b58 <HAL_FLASHEx_Erase+0xb4>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	691b      	ldr	r3, [r3, #16]
 8002b22:	b2db      	uxtb	r3, r3
 8002b24:	4619      	mov	r1, r3
 8002b26:	68b8      	ldr	r0, [r7, #8]
 8002b28:	f000 f850 	bl	8002bcc <FLASH_Erase_Sector>
 8002b2c:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002b30:	f7ff fe78 	bl	8002824 <FLASH_WaitForLastOperation>
 8002b34:	4603      	mov	r3, r0
 8002b36:	73fb      	strb	r3, [r7, #15]
 8002b38:	4b11      	ldr	r3, [pc, #68]	@ (8002b80 <HAL_FLASHEx_Erase+0xdc>)
 8002b3a:	691b      	ldr	r3, [r3, #16]
 8002b3c:	4a10      	ldr	r2, [pc, #64]	@ (8002b80 <HAL_FLASHEx_Erase+0xdc>)
 8002b3e:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 8002b42:	6113      	str	r3, [r2, #16]
 8002b44:	7bfb      	ldrb	r3, [r7, #15]
 8002b46:	2b00      	cmp	r3, #0
 8002b48:	d003      	beq.n	8002b52 <HAL_FLASHEx_Erase+0xae>
 8002b4a:	683b      	ldr	r3, [r7, #0]
 8002b4c:	68ba      	ldr	r2, [r7, #8]
 8002b4e:	601a      	str	r2, [r3, #0]
 8002b50:	e00a      	b.n	8002b68 <HAL_FLASHEx_Erase+0xc4>
 8002b52:	68bb      	ldr	r3, [r7, #8]
 8002b54:	3301      	adds	r3, #1
 8002b56:	60bb      	str	r3, [r7, #8]
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	68da      	ldr	r2, [r3, #12]
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	689b      	ldr	r3, [r3, #8]
 8002b60:	4413      	add	r3, r2
 8002b62:	68ba      	ldr	r2, [r7, #8]
 8002b64:	429a      	cmp	r2, r3
 8002b66:	d3da      	bcc.n	8002b1e <HAL_FLASHEx_Erase+0x7a>
 8002b68:	f000 f878 	bl	8002c5c <FLASH_FlushCaches>
 8002b6c:	4b03      	ldr	r3, [pc, #12]	@ (8002b7c <HAL_FLASHEx_Erase+0xd8>)
 8002b6e:	2200      	movs	r2, #0
 8002b70:	761a      	strb	r2, [r3, #24]
 8002b72:	7bfb      	ldrb	r3, [r7, #15]
 8002b74:	4618      	mov	r0, r3
 8002b76:	3710      	adds	r7, #16
 8002b78:	46bd      	mov	sp, r7
 8002b7a:	bd80      	pop	{r7, pc}
 8002b7c:	200004b0 	.word	0x200004b0
 8002b80:	40023c00 	.word	0x40023c00

08002b84 <FLASH_MassErase>:
 8002b84:	b480      	push	{r7}
 8002b86:	b083      	sub	sp, #12
 8002b88:	af00      	add	r7, sp, #0
 8002b8a:	4603      	mov	r3, r0
 8002b8c:	6039      	str	r1, [r7, #0]
 8002b8e:	71fb      	strb	r3, [r7, #7]
 8002b90:	4b0d      	ldr	r3, [pc, #52]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002b92:	691b      	ldr	r3, [r3, #16]
 8002b94:	4a0c      	ldr	r2, [pc, #48]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002b96:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002b9a:	6113      	str	r3, [r2, #16]
 8002b9c:	4b0a      	ldr	r3, [pc, #40]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002b9e:	691b      	ldr	r3, [r3, #16]
 8002ba0:	4a09      	ldr	r2, [pc, #36]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002ba2:	f043 0304 	orr.w	r3, r3, #4
 8002ba6:	6113      	str	r3, [r2, #16]
 8002ba8:	4b07      	ldr	r3, [pc, #28]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002baa:	691a      	ldr	r2, [r3, #16]
 8002bac:	79fb      	ldrb	r3, [r7, #7]
 8002bae:	021b      	lsls	r3, r3, #8
 8002bb0:	4313      	orrs	r3, r2
 8002bb2:	4a05      	ldr	r2, [pc, #20]	@ (8002bc8 <FLASH_MassErase+0x44>)
 8002bb4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002bb8:	6113      	str	r3, [r2, #16]
 8002bba:	bf00      	nop
 8002bbc:	370c      	adds	r7, #12
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bc4:	4770      	bx	lr
 8002bc6:	bf00      	nop
 8002bc8:	40023c00 	.word	0x40023c00

08002bcc <FLASH_Erase_Sector>:
 8002bcc:	b480      	push	{r7}
 8002bce:	b085      	sub	sp, #20
 8002bd0:	af00      	add	r7, sp, #0
 8002bd2:	6078      	str	r0, [r7, #4]
 8002bd4:	460b      	mov	r3, r1
 8002bd6:	70fb      	strb	r3, [r7, #3]
 8002bd8:	2300      	movs	r3, #0
 8002bda:	60fb      	str	r3, [r7, #12]
 8002bdc:	78fb      	ldrb	r3, [r7, #3]
 8002bde:	2b00      	cmp	r3, #0
 8002be0:	d102      	bne.n	8002be8 <FLASH_Erase_Sector+0x1c>
 8002be2:	2300      	movs	r3, #0
 8002be4:	60fb      	str	r3, [r7, #12]
 8002be6:	e010      	b.n	8002c0a <FLASH_Erase_Sector+0x3e>
 8002be8:	78fb      	ldrb	r3, [r7, #3]
 8002bea:	2b01      	cmp	r3, #1
 8002bec:	d103      	bne.n	8002bf6 <FLASH_Erase_Sector+0x2a>
 8002bee:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002bf2:	60fb      	str	r3, [r7, #12]
 8002bf4:	e009      	b.n	8002c0a <FLASH_Erase_Sector+0x3e>
 8002bf6:	78fb      	ldrb	r3, [r7, #3]
 8002bf8:	2b02      	cmp	r3, #2
 8002bfa:	d103      	bne.n	8002c04 <FLASH_Erase_Sector+0x38>
 8002bfc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002c00:	60fb      	str	r3, [r7, #12]
 8002c02:	e002      	b.n	8002c0a <FLASH_Erase_Sector+0x3e>
 8002c04:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002c08:	60fb      	str	r3, [r7, #12]
 8002c0a:	4b13      	ldr	r3, [pc, #76]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c0c:	691b      	ldr	r3, [r3, #16]
 8002c0e:	4a12      	ldr	r2, [pc, #72]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c10:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002c14:	6113      	str	r3, [r2, #16]
 8002c16:	4b10      	ldr	r3, [pc, #64]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c18:	691a      	ldr	r2, [r3, #16]
 8002c1a:	490f      	ldr	r1, [pc, #60]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	4313      	orrs	r3, r2
 8002c20:	610b      	str	r3, [r1, #16]
 8002c22:	4b0d      	ldr	r3, [pc, #52]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c24:	691b      	ldr	r3, [r3, #16]
 8002c26:	4a0c      	ldr	r2, [pc, #48]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c28:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8002c2c:	6113      	str	r3, [r2, #16]
 8002c2e:	4b0a      	ldr	r3, [pc, #40]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c30:	691a      	ldr	r2, [r3, #16]
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	00db      	lsls	r3, r3, #3
 8002c36:	4313      	orrs	r3, r2
 8002c38:	4a07      	ldr	r2, [pc, #28]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c3a:	f043 0302 	orr.w	r3, r3, #2
 8002c3e:	6113      	str	r3, [r2, #16]
 8002c40:	4b05      	ldr	r3, [pc, #20]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c42:	691b      	ldr	r3, [r3, #16]
 8002c44:	4a04      	ldr	r2, [pc, #16]	@ (8002c58 <FLASH_Erase_Sector+0x8c>)
 8002c46:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c4a:	6113      	str	r3, [r2, #16]
 8002c4c:	bf00      	nop
 8002c4e:	3714      	adds	r7, #20
 8002c50:	46bd      	mov	sp, r7
 8002c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c56:	4770      	bx	lr
 8002c58:	40023c00 	.word	0x40023c00

08002c5c <FLASH_FlushCaches>:
 8002c5c:	b480      	push	{r7}
 8002c5e:	af00      	add	r7, sp, #0
 8002c60:	4b20      	ldr	r3, [pc, #128]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d017      	beq.n	8002c9c <FLASH_FlushCaches+0x40>
 8002c6c:	4b1d      	ldr	r3, [pc, #116]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4a1c      	ldr	r2, [pc, #112]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c72:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002c76:	6013      	str	r3, [r2, #0]
 8002c78:	4b1a      	ldr	r3, [pc, #104]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	4a19      	ldr	r2, [pc, #100]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c7e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002c82:	6013      	str	r3, [r2, #0]
 8002c84:	4b17      	ldr	r3, [pc, #92]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	4a16      	ldr	r2, [pc, #88]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c8a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8002c8e:	6013      	str	r3, [r2, #0]
 8002c90:	4b14      	ldr	r3, [pc, #80]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	4a13      	ldr	r2, [pc, #76]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c96:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002c9a:	6013      	str	r3, [r2, #0]
 8002c9c:	4b11      	ldr	r3, [pc, #68]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d017      	beq.n	8002cd8 <FLASH_FlushCaches+0x7c>
 8002ca8:	4b0e      	ldr	r3, [pc, #56]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	4a0d      	ldr	r2, [pc, #52]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cae:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002cb2:	6013      	str	r3, [r2, #0]
 8002cb4:	4b0b      	ldr	r3, [pc, #44]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	4a0a      	ldr	r2, [pc, #40]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cba:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002cbe:	6013      	str	r3, [r2, #0]
 8002cc0:	4b08      	ldr	r3, [pc, #32]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	4a07      	ldr	r2, [pc, #28]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cc6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002cca:	6013      	str	r3, [r2, #0]
 8002ccc:	4b05      	ldr	r3, [pc, #20]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	4a04      	ldr	r2, [pc, #16]	@ (8002ce4 <FLASH_FlushCaches+0x88>)
 8002cd2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002cd6:	6013      	str	r3, [r2, #0]
 8002cd8:	bf00      	nop
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce0:	4770      	bx	lr
 8002ce2:	bf00      	nop
 8002ce4:	40023c00 	.word	0x40023c00

08002ce8 <HAL_GPIO_Init>:
 8002ce8:	b480      	push	{r7}
 8002cea:	b089      	sub	sp, #36	@ 0x24
 8002cec:	af00      	add	r7, sp, #0
 8002cee:	6078      	str	r0, [r7, #4]
 8002cf0:	6039      	str	r1, [r7, #0]
 8002cf2:	2300      	movs	r3, #0
 8002cf4:	617b      	str	r3, [r7, #20]
 8002cf6:	2300      	movs	r3, #0
 8002cf8:	613b      	str	r3, [r7, #16]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	61bb      	str	r3, [r7, #24]
 8002cfe:	2300      	movs	r3, #0
 8002d00:	61fb      	str	r3, [r7, #28]
 8002d02:	e159      	b.n	8002fb8 <HAL_GPIO_Init+0x2d0>
 8002d04:	2201      	movs	r2, #1
 8002d06:	69fb      	ldr	r3, [r7, #28]
 8002d08:	fa02 f303 	lsl.w	r3, r2, r3
 8002d0c:	617b      	str	r3, [r7, #20]
 8002d0e:	683b      	ldr	r3, [r7, #0]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	697a      	ldr	r2, [r7, #20]
 8002d14:	4013      	ands	r3, r2
 8002d16:	613b      	str	r3, [r7, #16]
 8002d18:	693a      	ldr	r2, [r7, #16]
 8002d1a:	697b      	ldr	r3, [r7, #20]
 8002d1c:	429a      	cmp	r2, r3
 8002d1e:	f040 8148 	bne.w	8002fb2 <HAL_GPIO_Init+0x2ca>
 8002d22:	683b      	ldr	r3, [r7, #0]
 8002d24:	685b      	ldr	r3, [r3, #4]
 8002d26:	f003 0303 	and.w	r3, r3, #3
 8002d2a:	2b01      	cmp	r3, #1
 8002d2c:	d005      	beq.n	8002d3a <HAL_GPIO_Init+0x52>
 8002d2e:	683b      	ldr	r3, [r7, #0]
 8002d30:	685b      	ldr	r3, [r3, #4]
 8002d32:	f003 0303 	and.w	r3, r3, #3
 8002d36:	2b02      	cmp	r3, #2
 8002d38:	d130      	bne.n	8002d9c <HAL_GPIO_Init+0xb4>
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	689b      	ldr	r3, [r3, #8]
 8002d3e:	61bb      	str	r3, [r7, #24]
 8002d40:	69fb      	ldr	r3, [r7, #28]
 8002d42:	005b      	lsls	r3, r3, #1
 8002d44:	2203      	movs	r2, #3
 8002d46:	fa02 f303 	lsl.w	r3, r2, r3
 8002d4a:	43db      	mvns	r3, r3
 8002d4c:	69ba      	ldr	r2, [r7, #24]
 8002d4e:	4013      	ands	r3, r2
 8002d50:	61bb      	str	r3, [r7, #24]
 8002d52:	683b      	ldr	r3, [r7, #0]
 8002d54:	68da      	ldr	r2, [r3, #12]
 8002d56:	69fb      	ldr	r3, [r7, #28]
 8002d58:	005b      	lsls	r3, r3, #1
 8002d5a:	fa02 f303 	lsl.w	r3, r2, r3
 8002d5e:	69ba      	ldr	r2, [r7, #24]
 8002d60:	4313      	orrs	r3, r2
 8002d62:	61bb      	str	r3, [r7, #24]
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	69ba      	ldr	r2, [r7, #24]
 8002d68:	609a      	str	r2, [r3, #8]
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	685b      	ldr	r3, [r3, #4]
 8002d6e:	61bb      	str	r3, [r7, #24]
 8002d70:	2201      	movs	r2, #1
 8002d72:	69fb      	ldr	r3, [r7, #28]
 8002d74:	fa02 f303 	lsl.w	r3, r2, r3
 8002d78:	43db      	mvns	r3, r3
 8002d7a:	69ba      	ldr	r2, [r7, #24]
 8002d7c:	4013      	ands	r3, r2
 8002d7e:	61bb      	str	r3, [r7, #24]
 8002d80:	683b      	ldr	r3, [r7, #0]
 8002d82:	685b      	ldr	r3, [r3, #4]
 8002d84:	091b      	lsrs	r3, r3, #4
 8002d86:	f003 0201 	and.w	r2, r3, #1
 8002d8a:	69fb      	ldr	r3, [r7, #28]
 8002d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8002d90:	69ba      	ldr	r2, [r7, #24]
 8002d92:	4313      	orrs	r3, r2
 8002d94:	61bb      	str	r3, [r7, #24]
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	69ba      	ldr	r2, [r7, #24]
 8002d9a:	605a      	str	r2, [r3, #4]
 8002d9c:	683b      	ldr	r3, [r7, #0]
 8002d9e:	685b      	ldr	r3, [r3, #4]
 8002da0:	f003 0303 	and.w	r3, r3, #3
 8002da4:	2b03      	cmp	r3, #3
 8002da6:	d017      	beq.n	8002dd8 <HAL_GPIO_Init+0xf0>
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	68db      	ldr	r3, [r3, #12]
 8002dac:	61bb      	str	r3, [r7, #24]
 8002dae:	69fb      	ldr	r3, [r7, #28]
 8002db0:	005b      	lsls	r3, r3, #1
 8002db2:	2203      	movs	r2, #3
 8002db4:	fa02 f303 	lsl.w	r3, r2, r3
 8002db8:	43db      	mvns	r3, r3
 8002dba:	69ba      	ldr	r2, [r7, #24]
 8002dbc:	4013      	ands	r3, r2
 8002dbe:	61bb      	str	r3, [r7, #24]
 8002dc0:	683b      	ldr	r3, [r7, #0]
 8002dc2:	689a      	ldr	r2, [r3, #8]
 8002dc4:	69fb      	ldr	r3, [r7, #28]
 8002dc6:	005b      	lsls	r3, r3, #1
 8002dc8:	fa02 f303 	lsl.w	r3, r2, r3
 8002dcc:	69ba      	ldr	r2, [r7, #24]
 8002dce:	4313      	orrs	r3, r2
 8002dd0:	61bb      	str	r3, [r7, #24]
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	69ba      	ldr	r2, [r7, #24]
 8002dd6:	60da      	str	r2, [r3, #12]
 8002dd8:	683b      	ldr	r3, [r7, #0]
 8002dda:	685b      	ldr	r3, [r3, #4]
 8002ddc:	f003 0303 	and.w	r3, r3, #3
 8002de0:	2b02      	cmp	r3, #2
 8002de2:	d123      	bne.n	8002e2c <HAL_GPIO_Init+0x144>
 8002de4:	69fb      	ldr	r3, [r7, #28]
 8002de6:	08da      	lsrs	r2, r3, #3
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	3208      	adds	r2, #8
 8002dec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002df0:	61bb      	str	r3, [r7, #24]
 8002df2:	69fb      	ldr	r3, [r7, #28]
 8002df4:	f003 0307 	and.w	r3, r3, #7
 8002df8:	009b      	lsls	r3, r3, #2
 8002dfa:	220f      	movs	r2, #15
 8002dfc:	fa02 f303 	lsl.w	r3, r2, r3
 8002e00:	43db      	mvns	r3, r3
 8002e02:	69ba      	ldr	r2, [r7, #24]
 8002e04:	4013      	ands	r3, r2
 8002e06:	61bb      	str	r3, [r7, #24]
 8002e08:	683b      	ldr	r3, [r7, #0]
 8002e0a:	691a      	ldr	r2, [r3, #16]
 8002e0c:	69fb      	ldr	r3, [r7, #28]
 8002e0e:	f003 0307 	and.w	r3, r3, #7
 8002e12:	009b      	lsls	r3, r3, #2
 8002e14:	fa02 f303 	lsl.w	r3, r2, r3
 8002e18:	69ba      	ldr	r2, [r7, #24]
 8002e1a:	4313      	orrs	r3, r2
 8002e1c:	61bb      	str	r3, [r7, #24]
 8002e1e:	69fb      	ldr	r3, [r7, #28]
 8002e20:	08da      	lsrs	r2, r3, #3
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	3208      	adds	r2, #8
 8002e26:	69b9      	ldr	r1, [r7, #24]
 8002e28:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	61bb      	str	r3, [r7, #24]
 8002e32:	69fb      	ldr	r3, [r7, #28]
 8002e34:	005b      	lsls	r3, r3, #1
 8002e36:	2203      	movs	r2, #3
 8002e38:	fa02 f303 	lsl.w	r3, r2, r3
 8002e3c:	43db      	mvns	r3, r3
 8002e3e:	69ba      	ldr	r2, [r7, #24]
 8002e40:	4013      	ands	r3, r2
 8002e42:	61bb      	str	r3, [r7, #24]
 8002e44:	683b      	ldr	r3, [r7, #0]
 8002e46:	685b      	ldr	r3, [r3, #4]
 8002e48:	f003 0203 	and.w	r2, r3, #3
 8002e4c:	69fb      	ldr	r3, [r7, #28]
 8002e4e:	005b      	lsls	r3, r3, #1
 8002e50:	fa02 f303 	lsl.w	r3, r2, r3
 8002e54:	69ba      	ldr	r2, [r7, #24]
 8002e56:	4313      	orrs	r3, r2
 8002e58:	61bb      	str	r3, [r7, #24]
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	69ba      	ldr	r2, [r7, #24]
 8002e5e:	601a      	str	r2, [r3, #0]
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	685b      	ldr	r3, [r3, #4]
 8002e64:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	f000 80a2 	beq.w	8002fb2 <HAL_GPIO_Init+0x2ca>
 8002e6e:	2300      	movs	r3, #0
 8002e70:	60fb      	str	r3, [r7, #12]
 8002e72:	4b57      	ldr	r3, [pc, #348]	@ (8002fd0 <HAL_GPIO_Init+0x2e8>)
 8002e74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e76:	4a56      	ldr	r2, [pc, #344]	@ (8002fd0 <HAL_GPIO_Init+0x2e8>)
 8002e78:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002e7c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002e7e:	4b54      	ldr	r3, [pc, #336]	@ (8002fd0 <HAL_GPIO_Init+0x2e8>)
 8002e80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e82:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002e86:	60fb      	str	r3, [r7, #12]
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	4a52      	ldr	r2, [pc, #328]	@ (8002fd4 <HAL_GPIO_Init+0x2ec>)
 8002e8c:	69fb      	ldr	r3, [r7, #28]
 8002e8e:	089b      	lsrs	r3, r3, #2
 8002e90:	3302      	adds	r3, #2
 8002e92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e96:	61bb      	str	r3, [r7, #24]
 8002e98:	69fb      	ldr	r3, [r7, #28]
 8002e9a:	f003 0303 	and.w	r3, r3, #3
 8002e9e:	009b      	lsls	r3, r3, #2
 8002ea0:	220f      	movs	r2, #15
 8002ea2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea6:	43db      	mvns	r3, r3
 8002ea8:	69ba      	ldr	r2, [r7, #24]
 8002eaa:	4013      	ands	r3, r2
 8002eac:	61bb      	str	r3, [r7, #24]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	4a49      	ldr	r2, [pc, #292]	@ (8002fd8 <HAL_GPIO_Init+0x2f0>)
 8002eb2:	4293      	cmp	r3, r2
 8002eb4:	d019      	beq.n	8002eea <HAL_GPIO_Init+0x202>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	4a48      	ldr	r2, [pc, #288]	@ (8002fdc <HAL_GPIO_Init+0x2f4>)
 8002eba:	4293      	cmp	r3, r2
 8002ebc:	d013      	beq.n	8002ee6 <HAL_GPIO_Init+0x1fe>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	4a47      	ldr	r2, [pc, #284]	@ (8002fe0 <HAL_GPIO_Init+0x2f8>)
 8002ec2:	4293      	cmp	r3, r2
 8002ec4:	d00d      	beq.n	8002ee2 <HAL_GPIO_Init+0x1fa>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	4a46      	ldr	r2, [pc, #280]	@ (8002fe4 <HAL_GPIO_Init+0x2fc>)
 8002eca:	4293      	cmp	r3, r2
 8002ecc:	d007      	beq.n	8002ede <HAL_GPIO_Init+0x1f6>
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	4a45      	ldr	r2, [pc, #276]	@ (8002fe8 <HAL_GPIO_Init+0x300>)
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d101      	bne.n	8002eda <HAL_GPIO_Init+0x1f2>
 8002ed6:	2304      	movs	r3, #4
 8002ed8:	e008      	b.n	8002eec <HAL_GPIO_Init+0x204>
 8002eda:	2307      	movs	r3, #7
 8002edc:	e006      	b.n	8002eec <HAL_GPIO_Init+0x204>
 8002ede:	2303      	movs	r3, #3
 8002ee0:	e004      	b.n	8002eec <HAL_GPIO_Init+0x204>
 8002ee2:	2302      	movs	r3, #2
 8002ee4:	e002      	b.n	8002eec <HAL_GPIO_Init+0x204>
 8002ee6:	2301      	movs	r3, #1
 8002ee8:	e000      	b.n	8002eec <HAL_GPIO_Init+0x204>
 8002eea:	2300      	movs	r3, #0
 8002eec:	69fa      	ldr	r2, [r7, #28]
 8002eee:	f002 0203 	and.w	r2, r2, #3
 8002ef2:	0092      	lsls	r2, r2, #2
 8002ef4:	4093      	lsls	r3, r2
 8002ef6:	69ba      	ldr	r2, [r7, #24]
 8002ef8:	4313      	orrs	r3, r2
 8002efa:	61bb      	str	r3, [r7, #24]
 8002efc:	4935      	ldr	r1, [pc, #212]	@ (8002fd4 <HAL_GPIO_Init+0x2ec>)
 8002efe:	69fb      	ldr	r3, [r7, #28]
 8002f00:	089b      	lsrs	r3, r3, #2
 8002f02:	3302      	adds	r3, #2
 8002f04:	69ba      	ldr	r2, [r7, #24]
 8002f06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002f0a:	4b38      	ldr	r3, [pc, #224]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f0c:	689b      	ldr	r3, [r3, #8]
 8002f0e:	61bb      	str	r3, [r7, #24]
 8002f10:	693b      	ldr	r3, [r7, #16]
 8002f12:	43db      	mvns	r3, r3
 8002f14:	69ba      	ldr	r2, [r7, #24]
 8002f16:	4013      	ands	r3, r2
 8002f18:	61bb      	str	r3, [r7, #24]
 8002f1a:	683b      	ldr	r3, [r7, #0]
 8002f1c:	685b      	ldr	r3, [r3, #4]
 8002f1e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d003      	beq.n	8002f2e <HAL_GPIO_Init+0x246>
 8002f26:	69ba      	ldr	r2, [r7, #24]
 8002f28:	693b      	ldr	r3, [r7, #16]
 8002f2a:	4313      	orrs	r3, r2
 8002f2c:	61bb      	str	r3, [r7, #24]
 8002f2e:	4a2f      	ldr	r2, [pc, #188]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f30:	69bb      	ldr	r3, [r7, #24]
 8002f32:	6093      	str	r3, [r2, #8]
 8002f34:	4b2d      	ldr	r3, [pc, #180]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f36:	68db      	ldr	r3, [r3, #12]
 8002f38:	61bb      	str	r3, [r7, #24]
 8002f3a:	693b      	ldr	r3, [r7, #16]
 8002f3c:	43db      	mvns	r3, r3
 8002f3e:	69ba      	ldr	r2, [r7, #24]
 8002f40:	4013      	ands	r3, r2
 8002f42:	61bb      	str	r3, [r7, #24]
 8002f44:	683b      	ldr	r3, [r7, #0]
 8002f46:	685b      	ldr	r3, [r3, #4]
 8002f48:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d003      	beq.n	8002f58 <HAL_GPIO_Init+0x270>
 8002f50:	69ba      	ldr	r2, [r7, #24]
 8002f52:	693b      	ldr	r3, [r7, #16]
 8002f54:	4313      	orrs	r3, r2
 8002f56:	61bb      	str	r3, [r7, #24]
 8002f58:	4a24      	ldr	r2, [pc, #144]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f5a:	69bb      	ldr	r3, [r7, #24]
 8002f5c:	60d3      	str	r3, [r2, #12]
 8002f5e:	4b23      	ldr	r3, [pc, #140]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f60:	685b      	ldr	r3, [r3, #4]
 8002f62:	61bb      	str	r3, [r7, #24]
 8002f64:	693b      	ldr	r3, [r7, #16]
 8002f66:	43db      	mvns	r3, r3
 8002f68:	69ba      	ldr	r2, [r7, #24]
 8002f6a:	4013      	ands	r3, r2
 8002f6c:	61bb      	str	r3, [r7, #24]
 8002f6e:	683b      	ldr	r3, [r7, #0]
 8002f70:	685b      	ldr	r3, [r3, #4]
 8002f72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d003      	beq.n	8002f82 <HAL_GPIO_Init+0x29a>
 8002f7a:	69ba      	ldr	r2, [r7, #24]
 8002f7c:	693b      	ldr	r3, [r7, #16]
 8002f7e:	4313      	orrs	r3, r2
 8002f80:	61bb      	str	r3, [r7, #24]
 8002f82:	4a1a      	ldr	r2, [pc, #104]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f84:	69bb      	ldr	r3, [r7, #24]
 8002f86:	6053      	str	r3, [r2, #4]
 8002f88:	4b18      	ldr	r3, [pc, #96]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	61bb      	str	r3, [r7, #24]
 8002f8e:	693b      	ldr	r3, [r7, #16]
 8002f90:	43db      	mvns	r3, r3
 8002f92:	69ba      	ldr	r2, [r7, #24]
 8002f94:	4013      	ands	r3, r2
 8002f96:	61bb      	str	r3, [r7, #24]
 8002f98:	683b      	ldr	r3, [r7, #0]
 8002f9a:	685b      	ldr	r3, [r3, #4]
 8002f9c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002fa0:	2b00      	cmp	r3, #0
 8002fa2:	d003      	beq.n	8002fac <HAL_GPIO_Init+0x2c4>
 8002fa4:	69ba      	ldr	r2, [r7, #24]
 8002fa6:	693b      	ldr	r3, [r7, #16]
 8002fa8:	4313      	orrs	r3, r2
 8002faa:	61bb      	str	r3, [r7, #24]
 8002fac:	4a0f      	ldr	r2, [pc, #60]	@ (8002fec <HAL_GPIO_Init+0x304>)
 8002fae:	69bb      	ldr	r3, [r7, #24]
 8002fb0:	6013      	str	r3, [r2, #0]
 8002fb2:	69fb      	ldr	r3, [r7, #28]
 8002fb4:	3301      	adds	r3, #1
 8002fb6:	61fb      	str	r3, [r7, #28]
 8002fb8:	69fb      	ldr	r3, [r7, #28]
 8002fba:	2b0f      	cmp	r3, #15
 8002fbc:	f67f aea2 	bls.w	8002d04 <HAL_GPIO_Init+0x1c>
 8002fc0:	bf00      	nop
 8002fc2:	bf00      	nop
 8002fc4:	3724      	adds	r7, #36	@ 0x24
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fcc:	4770      	bx	lr
 8002fce:	bf00      	nop
 8002fd0:	40023800 	.word	0x40023800
 8002fd4:	40013800 	.word	0x40013800
 8002fd8:	40020000 	.word	0x40020000
 8002fdc:	40020400 	.word	0x40020400
 8002fe0:	40020800 	.word	0x40020800
 8002fe4:	40020c00 	.word	0x40020c00
 8002fe8:	40021000 	.word	0x40021000
 8002fec:	40013c00 	.word	0x40013c00

08002ff0 <HAL_GPIO_WritePin>:
 8002ff0:	b480      	push	{r7}
 8002ff2:	b083      	sub	sp, #12
 8002ff4:	af00      	add	r7, sp, #0
 8002ff6:	6078      	str	r0, [r7, #4]
 8002ff8:	460b      	mov	r3, r1
 8002ffa:	807b      	strh	r3, [r7, #2]
 8002ffc:	4613      	mov	r3, r2
 8002ffe:	707b      	strb	r3, [r7, #1]
 8003000:	787b      	ldrb	r3, [r7, #1]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d003      	beq.n	800300e <HAL_GPIO_WritePin+0x1e>
 8003006:	887a      	ldrh	r2, [r7, #2]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	619a      	str	r2, [r3, #24]
 800300c:	e003      	b.n	8003016 <HAL_GPIO_WritePin+0x26>
 800300e:	887b      	ldrh	r3, [r7, #2]
 8003010:	041a      	lsls	r2, r3, #16
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	619a      	str	r2, [r3, #24]
 8003016:	bf00      	nop
 8003018:	370c      	adds	r7, #12
 800301a:	46bd      	mov	sp, r7
 800301c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003020:	4770      	bx	lr

08003022 <HAL_GPIO_TogglePin>:
 8003022:	b480      	push	{r7}
 8003024:	b085      	sub	sp, #20
 8003026:	af00      	add	r7, sp, #0
 8003028:	6078      	str	r0, [r7, #4]
 800302a:	460b      	mov	r3, r1
 800302c:	807b      	strh	r3, [r7, #2]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	695b      	ldr	r3, [r3, #20]
 8003032:	60fb      	str	r3, [r7, #12]
 8003034:	887a      	ldrh	r2, [r7, #2]
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	4013      	ands	r3, r2
 800303a:	041a      	lsls	r2, r3, #16
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	43d9      	mvns	r1, r3
 8003040:	887b      	ldrh	r3, [r7, #2]
 8003042:	400b      	ands	r3, r1
 8003044:	431a      	orrs	r2, r3
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	619a      	str	r2, [r3, #24]
 800304a:	bf00      	nop
 800304c:	3714      	adds	r7, #20
 800304e:	46bd      	mov	sp, r7
 8003050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003054:	4770      	bx	lr
	...

08003058 <HAL_RCC_OscConfig>:
 8003058:	b580      	push	{r7, lr}
 800305a:	b086      	sub	sp, #24
 800305c:	af00      	add	r7, sp, #0
 800305e:	6078      	str	r0, [r7, #4]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	2b00      	cmp	r3, #0
 8003064:	d101      	bne.n	800306a <HAL_RCC_OscConfig+0x12>
 8003066:	2301      	movs	r3, #1
 8003068:	e267      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	f003 0301 	and.w	r3, r3, #1
 8003072:	2b00      	cmp	r3, #0
 8003074:	d075      	beq.n	8003162 <HAL_RCC_OscConfig+0x10a>
 8003076:	4b88      	ldr	r3, [pc, #544]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003078:	689b      	ldr	r3, [r3, #8]
 800307a:	f003 030c 	and.w	r3, r3, #12
 800307e:	2b04      	cmp	r3, #4
 8003080:	d00c      	beq.n	800309c <HAL_RCC_OscConfig+0x44>
 8003082:	4b85      	ldr	r3, [pc, #532]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003084:	689b      	ldr	r3, [r3, #8]
 8003086:	f003 030c 	and.w	r3, r3, #12
 800308a:	2b08      	cmp	r3, #8
 800308c:	d112      	bne.n	80030b4 <HAL_RCC_OscConfig+0x5c>
 800308e:	4b82      	ldr	r3, [pc, #520]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003090:	685b      	ldr	r3, [r3, #4]
 8003092:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003096:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800309a:	d10b      	bne.n	80030b4 <HAL_RCC_OscConfig+0x5c>
 800309c:	4b7e      	ldr	r3, [pc, #504]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d05b      	beq.n	8003160 <HAL_RCC_OscConfig+0x108>
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	685b      	ldr	r3, [r3, #4]
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d157      	bne.n	8003160 <HAL_RCC_OscConfig+0x108>
 80030b0:	2301      	movs	r3, #1
 80030b2:	e242      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	685b      	ldr	r3, [r3, #4]
 80030b8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80030bc:	d106      	bne.n	80030cc <HAL_RCC_OscConfig+0x74>
 80030be:	4b76      	ldr	r3, [pc, #472]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	4a75      	ldr	r2, [pc, #468]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030c4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80030c8:	6013      	str	r3, [r2, #0]
 80030ca:	e01d      	b.n	8003108 <HAL_RCC_OscConfig+0xb0>
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	685b      	ldr	r3, [r3, #4]
 80030d0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80030d4:	d10c      	bne.n	80030f0 <HAL_RCC_OscConfig+0x98>
 80030d6:	4b70      	ldr	r3, [pc, #448]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	4a6f      	ldr	r2, [pc, #444]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030dc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80030e0:	6013      	str	r3, [r2, #0]
 80030e2:	4b6d      	ldr	r3, [pc, #436]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	4a6c      	ldr	r2, [pc, #432]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030e8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80030ec:	6013      	str	r3, [r2, #0]
 80030ee:	e00b      	b.n	8003108 <HAL_RCC_OscConfig+0xb0>
 80030f0:	4b69      	ldr	r3, [pc, #420]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	4a68      	ldr	r2, [pc, #416]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030f6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80030fa:	6013      	str	r3, [r2, #0]
 80030fc:	4b66      	ldr	r3, [pc, #408]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	4a65      	ldr	r2, [pc, #404]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003102:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003106:	6013      	str	r3, [r2, #0]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	685b      	ldr	r3, [r3, #4]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d013      	beq.n	8003138 <HAL_RCC_OscConfig+0xe0>
 8003110:	f7ff f92e 	bl	8002370 <HAL_GetTick>
 8003114:	6138      	str	r0, [r7, #16]
 8003116:	e008      	b.n	800312a <HAL_RCC_OscConfig+0xd2>
 8003118:	f7ff f92a 	bl	8002370 <HAL_GetTick>
 800311c:	4602      	mov	r2, r0
 800311e:	693b      	ldr	r3, [r7, #16]
 8003120:	1ad3      	subs	r3, r2, r3
 8003122:	2b64      	cmp	r3, #100	@ 0x64
 8003124:	d901      	bls.n	800312a <HAL_RCC_OscConfig+0xd2>
 8003126:	2303      	movs	r3, #3
 8003128:	e207      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 800312a:	4b5b      	ldr	r3, [pc, #364]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003132:	2b00      	cmp	r3, #0
 8003134:	d0f0      	beq.n	8003118 <HAL_RCC_OscConfig+0xc0>
 8003136:	e014      	b.n	8003162 <HAL_RCC_OscConfig+0x10a>
 8003138:	f7ff f91a 	bl	8002370 <HAL_GetTick>
 800313c:	6138      	str	r0, [r7, #16]
 800313e:	e008      	b.n	8003152 <HAL_RCC_OscConfig+0xfa>
 8003140:	f7ff f916 	bl	8002370 <HAL_GetTick>
 8003144:	4602      	mov	r2, r0
 8003146:	693b      	ldr	r3, [r7, #16]
 8003148:	1ad3      	subs	r3, r2, r3
 800314a:	2b64      	cmp	r3, #100	@ 0x64
 800314c:	d901      	bls.n	8003152 <HAL_RCC_OscConfig+0xfa>
 800314e:	2303      	movs	r3, #3
 8003150:	e1f3      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 8003152:	4b51      	ldr	r3, [pc, #324]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800315a:	2b00      	cmp	r3, #0
 800315c:	d1f0      	bne.n	8003140 <HAL_RCC_OscConfig+0xe8>
 800315e:	e000      	b.n	8003162 <HAL_RCC_OscConfig+0x10a>
 8003160:	bf00      	nop
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	f003 0302 	and.w	r3, r3, #2
 800316a:	2b00      	cmp	r3, #0
 800316c:	d063      	beq.n	8003236 <HAL_RCC_OscConfig+0x1de>
 800316e:	4b4a      	ldr	r3, [pc, #296]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003170:	689b      	ldr	r3, [r3, #8]
 8003172:	f003 030c 	and.w	r3, r3, #12
 8003176:	2b00      	cmp	r3, #0
 8003178:	d00b      	beq.n	8003192 <HAL_RCC_OscConfig+0x13a>
 800317a:	4b47      	ldr	r3, [pc, #284]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 800317c:	689b      	ldr	r3, [r3, #8]
 800317e:	f003 030c 	and.w	r3, r3, #12
 8003182:	2b08      	cmp	r3, #8
 8003184:	d11c      	bne.n	80031c0 <HAL_RCC_OscConfig+0x168>
 8003186:	4b44      	ldr	r3, [pc, #272]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003188:	685b      	ldr	r3, [r3, #4]
 800318a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800318e:	2b00      	cmp	r3, #0
 8003190:	d116      	bne.n	80031c0 <HAL_RCC_OscConfig+0x168>
 8003192:	4b41      	ldr	r3, [pc, #260]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	f003 0302 	and.w	r3, r3, #2
 800319a:	2b00      	cmp	r3, #0
 800319c:	d005      	beq.n	80031aa <HAL_RCC_OscConfig+0x152>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	68db      	ldr	r3, [r3, #12]
 80031a2:	2b01      	cmp	r3, #1
 80031a4:	d001      	beq.n	80031aa <HAL_RCC_OscConfig+0x152>
 80031a6:	2301      	movs	r3, #1
 80031a8:	e1c7      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80031aa:	4b3b      	ldr	r3, [pc, #236]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	691b      	ldr	r3, [r3, #16]
 80031b6:	00db      	lsls	r3, r3, #3
 80031b8:	4937      	ldr	r1, [pc, #220]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80031ba:	4313      	orrs	r3, r2
 80031bc:	600b      	str	r3, [r1, #0]
 80031be:	e03a      	b.n	8003236 <HAL_RCC_OscConfig+0x1de>
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	68db      	ldr	r3, [r3, #12]
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d020      	beq.n	800320a <HAL_RCC_OscConfig+0x1b2>
 80031c8:	4b34      	ldr	r3, [pc, #208]	@ (800329c <HAL_RCC_OscConfig+0x244>)
 80031ca:	2201      	movs	r2, #1
 80031cc:	601a      	str	r2, [r3, #0]
 80031ce:	f7ff f8cf 	bl	8002370 <HAL_GetTick>
 80031d2:	6138      	str	r0, [r7, #16]
 80031d4:	e008      	b.n	80031e8 <HAL_RCC_OscConfig+0x190>
 80031d6:	f7ff f8cb 	bl	8002370 <HAL_GetTick>
 80031da:	4602      	mov	r2, r0
 80031dc:	693b      	ldr	r3, [r7, #16]
 80031de:	1ad3      	subs	r3, r2, r3
 80031e0:	2b02      	cmp	r3, #2
 80031e2:	d901      	bls.n	80031e8 <HAL_RCC_OscConfig+0x190>
 80031e4:	2303      	movs	r3, #3
 80031e6:	e1a8      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80031e8:	4b2b      	ldr	r3, [pc, #172]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	f003 0302 	and.w	r3, r3, #2
 80031f0:	2b00      	cmp	r3, #0
 80031f2:	d0f0      	beq.n	80031d6 <HAL_RCC_OscConfig+0x17e>
 80031f4:	4b28      	ldr	r3, [pc, #160]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	691b      	ldr	r3, [r3, #16]
 8003200:	00db      	lsls	r3, r3, #3
 8003202:	4925      	ldr	r1, [pc, #148]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 8003204:	4313      	orrs	r3, r2
 8003206:	600b      	str	r3, [r1, #0]
 8003208:	e015      	b.n	8003236 <HAL_RCC_OscConfig+0x1de>
 800320a:	4b24      	ldr	r3, [pc, #144]	@ (800329c <HAL_RCC_OscConfig+0x244>)
 800320c:	2200      	movs	r2, #0
 800320e:	601a      	str	r2, [r3, #0]
 8003210:	f7ff f8ae 	bl	8002370 <HAL_GetTick>
 8003214:	6138      	str	r0, [r7, #16]
 8003216:	e008      	b.n	800322a <HAL_RCC_OscConfig+0x1d2>
 8003218:	f7ff f8aa 	bl	8002370 <HAL_GetTick>
 800321c:	4602      	mov	r2, r0
 800321e:	693b      	ldr	r3, [r7, #16]
 8003220:	1ad3      	subs	r3, r2, r3
 8003222:	2b02      	cmp	r3, #2
 8003224:	d901      	bls.n	800322a <HAL_RCC_OscConfig+0x1d2>
 8003226:	2303      	movs	r3, #3
 8003228:	e187      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 800322a:	4b1b      	ldr	r3, [pc, #108]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	f003 0302 	and.w	r3, r3, #2
 8003232:	2b00      	cmp	r3, #0
 8003234:	d1f0      	bne.n	8003218 <HAL_RCC_OscConfig+0x1c0>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f003 0308 	and.w	r3, r3, #8
 800323e:	2b00      	cmp	r3, #0
 8003240:	d036      	beq.n	80032b0 <HAL_RCC_OscConfig+0x258>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	695b      	ldr	r3, [r3, #20]
 8003246:	2b00      	cmp	r3, #0
 8003248:	d016      	beq.n	8003278 <HAL_RCC_OscConfig+0x220>
 800324a:	4b15      	ldr	r3, [pc, #84]	@ (80032a0 <HAL_RCC_OscConfig+0x248>)
 800324c:	2201      	movs	r2, #1
 800324e:	601a      	str	r2, [r3, #0]
 8003250:	f7ff f88e 	bl	8002370 <HAL_GetTick>
 8003254:	6138      	str	r0, [r7, #16]
 8003256:	e008      	b.n	800326a <HAL_RCC_OscConfig+0x212>
 8003258:	f7ff f88a 	bl	8002370 <HAL_GetTick>
 800325c:	4602      	mov	r2, r0
 800325e:	693b      	ldr	r3, [r7, #16]
 8003260:	1ad3      	subs	r3, r2, r3
 8003262:	2b02      	cmp	r3, #2
 8003264:	d901      	bls.n	800326a <HAL_RCC_OscConfig+0x212>
 8003266:	2303      	movs	r3, #3
 8003268:	e167      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 800326a:	4b0b      	ldr	r3, [pc, #44]	@ (8003298 <HAL_RCC_OscConfig+0x240>)
 800326c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800326e:	f003 0302 	and.w	r3, r3, #2
 8003272:	2b00      	cmp	r3, #0
 8003274:	d0f0      	beq.n	8003258 <HAL_RCC_OscConfig+0x200>
 8003276:	e01b      	b.n	80032b0 <HAL_RCC_OscConfig+0x258>
 8003278:	4b09      	ldr	r3, [pc, #36]	@ (80032a0 <HAL_RCC_OscConfig+0x248>)
 800327a:	2200      	movs	r2, #0
 800327c:	601a      	str	r2, [r3, #0]
 800327e:	f7ff f877 	bl	8002370 <HAL_GetTick>
 8003282:	6138      	str	r0, [r7, #16]
 8003284:	e00e      	b.n	80032a4 <HAL_RCC_OscConfig+0x24c>
 8003286:	f7ff f873 	bl	8002370 <HAL_GetTick>
 800328a:	4602      	mov	r2, r0
 800328c:	693b      	ldr	r3, [r7, #16]
 800328e:	1ad3      	subs	r3, r2, r3
 8003290:	2b02      	cmp	r3, #2
 8003292:	d907      	bls.n	80032a4 <HAL_RCC_OscConfig+0x24c>
 8003294:	2303      	movs	r3, #3
 8003296:	e150      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 8003298:	40023800 	.word	0x40023800
 800329c:	42470000 	.word	0x42470000
 80032a0:	42470e80 	.word	0x42470e80
 80032a4:	4b88      	ldr	r3, [pc, #544]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80032a6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80032a8:	f003 0302 	and.w	r3, r3, #2
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d1ea      	bne.n	8003286 <HAL_RCC_OscConfig+0x22e>
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	f003 0304 	and.w	r3, r3, #4
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	f000 8097 	beq.w	80033ec <HAL_RCC_OscConfig+0x394>
 80032be:	2300      	movs	r3, #0
 80032c0:	75fb      	strb	r3, [r7, #23]
 80032c2:	4b81      	ldr	r3, [pc, #516]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80032c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032c6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	d10f      	bne.n	80032ee <HAL_RCC_OscConfig+0x296>
 80032ce:	2300      	movs	r3, #0
 80032d0:	60bb      	str	r3, [r7, #8]
 80032d2:	4b7d      	ldr	r3, [pc, #500]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80032d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032d6:	4a7c      	ldr	r2, [pc, #496]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80032d8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80032dc:	6413      	str	r3, [r2, #64]	@ 0x40
 80032de:	4b7a      	ldr	r3, [pc, #488]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80032e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032e2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80032e6:	60bb      	str	r3, [r7, #8]
 80032e8:	68bb      	ldr	r3, [r7, #8]
 80032ea:	2301      	movs	r3, #1
 80032ec:	75fb      	strb	r3, [r7, #23]
 80032ee:	4b77      	ldr	r3, [pc, #476]	@ (80034cc <HAL_RCC_OscConfig+0x474>)
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d118      	bne.n	800332c <HAL_RCC_OscConfig+0x2d4>
 80032fa:	4b74      	ldr	r3, [pc, #464]	@ (80034cc <HAL_RCC_OscConfig+0x474>)
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	4a73      	ldr	r2, [pc, #460]	@ (80034cc <HAL_RCC_OscConfig+0x474>)
 8003300:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003304:	6013      	str	r3, [r2, #0]
 8003306:	f7ff f833 	bl	8002370 <HAL_GetTick>
 800330a:	6138      	str	r0, [r7, #16]
 800330c:	e008      	b.n	8003320 <HAL_RCC_OscConfig+0x2c8>
 800330e:	f7ff f82f 	bl	8002370 <HAL_GetTick>
 8003312:	4602      	mov	r2, r0
 8003314:	693b      	ldr	r3, [r7, #16]
 8003316:	1ad3      	subs	r3, r2, r3
 8003318:	2b02      	cmp	r3, #2
 800331a:	d901      	bls.n	8003320 <HAL_RCC_OscConfig+0x2c8>
 800331c:	2303      	movs	r3, #3
 800331e:	e10c      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 8003320:	4b6a      	ldr	r3, [pc, #424]	@ (80034cc <HAL_RCC_OscConfig+0x474>)
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003328:	2b00      	cmp	r3, #0
 800332a:	d0f0      	beq.n	800330e <HAL_RCC_OscConfig+0x2b6>
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	689b      	ldr	r3, [r3, #8]
 8003330:	2b01      	cmp	r3, #1
 8003332:	d106      	bne.n	8003342 <HAL_RCC_OscConfig+0x2ea>
 8003334:	4b64      	ldr	r3, [pc, #400]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003336:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003338:	4a63      	ldr	r2, [pc, #396]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800333a:	f043 0301 	orr.w	r3, r3, #1
 800333e:	6713      	str	r3, [r2, #112]	@ 0x70
 8003340:	e01c      	b.n	800337c <HAL_RCC_OscConfig+0x324>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	689b      	ldr	r3, [r3, #8]
 8003346:	2b05      	cmp	r3, #5
 8003348:	d10c      	bne.n	8003364 <HAL_RCC_OscConfig+0x30c>
 800334a:	4b5f      	ldr	r3, [pc, #380]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800334c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800334e:	4a5e      	ldr	r2, [pc, #376]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003350:	f043 0304 	orr.w	r3, r3, #4
 8003354:	6713      	str	r3, [r2, #112]	@ 0x70
 8003356:	4b5c      	ldr	r3, [pc, #368]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003358:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800335a:	4a5b      	ldr	r2, [pc, #364]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800335c:	f043 0301 	orr.w	r3, r3, #1
 8003360:	6713      	str	r3, [r2, #112]	@ 0x70
 8003362:	e00b      	b.n	800337c <HAL_RCC_OscConfig+0x324>
 8003364:	4b58      	ldr	r3, [pc, #352]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003366:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003368:	4a57      	ldr	r2, [pc, #348]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800336a:	f023 0301 	bic.w	r3, r3, #1
 800336e:	6713      	str	r3, [r2, #112]	@ 0x70
 8003370:	4b55      	ldr	r3, [pc, #340]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003372:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003374:	4a54      	ldr	r2, [pc, #336]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003376:	f023 0304 	bic.w	r3, r3, #4
 800337a:	6713      	str	r3, [r2, #112]	@ 0x70
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	689b      	ldr	r3, [r3, #8]
 8003380:	2b00      	cmp	r3, #0
 8003382:	d015      	beq.n	80033b0 <HAL_RCC_OscConfig+0x358>
 8003384:	f7fe fff4 	bl	8002370 <HAL_GetTick>
 8003388:	6138      	str	r0, [r7, #16]
 800338a:	e00a      	b.n	80033a2 <HAL_RCC_OscConfig+0x34a>
 800338c:	f7fe fff0 	bl	8002370 <HAL_GetTick>
 8003390:	4602      	mov	r2, r0
 8003392:	693b      	ldr	r3, [r7, #16]
 8003394:	1ad3      	subs	r3, r2, r3
 8003396:	f241 3288 	movw	r2, #5000	@ 0x1388
 800339a:	4293      	cmp	r3, r2
 800339c:	d901      	bls.n	80033a2 <HAL_RCC_OscConfig+0x34a>
 800339e:	2303      	movs	r3, #3
 80033a0:	e0cb      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80033a2:	4b49      	ldr	r3, [pc, #292]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80033a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80033a6:	f003 0302 	and.w	r3, r3, #2
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d0ee      	beq.n	800338c <HAL_RCC_OscConfig+0x334>
 80033ae:	e014      	b.n	80033da <HAL_RCC_OscConfig+0x382>
 80033b0:	f7fe ffde 	bl	8002370 <HAL_GetTick>
 80033b4:	6138      	str	r0, [r7, #16]
 80033b6:	e00a      	b.n	80033ce <HAL_RCC_OscConfig+0x376>
 80033b8:	f7fe ffda 	bl	8002370 <HAL_GetTick>
 80033bc:	4602      	mov	r2, r0
 80033be:	693b      	ldr	r3, [r7, #16]
 80033c0:	1ad3      	subs	r3, r2, r3
 80033c2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80033c6:	4293      	cmp	r3, r2
 80033c8:	d901      	bls.n	80033ce <HAL_RCC_OscConfig+0x376>
 80033ca:	2303      	movs	r3, #3
 80033cc:	e0b5      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80033ce:	4b3e      	ldr	r3, [pc, #248]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80033d0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80033d2:	f003 0302 	and.w	r3, r3, #2
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d1ee      	bne.n	80033b8 <HAL_RCC_OscConfig+0x360>
 80033da:	7dfb      	ldrb	r3, [r7, #23]
 80033dc:	2b01      	cmp	r3, #1
 80033de:	d105      	bne.n	80033ec <HAL_RCC_OscConfig+0x394>
 80033e0:	4b39      	ldr	r3, [pc, #228]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80033e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033e4:	4a38      	ldr	r2, [pc, #224]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80033e6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80033ea:	6413      	str	r3, [r2, #64]	@ 0x40
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	699b      	ldr	r3, [r3, #24]
 80033f0:	2b00      	cmp	r3, #0
 80033f2:	f000 80a1 	beq.w	8003538 <HAL_RCC_OscConfig+0x4e0>
 80033f6:	4b34      	ldr	r3, [pc, #208]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80033f8:	689b      	ldr	r3, [r3, #8]
 80033fa:	f003 030c 	and.w	r3, r3, #12
 80033fe:	2b08      	cmp	r3, #8
 8003400:	d05c      	beq.n	80034bc <HAL_RCC_OscConfig+0x464>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	699b      	ldr	r3, [r3, #24]
 8003406:	2b02      	cmp	r3, #2
 8003408:	d141      	bne.n	800348e <HAL_RCC_OscConfig+0x436>
 800340a:	4b31      	ldr	r3, [pc, #196]	@ (80034d0 <HAL_RCC_OscConfig+0x478>)
 800340c:	2200      	movs	r2, #0
 800340e:	601a      	str	r2, [r3, #0]
 8003410:	f7fe ffae 	bl	8002370 <HAL_GetTick>
 8003414:	6138      	str	r0, [r7, #16]
 8003416:	e008      	b.n	800342a <HAL_RCC_OscConfig+0x3d2>
 8003418:	f7fe ffaa 	bl	8002370 <HAL_GetTick>
 800341c:	4602      	mov	r2, r0
 800341e:	693b      	ldr	r3, [r7, #16]
 8003420:	1ad3      	subs	r3, r2, r3
 8003422:	2b02      	cmp	r3, #2
 8003424:	d901      	bls.n	800342a <HAL_RCC_OscConfig+0x3d2>
 8003426:	2303      	movs	r3, #3
 8003428:	e087      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 800342a:	4b27      	ldr	r3, [pc, #156]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003432:	2b00      	cmp	r3, #0
 8003434:	d1f0      	bne.n	8003418 <HAL_RCC_OscConfig+0x3c0>
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	69da      	ldr	r2, [r3, #28]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	6a1b      	ldr	r3, [r3, #32]
 800343e:	431a      	orrs	r2, r3
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003444:	019b      	lsls	r3, r3, #6
 8003446:	431a      	orrs	r2, r3
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800344c:	085b      	lsrs	r3, r3, #1
 800344e:	3b01      	subs	r3, #1
 8003450:	041b      	lsls	r3, r3, #16
 8003452:	431a      	orrs	r2, r3
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003458:	061b      	lsls	r3, r3, #24
 800345a:	491b      	ldr	r1, [pc, #108]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 800345c:	4313      	orrs	r3, r2
 800345e:	604b      	str	r3, [r1, #4]
 8003460:	4b1b      	ldr	r3, [pc, #108]	@ (80034d0 <HAL_RCC_OscConfig+0x478>)
 8003462:	2201      	movs	r2, #1
 8003464:	601a      	str	r2, [r3, #0]
 8003466:	f7fe ff83 	bl	8002370 <HAL_GetTick>
 800346a:	6138      	str	r0, [r7, #16]
 800346c:	e008      	b.n	8003480 <HAL_RCC_OscConfig+0x428>
 800346e:	f7fe ff7f 	bl	8002370 <HAL_GetTick>
 8003472:	4602      	mov	r2, r0
 8003474:	693b      	ldr	r3, [r7, #16]
 8003476:	1ad3      	subs	r3, r2, r3
 8003478:	2b02      	cmp	r3, #2
 800347a:	d901      	bls.n	8003480 <HAL_RCC_OscConfig+0x428>
 800347c:	2303      	movs	r3, #3
 800347e:	e05c      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 8003480:	4b11      	ldr	r3, [pc, #68]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003488:	2b00      	cmp	r3, #0
 800348a:	d0f0      	beq.n	800346e <HAL_RCC_OscConfig+0x416>
 800348c:	e054      	b.n	8003538 <HAL_RCC_OscConfig+0x4e0>
 800348e:	4b10      	ldr	r3, [pc, #64]	@ (80034d0 <HAL_RCC_OscConfig+0x478>)
 8003490:	2200      	movs	r2, #0
 8003492:	601a      	str	r2, [r3, #0]
 8003494:	f7fe ff6c 	bl	8002370 <HAL_GetTick>
 8003498:	6138      	str	r0, [r7, #16]
 800349a:	e008      	b.n	80034ae <HAL_RCC_OscConfig+0x456>
 800349c:	f7fe ff68 	bl	8002370 <HAL_GetTick>
 80034a0:	4602      	mov	r2, r0
 80034a2:	693b      	ldr	r3, [r7, #16]
 80034a4:	1ad3      	subs	r3, r2, r3
 80034a6:	2b02      	cmp	r3, #2
 80034a8:	d901      	bls.n	80034ae <HAL_RCC_OscConfig+0x456>
 80034aa:	2303      	movs	r3, #3
 80034ac:	e045      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80034ae:	4b06      	ldr	r3, [pc, #24]	@ (80034c8 <HAL_RCC_OscConfig+0x470>)
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d1f0      	bne.n	800349c <HAL_RCC_OscConfig+0x444>
 80034ba:	e03d      	b.n	8003538 <HAL_RCC_OscConfig+0x4e0>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	699b      	ldr	r3, [r3, #24]
 80034c0:	2b01      	cmp	r3, #1
 80034c2:	d107      	bne.n	80034d4 <HAL_RCC_OscConfig+0x47c>
 80034c4:	2301      	movs	r3, #1
 80034c6:	e038      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 80034c8:	40023800 	.word	0x40023800
 80034cc:	40007000 	.word	0x40007000
 80034d0:	42470060 	.word	0x42470060
 80034d4:	4b1b      	ldr	r3, [pc, #108]	@ (8003544 <HAL_RCC_OscConfig+0x4ec>)
 80034d6:	685b      	ldr	r3, [r3, #4]
 80034d8:	60fb      	str	r3, [r7, #12]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	699b      	ldr	r3, [r3, #24]
 80034de:	2b01      	cmp	r3, #1
 80034e0:	d028      	beq.n	8003534 <HAL_RCC_OscConfig+0x4dc>
 80034e2:	68fb      	ldr	r3, [r7, #12]
 80034e4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	69db      	ldr	r3, [r3, #28]
 80034ec:	429a      	cmp	r2, r3
 80034ee:	d121      	bne.n	8003534 <HAL_RCC_OscConfig+0x4dc>
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	6a1b      	ldr	r3, [r3, #32]
 80034fa:	429a      	cmp	r2, r3
 80034fc:	d11a      	bne.n	8003534 <HAL_RCC_OscConfig+0x4dc>
 80034fe:	68fa      	ldr	r2, [r7, #12]
 8003500:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003504:	4013      	ands	r3, r2
 8003506:	687a      	ldr	r2, [r7, #4]
 8003508:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800350a:	0192      	lsls	r2, r2, #6
 800350c:	4293      	cmp	r3, r2
 800350e:	d111      	bne.n	8003534 <HAL_RCC_OscConfig+0x4dc>
 8003510:	68fb      	ldr	r3, [r7, #12]
 8003512:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800351a:	085b      	lsrs	r3, r3, #1
 800351c:	3b01      	subs	r3, #1
 800351e:	041b      	lsls	r3, r3, #16
 8003520:	429a      	cmp	r2, r3
 8003522:	d107      	bne.n	8003534 <HAL_RCC_OscConfig+0x4dc>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800352e:	061b      	lsls	r3, r3, #24
 8003530:	429a      	cmp	r2, r3
 8003532:	d001      	beq.n	8003538 <HAL_RCC_OscConfig+0x4e0>
 8003534:	2301      	movs	r3, #1
 8003536:	e000      	b.n	800353a <HAL_RCC_OscConfig+0x4e2>
 8003538:	2300      	movs	r3, #0
 800353a:	4618      	mov	r0, r3
 800353c:	3718      	adds	r7, #24
 800353e:	46bd      	mov	sp, r7
 8003540:	bd80      	pop	{r7, pc}
 8003542:	bf00      	nop
 8003544:	40023800 	.word	0x40023800

08003548 <HAL_RCC_ClockConfig>:
 8003548:	b580      	push	{r7, lr}
 800354a:	b084      	sub	sp, #16
 800354c:	af00      	add	r7, sp, #0
 800354e:	6078      	str	r0, [r7, #4]
 8003550:	6039      	str	r1, [r7, #0]
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	2b00      	cmp	r3, #0
 8003556:	d101      	bne.n	800355c <HAL_RCC_ClockConfig+0x14>
 8003558:	2301      	movs	r3, #1
 800355a:	e0cc      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 800355c:	4b68      	ldr	r3, [pc, #416]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	f003 0307 	and.w	r3, r3, #7
 8003564:	683a      	ldr	r2, [r7, #0]
 8003566:	429a      	cmp	r2, r3
 8003568:	d90c      	bls.n	8003584 <HAL_RCC_ClockConfig+0x3c>
 800356a:	4b65      	ldr	r3, [pc, #404]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 800356c:	683a      	ldr	r2, [r7, #0]
 800356e:	b2d2      	uxtb	r2, r2
 8003570:	701a      	strb	r2, [r3, #0]
 8003572:	4b63      	ldr	r3, [pc, #396]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	f003 0307 	and.w	r3, r3, #7
 800357a:	683a      	ldr	r2, [r7, #0]
 800357c:	429a      	cmp	r2, r3
 800357e:	d001      	beq.n	8003584 <HAL_RCC_ClockConfig+0x3c>
 8003580:	2301      	movs	r3, #1
 8003582:	e0b8      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	f003 0302 	and.w	r3, r3, #2
 800358c:	2b00      	cmp	r3, #0
 800358e:	d020      	beq.n	80035d2 <HAL_RCC_ClockConfig+0x8a>
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f003 0304 	and.w	r3, r3, #4
 8003598:	2b00      	cmp	r3, #0
 800359a:	d005      	beq.n	80035a8 <HAL_RCC_ClockConfig+0x60>
 800359c:	4b59      	ldr	r3, [pc, #356]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 800359e:	689b      	ldr	r3, [r3, #8]
 80035a0:	4a58      	ldr	r2, [pc, #352]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035a2:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80035a6:	6093      	str	r3, [r2, #8]
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f003 0308 	and.w	r3, r3, #8
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d005      	beq.n	80035c0 <HAL_RCC_ClockConfig+0x78>
 80035b4:	4b53      	ldr	r3, [pc, #332]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035b6:	689b      	ldr	r3, [r3, #8]
 80035b8:	4a52      	ldr	r2, [pc, #328]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035ba:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80035be:	6093      	str	r3, [r2, #8]
 80035c0:	4b50      	ldr	r3, [pc, #320]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035c2:	689b      	ldr	r3, [r3, #8]
 80035c4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	689b      	ldr	r3, [r3, #8]
 80035cc:	494d      	ldr	r1, [pc, #308]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035ce:	4313      	orrs	r3, r2
 80035d0:	608b      	str	r3, [r1, #8]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	f003 0301 	and.w	r3, r3, #1
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d044      	beq.n	8003668 <HAL_RCC_ClockConfig+0x120>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	685b      	ldr	r3, [r3, #4]
 80035e2:	2b01      	cmp	r3, #1
 80035e4:	d107      	bne.n	80035f6 <HAL_RCC_ClockConfig+0xae>
 80035e6:	4b47      	ldr	r3, [pc, #284]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d119      	bne.n	8003626 <HAL_RCC_ClockConfig+0xde>
 80035f2:	2301      	movs	r3, #1
 80035f4:	e07f      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	685b      	ldr	r3, [r3, #4]
 80035fa:	2b02      	cmp	r3, #2
 80035fc:	d003      	beq.n	8003606 <HAL_RCC_ClockConfig+0xbe>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	685b      	ldr	r3, [r3, #4]
 8003602:	2b03      	cmp	r3, #3
 8003604:	d107      	bne.n	8003616 <HAL_RCC_ClockConfig+0xce>
 8003606:	4b3f      	ldr	r3, [pc, #252]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800360e:	2b00      	cmp	r3, #0
 8003610:	d109      	bne.n	8003626 <HAL_RCC_ClockConfig+0xde>
 8003612:	2301      	movs	r3, #1
 8003614:	e06f      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 8003616:	4b3b      	ldr	r3, [pc, #236]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	f003 0302 	and.w	r3, r3, #2
 800361e:	2b00      	cmp	r3, #0
 8003620:	d101      	bne.n	8003626 <HAL_RCC_ClockConfig+0xde>
 8003622:	2301      	movs	r3, #1
 8003624:	e067      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 8003626:	4b37      	ldr	r3, [pc, #220]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 8003628:	689b      	ldr	r3, [r3, #8]
 800362a:	f023 0203 	bic.w	r2, r3, #3
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	685b      	ldr	r3, [r3, #4]
 8003632:	4934      	ldr	r1, [pc, #208]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 8003634:	4313      	orrs	r3, r2
 8003636:	608b      	str	r3, [r1, #8]
 8003638:	f7fe fe9a 	bl	8002370 <HAL_GetTick>
 800363c:	60f8      	str	r0, [r7, #12]
 800363e:	e00a      	b.n	8003656 <HAL_RCC_ClockConfig+0x10e>
 8003640:	f7fe fe96 	bl	8002370 <HAL_GetTick>
 8003644:	4602      	mov	r2, r0
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	1ad3      	subs	r3, r2, r3
 800364a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800364e:	4293      	cmp	r3, r2
 8003650:	d901      	bls.n	8003656 <HAL_RCC_ClockConfig+0x10e>
 8003652:	2303      	movs	r3, #3
 8003654:	e04f      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 8003656:	4b2b      	ldr	r3, [pc, #172]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 8003658:	689b      	ldr	r3, [r3, #8]
 800365a:	f003 020c 	and.w	r2, r3, #12
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	685b      	ldr	r3, [r3, #4]
 8003662:	009b      	lsls	r3, r3, #2
 8003664:	429a      	cmp	r2, r3
 8003666:	d1eb      	bne.n	8003640 <HAL_RCC_ClockConfig+0xf8>
 8003668:	4b25      	ldr	r3, [pc, #148]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	f003 0307 	and.w	r3, r3, #7
 8003670:	683a      	ldr	r2, [r7, #0]
 8003672:	429a      	cmp	r2, r3
 8003674:	d20c      	bcs.n	8003690 <HAL_RCC_ClockConfig+0x148>
 8003676:	4b22      	ldr	r3, [pc, #136]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 8003678:	683a      	ldr	r2, [r7, #0]
 800367a:	b2d2      	uxtb	r2, r2
 800367c:	701a      	strb	r2, [r3, #0]
 800367e:	4b20      	ldr	r3, [pc, #128]	@ (8003700 <HAL_RCC_ClockConfig+0x1b8>)
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	f003 0307 	and.w	r3, r3, #7
 8003686:	683a      	ldr	r2, [r7, #0]
 8003688:	429a      	cmp	r2, r3
 800368a:	d001      	beq.n	8003690 <HAL_RCC_ClockConfig+0x148>
 800368c:	2301      	movs	r3, #1
 800368e:	e032      	b.n	80036f6 <HAL_RCC_ClockConfig+0x1ae>
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f003 0304 	and.w	r3, r3, #4
 8003698:	2b00      	cmp	r3, #0
 800369a:	d008      	beq.n	80036ae <HAL_RCC_ClockConfig+0x166>
 800369c:	4b19      	ldr	r3, [pc, #100]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 800369e:	689b      	ldr	r3, [r3, #8]
 80036a0:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	68db      	ldr	r3, [r3, #12]
 80036a8:	4916      	ldr	r1, [pc, #88]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80036aa:	4313      	orrs	r3, r2
 80036ac:	608b      	str	r3, [r1, #8]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f003 0308 	and.w	r3, r3, #8
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	d009      	beq.n	80036ce <HAL_RCC_ClockConfig+0x186>
 80036ba:	4b12      	ldr	r3, [pc, #72]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80036bc:	689b      	ldr	r3, [r3, #8]
 80036be:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	691b      	ldr	r3, [r3, #16]
 80036c6:	00db      	lsls	r3, r3, #3
 80036c8:	490e      	ldr	r1, [pc, #56]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80036ca:	4313      	orrs	r3, r2
 80036cc:	608b      	str	r3, [r1, #8]
 80036ce:	f000 f821 	bl	8003714 <HAL_RCC_GetSysClockFreq>
 80036d2:	4602      	mov	r2, r0
 80036d4:	4b0b      	ldr	r3, [pc, #44]	@ (8003704 <HAL_RCC_ClockConfig+0x1bc>)
 80036d6:	689b      	ldr	r3, [r3, #8]
 80036d8:	091b      	lsrs	r3, r3, #4
 80036da:	f003 030f 	and.w	r3, r3, #15
 80036de:	490a      	ldr	r1, [pc, #40]	@ (8003708 <HAL_RCC_ClockConfig+0x1c0>)
 80036e0:	5ccb      	ldrb	r3, [r1, r3]
 80036e2:	fa22 f303 	lsr.w	r3, r2, r3
 80036e6:	4a09      	ldr	r2, [pc, #36]	@ (800370c <HAL_RCC_ClockConfig+0x1c4>)
 80036e8:	6013      	str	r3, [r2, #0]
 80036ea:	4b09      	ldr	r3, [pc, #36]	@ (8003710 <HAL_RCC_ClockConfig+0x1c8>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	4618      	mov	r0, r3
 80036f0:	f7fe fdfa 	bl	80022e8 <HAL_InitTick>
 80036f4:	2300      	movs	r3, #0
 80036f6:	4618      	mov	r0, r3
 80036f8:	3710      	adds	r7, #16
 80036fa:	46bd      	mov	sp, r7
 80036fc:	bd80      	pop	{r7, pc}
 80036fe:	bf00      	nop
 8003700:	40023c00 	.word	0x40023c00
 8003704:	40023800 	.word	0x40023800
 8003708:	08009220 	.word	0x08009220
 800370c:	20000000 	.word	0x20000000
 8003710:	20000004 	.word	0x20000004

08003714 <HAL_RCC_GetSysClockFreq>:
 8003714:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003718:	b094      	sub	sp, #80	@ 0x50
 800371a:	af00      	add	r7, sp, #0
 800371c:	2300      	movs	r3, #0
 800371e:	647b      	str	r3, [r7, #68]	@ 0x44
 8003720:	2300      	movs	r3, #0
 8003722:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003724:	2300      	movs	r3, #0
 8003726:	643b      	str	r3, [r7, #64]	@ 0x40
 8003728:	2300      	movs	r3, #0
 800372a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800372c:	4b79      	ldr	r3, [pc, #484]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 800372e:	689b      	ldr	r3, [r3, #8]
 8003730:	f003 030c 	and.w	r3, r3, #12
 8003734:	2b08      	cmp	r3, #8
 8003736:	d00d      	beq.n	8003754 <HAL_RCC_GetSysClockFreq+0x40>
 8003738:	2b08      	cmp	r3, #8
 800373a:	f200 80e1 	bhi.w	8003900 <HAL_RCC_GetSysClockFreq+0x1ec>
 800373e:	2b00      	cmp	r3, #0
 8003740:	d002      	beq.n	8003748 <HAL_RCC_GetSysClockFreq+0x34>
 8003742:	2b04      	cmp	r3, #4
 8003744:	d003      	beq.n	800374e <HAL_RCC_GetSysClockFreq+0x3a>
 8003746:	e0db      	b.n	8003900 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003748:	4b73      	ldr	r3, [pc, #460]	@ (8003918 <HAL_RCC_GetSysClockFreq+0x204>)
 800374a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800374c:	e0db      	b.n	8003906 <HAL_RCC_GetSysClockFreq+0x1f2>
 800374e:	4b73      	ldr	r3, [pc, #460]	@ (800391c <HAL_RCC_GetSysClockFreq+0x208>)
 8003750:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003752:	e0d8      	b.n	8003906 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003754:	4b6f      	ldr	r3, [pc, #444]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 8003756:	685b      	ldr	r3, [r3, #4]
 8003758:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800375c:	647b      	str	r3, [r7, #68]	@ 0x44
 800375e:	4b6d      	ldr	r3, [pc, #436]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 8003760:	685b      	ldr	r3, [r3, #4]
 8003762:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003766:	2b00      	cmp	r3, #0
 8003768:	d063      	beq.n	8003832 <HAL_RCC_GetSysClockFreq+0x11e>
 800376a:	4b6a      	ldr	r3, [pc, #424]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 800376c:	685b      	ldr	r3, [r3, #4]
 800376e:	099b      	lsrs	r3, r3, #6
 8003770:	2200      	movs	r2, #0
 8003772:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003774:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8003776:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003778:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800377c:	633b      	str	r3, [r7, #48]	@ 0x30
 800377e:	2300      	movs	r3, #0
 8003780:	637b      	str	r3, [r7, #52]	@ 0x34
 8003782:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003786:	4622      	mov	r2, r4
 8003788:	462b      	mov	r3, r5
 800378a:	f04f 0000 	mov.w	r0, #0
 800378e:	f04f 0100 	mov.w	r1, #0
 8003792:	0159      	lsls	r1, r3, #5
 8003794:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003798:	0150      	lsls	r0, r2, #5
 800379a:	4602      	mov	r2, r0
 800379c:	460b      	mov	r3, r1
 800379e:	4621      	mov	r1, r4
 80037a0:	1a51      	subs	r1, r2, r1
 80037a2:	6139      	str	r1, [r7, #16]
 80037a4:	4629      	mov	r1, r5
 80037a6:	eb63 0301 	sbc.w	r3, r3, r1
 80037aa:	617b      	str	r3, [r7, #20]
 80037ac:	f04f 0200 	mov.w	r2, #0
 80037b0:	f04f 0300 	mov.w	r3, #0
 80037b4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80037b8:	4659      	mov	r1, fp
 80037ba:	018b      	lsls	r3, r1, #6
 80037bc:	4651      	mov	r1, sl
 80037be:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80037c2:	4651      	mov	r1, sl
 80037c4:	018a      	lsls	r2, r1, #6
 80037c6:	4651      	mov	r1, sl
 80037c8:	ebb2 0801 	subs.w	r8, r2, r1
 80037cc:	4659      	mov	r1, fp
 80037ce:	eb63 0901 	sbc.w	r9, r3, r1
 80037d2:	f04f 0200 	mov.w	r2, #0
 80037d6:	f04f 0300 	mov.w	r3, #0
 80037da:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80037de:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80037e2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80037e6:	4690      	mov	r8, r2
 80037e8:	4699      	mov	r9, r3
 80037ea:	4623      	mov	r3, r4
 80037ec:	eb18 0303 	adds.w	r3, r8, r3
 80037f0:	60bb      	str	r3, [r7, #8]
 80037f2:	462b      	mov	r3, r5
 80037f4:	eb49 0303 	adc.w	r3, r9, r3
 80037f8:	60fb      	str	r3, [r7, #12]
 80037fa:	f04f 0200 	mov.w	r2, #0
 80037fe:	f04f 0300 	mov.w	r3, #0
 8003802:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003806:	4629      	mov	r1, r5
 8003808:	024b      	lsls	r3, r1, #9
 800380a:	4621      	mov	r1, r4
 800380c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003810:	4621      	mov	r1, r4
 8003812:	024a      	lsls	r2, r1, #9
 8003814:	4610      	mov	r0, r2
 8003816:	4619      	mov	r1, r3
 8003818:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800381a:	2200      	movs	r2, #0
 800381c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800381e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003820:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003824:	f7fd f9c8 	bl	8000bb8 <__aeabi_uldivmod>
 8003828:	4602      	mov	r2, r0
 800382a:	460b      	mov	r3, r1
 800382c:	4613      	mov	r3, r2
 800382e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003830:	e058      	b.n	80038e4 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003832:	4b38      	ldr	r3, [pc, #224]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 8003834:	685b      	ldr	r3, [r3, #4]
 8003836:	099b      	lsrs	r3, r3, #6
 8003838:	2200      	movs	r2, #0
 800383a:	4618      	mov	r0, r3
 800383c:	4611      	mov	r1, r2
 800383e:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003842:	623b      	str	r3, [r7, #32]
 8003844:	2300      	movs	r3, #0
 8003846:	627b      	str	r3, [r7, #36]	@ 0x24
 8003848:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800384c:	4642      	mov	r2, r8
 800384e:	464b      	mov	r3, r9
 8003850:	f04f 0000 	mov.w	r0, #0
 8003854:	f04f 0100 	mov.w	r1, #0
 8003858:	0159      	lsls	r1, r3, #5
 800385a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800385e:	0150      	lsls	r0, r2, #5
 8003860:	4602      	mov	r2, r0
 8003862:	460b      	mov	r3, r1
 8003864:	4641      	mov	r1, r8
 8003866:	ebb2 0a01 	subs.w	sl, r2, r1
 800386a:	4649      	mov	r1, r9
 800386c:	eb63 0b01 	sbc.w	fp, r3, r1
 8003870:	f04f 0200 	mov.w	r2, #0
 8003874:	f04f 0300 	mov.w	r3, #0
 8003878:	ea4f 138b 	mov.w	r3, fp, lsl #6
 800387c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003880:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003884:	ebb2 040a 	subs.w	r4, r2, sl
 8003888:	eb63 050b 	sbc.w	r5, r3, fp
 800388c:	f04f 0200 	mov.w	r2, #0
 8003890:	f04f 0300 	mov.w	r3, #0
 8003894:	00eb      	lsls	r3, r5, #3
 8003896:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800389a:	00e2      	lsls	r2, r4, #3
 800389c:	4614      	mov	r4, r2
 800389e:	461d      	mov	r5, r3
 80038a0:	4643      	mov	r3, r8
 80038a2:	18e3      	adds	r3, r4, r3
 80038a4:	603b      	str	r3, [r7, #0]
 80038a6:	464b      	mov	r3, r9
 80038a8:	eb45 0303 	adc.w	r3, r5, r3
 80038ac:	607b      	str	r3, [r7, #4]
 80038ae:	f04f 0200 	mov.w	r2, #0
 80038b2:	f04f 0300 	mov.w	r3, #0
 80038b6:	e9d7 4500 	ldrd	r4, r5, [r7]
 80038ba:	4629      	mov	r1, r5
 80038bc:	028b      	lsls	r3, r1, #10
 80038be:	4621      	mov	r1, r4
 80038c0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80038c4:	4621      	mov	r1, r4
 80038c6:	028a      	lsls	r2, r1, #10
 80038c8:	4610      	mov	r0, r2
 80038ca:	4619      	mov	r1, r3
 80038cc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80038ce:	2200      	movs	r2, #0
 80038d0:	61bb      	str	r3, [r7, #24]
 80038d2:	61fa      	str	r2, [r7, #28]
 80038d4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80038d8:	f7fd f96e 	bl	8000bb8 <__aeabi_uldivmod>
 80038dc:	4602      	mov	r2, r0
 80038de:	460b      	mov	r3, r1
 80038e0:	4613      	mov	r3, r2
 80038e2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80038e4:	4b0b      	ldr	r3, [pc, #44]	@ (8003914 <HAL_RCC_GetSysClockFreq+0x200>)
 80038e6:	685b      	ldr	r3, [r3, #4]
 80038e8:	0c1b      	lsrs	r3, r3, #16
 80038ea:	f003 0303 	and.w	r3, r3, #3
 80038ee:	3301      	adds	r3, #1
 80038f0:	005b      	lsls	r3, r3, #1
 80038f2:	643b      	str	r3, [r7, #64]	@ 0x40
 80038f4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80038f6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80038f8:	fbb2 f3f3 	udiv	r3, r2, r3
 80038fc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80038fe:	e002      	b.n	8003906 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003900:	4b05      	ldr	r3, [pc, #20]	@ (8003918 <HAL_RCC_GetSysClockFreq+0x204>)
 8003902:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003904:	bf00      	nop
 8003906:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003908:	4618      	mov	r0, r3
 800390a:	3750      	adds	r7, #80	@ 0x50
 800390c:	46bd      	mov	sp, r7
 800390e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003912:	bf00      	nop
 8003914:	40023800 	.word	0x40023800
 8003918:	00f42400 	.word	0x00f42400
 800391c:	007a1200 	.word	0x007a1200

08003920 <HAL_RCC_GetHCLKFreq>:
 8003920:	b480      	push	{r7}
 8003922:	af00      	add	r7, sp, #0
 8003924:	4b03      	ldr	r3, [pc, #12]	@ (8003934 <HAL_RCC_GetHCLKFreq+0x14>)
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	4618      	mov	r0, r3
 800392a:	46bd      	mov	sp, r7
 800392c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003930:	4770      	bx	lr
 8003932:	bf00      	nop
 8003934:	20000000 	.word	0x20000000

08003938 <HAL_RCC_GetPCLK1Freq>:
 8003938:	b580      	push	{r7, lr}
 800393a:	af00      	add	r7, sp, #0
 800393c:	f7ff fff0 	bl	8003920 <HAL_RCC_GetHCLKFreq>
 8003940:	4602      	mov	r2, r0
 8003942:	4b05      	ldr	r3, [pc, #20]	@ (8003958 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003944:	689b      	ldr	r3, [r3, #8]
 8003946:	0a9b      	lsrs	r3, r3, #10
 8003948:	f003 0307 	and.w	r3, r3, #7
 800394c:	4903      	ldr	r1, [pc, #12]	@ (800395c <HAL_RCC_GetPCLK1Freq+0x24>)
 800394e:	5ccb      	ldrb	r3, [r1, r3]
 8003950:	fa22 f303 	lsr.w	r3, r2, r3
 8003954:	4618      	mov	r0, r3
 8003956:	bd80      	pop	{r7, pc}
 8003958:	40023800 	.word	0x40023800
 800395c:	08009230 	.word	0x08009230

08003960 <HAL_RCC_GetPCLK2Freq>:
 8003960:	b580      	push	{r7, lr}
 8003962:	af00      	add	r7, sp, #0
 8003964:	f7ff ffdc 	bl	8003920 <HAL_RCC_GetHCLKFreq>
 8003968:	4602      	mov	r2, r0
 800396a:	4b05      	ldr	r3, [pc, #20]	@ (8003980 <HAL_RCC_GetPCLK2Freq+0x20>)
 800396c:	689b      	ldr	r3, [r3, #8]
 800396e:	0b5b      	lsrs	r3, r3, #13
 8003970:	f003 0307 	and.w	r3, r3, #7
 8003974:	4903      	ldr	r1, [pc, #12]	@ (8003984 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003976:	5ccb      	ldrb	r3, [r1, r3]
 8003978:	fa22 f303 	lsr.w	r3, r2, r3
 800397c:	4618      	mov	r0, r3
 800397e:	bd80      	pop	{r7, pc}
 8003980:	40023800 	.word	0x40023800
 8003984:	08009230 	.word	0x08009230

08003988 <HAL_SPI_Init>:
 8003988:	b580      	push	{r7, lr}
 800398a:	b082      	sub	sp, #8
 800398c:	af00      	add	r7, sp, #0
 800398e:	6078      	str	r0, [r7, #4]
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	2b00      	cmp	r3, #0
 8003994:	d101      	bne.n	800399a <HAL_SPI_Init+0x12>
 8003996:	2301      	movs	r3, #1
 8003998:	e07b      	b.n	8003a92 <HAL_SPI_Init+0x10a>
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d108      	bne.n	80039b4 <HAL_SPI_Init+0x2c>
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	685b      	ldr	r3, [r3, #4]
 80039a6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80039aa:	d009      	beq.n	80039c0 <HAL_SPI_Init+0x38>
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	2200      	movs	r2, #0
 80039b0:	61da      	str	r2, [r3, #28]
 80039b2:	e005      	b.n	80039c0 <HAL_SPI_Init+0x38>
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	2200      	movs	r2, #0
 80039b8:	611a      	str	r2, [r3, #16]
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	2200      	movs	r2, #0
 80039be:	615a      	str	r2, [r3, #20]
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	2200      	movs	r2, #0
 80039c4:	629a      	str	r2, [r3, #40]	@ 0x28
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80039cc:	b2db      	uxtb	r3, r3
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d106      	bne.n	80039e0 <HAL_SPI_Init+0x58>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	2200      	movs	r2, #0
 80039d6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80039da:	6878      	ldr	r0, [r7, #4]
 80039dc:	f7fe f9f0 	bl	8001dc0 <HAL_SPI_MspInit>
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	2202      	movs	r2, #2
 80039e4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	681a      	ldr	r2, [r3, #0]
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80039f6:	601a      	str	r2, [r3, #0]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	685b      	ldr	r3, [r3, #4]
 80039fc:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	689b      	ldr	r3, [r3, #8]
 8003a04:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8003a08:	431a      	orrs	r2, r3
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	68db      	ldr	r3, [r3, #12]
 8003a0e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003a12:	431a      	orrs	r2, r3
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	691b      	ldr	r3, [r3, #16]
 8003a18:	f003 0302 	and.w	r3, r3, #2
 8003a1c:	431a      	orrs	r2, r3
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	695b      	ldr	r3, [r3, #20]
 8003a22:	f003 0301 	and.w	r3, r3, #1
 8003a26:	431a      	orrs	r2, r3
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	699b      	ldr	r3, [r3, #24]
 8003a2c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003a30:	431a      	orrs	r2, r3
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	69db      	ldr	r3, [r3, #28]
 8003a36:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8003a3a:	431a      	orrs	r2, r3
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	6a1b      	ldr	r3, [r3, #32]
 8003a40:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a44:	ea42 0103 	orr.w	r1, r2, r3
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003a4c:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	430a      	orrs	r2, r1
 8003a56:	601a      	str	r2, [r3, #0]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	699b      	ldr	r3, [r3, #24]
 8003a5c:	0c1b      	lsrs	r3, r3, #16
 8003a5e:	f003 0104 	and.w	r1, r3, #4
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a66:	f003 0210 	and.w	r2, r3, #16
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	430a      	orrs	r2, r1
 8003a70:	605a      	str	r2, [r3, #4]
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	69da      	ldr	r2, [r3, #28]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003a80:	61da      	str	r2, [r3, #28]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	2200      	movs	r2, #0
 8003a86:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	2201      	movs	r2, #1
 8003a8c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003a90:	2300      	movs	r3, #0
 8003a92:	4618      	mov	r0, r3
 8003a94:	3708      	adds	r7, #8
 8003a96:	46bd      	mov	sp, r7
 8003a98:	bd80      	pop	{r7, pc}

08003a9a <HAL_SPI_Transmit>:
 8003a9a:	b580      	push	{r7, lr}
 8003a9c:	b088      	sub	sp, #32
 8003a9e:	af00      	add	r7, sp, #0
 8003aa0:	60f8      	str	r0, [r7, #12]
 8003aa2:	60b9      	str	r1, [r7, #8]
 8003aa4:	603b      	str	r3, [r7, #0]
 8003aa6:	4613      	mov	r3, r2
 8003aa8:	80fb      	strh	r3, [r7, #6]
 8003aaa:	f7fe fc61 	bl	8002370 <HAL_GetTick>
 8003aae:	61f8      	str	r0, [r7, #28]
 8003ab0:	88fb      	ldrh	r3, [r7, #6]
 8003ab2:	837b      	strh	r3, [r7, #26]
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003aba:	b2db      	uxtb	r3, r3
 8003abc:	2b01      	cmp	r3, #1
 8003abe:	d001      	beq.n	8003ac4 <HAL_SPI_Transmit+0x2a>
 8003ac0:	2302      	movs	r3, #2
 8003ac2:	e12a      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003ac4:	68bb      	ldr	r3, [r7, #8]
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d002      	beq.n	8003ad0 <HAL_SPI_Transmit+0x36>
 8003aca:	88fb      	ldrh	r3, [r7, #6]
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d101      	bne.n	8003ad4 <HAL_SPI_Transmit+0x3a>
 8003ad0:	2301      	movs	r3, #1
 8003ad2:	e122      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8003ada:	2b01      	cmp	r3, #1
 8003adc:	d101      	bne.n	8003ae2 <HAL_SPI_Transmit+0x48>
 8003ade:	2302      	movs	r3, #2
 8003ae0:	e11b      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	2201      	movs	r2, #1
 8003ae6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	2203      	movs	r2, #3
 8003aee:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	2200      	movs	r2, #0
 8003af6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	68ba      	ldr	r2, [r7, #8]
 8003afc:	631a      	str	r2, [r3, #48]	@ 0x30
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	88fa      	ldrh	r2, [r7, #6]
 8003b02:	869a      	strh	r2, [r3, #52]	@ 0x34
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	88fa      	ldrh	r2, [r7, #6]
 8003b08:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	2200      	movs	r2, #0
 8003b0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	2200      	movs	r2, #0
 8003b14:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	2200      	movs	r2, #0
 8003b1a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	2200      	movs	r2, #0
 8003b20:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	2200      	movs	r2, #0
 8003b26:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	689b      	ldr	r3, [r3, #8]
 8003b2c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003b30:	d10f      	bne.n	8003b52 <HAL_SPI_Transmit+0xb8>
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	681a      	ldr	r2, [r3, #0]
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003b40:	601a      	str	r2, [r3, #0]
 8003b42:	68fb      	ldr	r3, [r7, #12]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	681a      	ldr	r2, [r3, #0]
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003b50:	601a      	str	r2, [r3, #0]
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003b5c:	2b40      	cmp	r3, #64	@ 0x40
 8003b5e:	d007      	beq.n	8003b70 <HAL_SPI_Transmit+0xd6>
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	681a      	ldr	r2, [r3, #0]
 8003b66:	68fb      	ldr	r3, [r7, #12]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003b6e:	601a      	str	r2, [r3, #0]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	68db      	ldr	r3, [r3, #12]
 8003b74:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003b78:	d152      	bne.n	8003c20 <HAL_SPI_Transmit+0x186>
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	685b      	ldr	r3, [r3, #4]
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d002      	beq.n	8003b88 <HAL_SPI_Transmit+0xee>
 8003b82:	8b7b      	ldrh	r3, [r7, #26]
 8003b84:	2b01      	cmp	r3, #1
 8003b86:	d145      	bne.n	8003c14 <HAL_SPI_Transmit+0x17a>
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b8c:	881a      	ldrh	r2, [r3, #0]
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	60da      	str	r2, [r3, #12]
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b98:	1c9a      	adds	r2, r3, #2
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003ba2:	b29b      	uxth	r3, r3
 8003ba4:	3b01      	subs	r3, #1
 8003ba6:	b29a      	uxth	r2, r3
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003bac:	e032      	b.n	8003c14 <HAL_SPI_Transmit+0x17a>
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	689b      	ldr	r3, [r3, #8]
 8003bb4:	f003 0302 	and.w	r3, r3, #2
 8003bb8:	2b02      	cmp	r3, #2
 8003bba:	d112      	bne.n	8003be2 <HAL_SPI_Transmit+0x148>
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bc0:	881a      	ldrh	r2, [r3, #0]
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	60da      	str	r2, [r3, #12]
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bcc:	1c9a      	adds	r2, r3, #2
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	631a      	str	r2, [r3, #48]	@ 0x30
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003bd6:	b29b      	uxth	r3, r3
 8003bd8:	3b01      	subs	r3, #1
 8003bda:	b29a      	uxth	r2, r3
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003be0:	e018      	b.n	8003c14 <HAL_SPI_Transmit+0x17a>
 8003be2:	f7fe fbc5 	bl	8002370 <HAL_GetTick>
 8003be6:	4602      	mov	r2, r0
 8003be8:	69fb      	ldr	r3, [r7, #28]
 8003bea:	1ad3      	subs	r3, r2, r3
 8003bec:	683a      	ldr	r2, [r7, #0]
 8003bee:	429a      	cmp	r2, r3
 8003bf0:	d803      	bhi.n	8003bfa <HAL_SPI_Transmit+0x160>
 8003bf2:	683b      	ldr	r3, [r7, #0]
 8003bf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003bf8:	d102      	bne.n	8003c00 <HAL_SPI_Transmit+0x166>
 8003bfa:	683b      	ldr	r3, [r7, #0]
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	d109      	bne.n	8003c14 <HAL_SPI_Transmit+0x17a>
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	2201      	movs	r2, #1
 8003c04:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	2200      	movs	r2, #0
 8003c0c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003c10:	2303      	movs	r3, #3
 8003c12:	e082      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003c18:	b29b      	uxth	r3, r3
 8003c1a:	2b00      	cmp	r3, #0
 8003c1c:	d1c7      	bne.n	8003bae <HAL_SPI_Transmit+0x114>
 8003c1e:	e053      	b.n	8003cc8 <HAL_SPI_Transmit+0x22e>
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	685b      	ldr	r3, [r3, #4]
 8003c24:	2b00      	cmp	r3, #0
 8003c26:	d002      	beq.n	8003c2e <HAL_SPI_Transmit+0x194>
 8003c28:	8b7b      	ldrh	r3, [r7, #26]
 8003c2a:	2b01      	cmp	r3, #1
 8003c2c:	d147      	bne.n	8003cbe <HAL_SPI_Transmit+0x224>
 8003c2e:	68fb      	ldr	r3, [r7, #12]
 8003c30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	330c      	adds	r3, #12
 8003c38:	7812      	ldrb	r2, [r2, #0]
 8003c3a:	701a      	strb	r2, [r3, #0]
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c40:	1c5a      	adds	r2, r3, #1
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003c4a:	b29b      	uxth	r3, r3
 8003c4c:	3b01      	subs	r3, #1
 8003c4e:	b29a      	uxth	r2, r3
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003c54:	e033      	b.n	8003cbe <HAL_SPI_Transmit+0x224>
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	689b      	ldr	r3, [r3, #8]
 8003c5c:	f003 0302 	and.w	r3, r3, #2
 8003c60:	2b02      	cmp	r3, #2
 8003c62:	d113      	bne.n	8003c8c <HAL_SPI_Transmit+0x1f2>
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	330c      	adds	r3, #12
 8003c6e:	7812      	ldrb	r2, [r2, #0]
 8003c70:	701a      	strb	r2, [r3, #0]
 8003c72:	68fb      	ldr	r3, [r7, #12]
 8003c74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c76:	1c5a      	adds	r2, r3, #1
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003c80:	b29b      	uxth	r3, r3
 8003c82:	3b01      	subs	r3, #1
 8003c84:	b29a      	uxth	r2, r3
 8003c86:	68fb      	ldr	r3, [r7, #12]
 8003c88:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003c8a:	e018      	b.n	8003cbe <HAL_SPI_Transmit+0x224>
 8003c8c:	f7fe fb70 	bl	8002370 <HAL_GetTick>
 8003c90:	4602      	mov	r2, r0
 8003c92:	69fb      	ldr	r3, [r7, #28]
 8003c94:	1ad3      	subs	r3, r2, r3
 8003c96:	683a      	ldr	r2, [r7, #0]
 8003c98:	429a      	cmp	r2, r3
 8003c9a:	d803      	bhi.n	8003ca4 <HAL_SPI_Transmit+0x20a>
 8003c9c:	683b      	ldr	r3, [r7, #0]
 8003c9e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ca2:	d102      	bne.n	8003caa <HAL_SPI_Transmit+0x210>
 8003ca4:	683b      	ldr	r3, [r7, #0]
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d109      	bne.n	8003cbe <HAL_SPI_Transmit+0x224>
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	2201      	movs	r2, #1
 8003cae:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003cba:	2303      	movs	r3, #3
 8003cbc:	e02d      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8003cc2:	b29b      	uxth	r3, r3
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d1c6      	bne.n	8003c56 <HAL_SPI_Transmit+0x1bc>
 8003cc8:	69fa      	ldr	r2, [r7, #28]
 8003cca:	6839      	ldr	r1, [r7, #0]
 8003ccc:	68f8      	ldr	r0, [r7, #12]
 8003cce:	f000 fbd9 	bl	8004484 <SPI_EndRxTxTransaction>
 8003cd2:	4603      	mov	r3, r0
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d002      	beq.n	8003cde <HAL_SPI_Transmit+0x244>
 8003cd8:	68fb      	ldr	r3, [r7, #12]
 8003cda:	2220      	movs	r2, #32
 8003cdc:	655a      	str	r2, [r3, #84]	@ 0x54
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	689b      	ldr	r3, [r3, #8]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d10a      	bne.n	8003cfc <HAL_SPI_Transmit+0x262>
 8003ce6:	2300      	movs	r3, #0
 8003ce8:	617b      	str	r3, [r7, #20]
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	68db      	ldr	r3, [r3, #12]
 8003cf0:	617b      	str	r3, [r7, #20]
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	689b      	ldr	r3, [r3, #8]
 8003cf8:	617b      	str	r3, [r7, #20]
 8003cfa:	697b      	ldr	r3, [r7, #20]
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	2201      	movs	r2, #1
 8003d00:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	2200      	movs	r2, #0
 8003d08:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	d001      	beq.n	8003d18 <HAL_SPI_Transmit+0x27e>
 8003d14:	2301      	movs	r3, #1
 8003d16:	e000      	b.n	8003d1a <HAL_SPI_Transmit+0x280>
 8003d18:	2300      	movs	r3, #0
 8003d1a:	4618      	mov	r0, r3
 8003d1c:	3720      	adds	r7, #32
 8003d1e:	46bd      	mov	sp, r7
 8003d20:	bd80      	pop	{r7, pc}

08003d22 <HAL_SPI_Receive>:
 8003d22:	b580      	push	{r7, lr}
 8003d24:	b088      	sub	sp, #32
 8003d26:	af02      	add	r7, sp, #8
 8003d28:	60f8      	str	r0, [r7, #12]
 8003d2a:	60b9      	str	r1, [r7, #8]
 8003d2c:	603b      	str	r3, [r7, #0]
 8003d2e:	4613      	mov	r3, r2
 8003d30:	80fb      	strh	r3, [r7, #6]
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003d38:	b2db      	uxtb	r3, r3
 8003d3a:	2b01      	cmp	r3, #1
 8003d3c:	d001      	beq.n	8003d42 <HAL_SPI_Receive+0x20>
 8003d3e:	2302      	movs	r3, #2
 8003d40:	e104      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	685b      	ldr	r3, [r3, #4]
 8003d46:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8003d4a:	d112      	bne.n	8003d72 <HAL_SPI_Receive+0x50>
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	689b      	ldr	r3, [r3, #8]
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d10e      	bne.n	8003d72 <HAL_SPI_Receive+0x50>
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	2204      	movs	r2, #4
 8003d58:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003d5c:	88fa      	ldrh	r2, [r7, #6]
 8003d5e:	683b      	ldr	r3, [r7, #0]
 8003d60:	9300      	str	r3, [sp, #0]
 8003d62:	4613      	mov	r3, r2
 8003d64:	68ba      	ldr	r2, [r7, #8]
 8003d66:	68b9      	ldr	r1, [r7, #8]
 8003d68:	68f8      	ldr	r0, [r7, #12]
 8003d6a:	f000 f8f3 	bl	8003f54 <HAL_SPI_TransmitReceive>
 8003d6e:	4603      	mov	r3, r0
 8003d70:	e0ec      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003d72:	f7fe fafd 	bl	8002370 <HAL_GetTick>
 8003d76:	6178      	str	r0, [r7, #20]
 8003d78:	68bb      	ldr	r3, [r7, #8]
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d002      	beq.n	8003d84 <HAL_SPI_Receive+0x62>
 8003d7e:	88fb      	ldrh	r3, [r7, #6]
 8003d80:	2b00      	cmp	r3, #0
 8003d82:	d101      	bne.n	8003d88 <HAL_SPI_Receive+0x66>
 8003d84:	2301      	movs	r3, #1
 8003d86:	e0e1      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8003d8e:	2b01      	cmp	r3, #1
 8003d90:	d101      	bne.n	8003d96 <HAL_SPI_Receive+0x74>
 8003d92:	2302      	movs	r3, #2
 8003d94:	e0da      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	2201      	movs	r2, #1
 8003d9a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003d9e:	68fb      	ldr	r3, [r7, #12]
 8003da0:	2204      	movs	r2, #4
 8003da2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003da6:	68fb      	ldr	r3, [r7, #12]
 8003da8:	2200      	movs	r2, #0
 8003daa:	655a      	str	r2, [r3, #84]	@ 0x54
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	68ba      	ldr	r2, [r7, #8]
 8003db0:	639a      	str	r2, [r3, #56]	@ 0x38
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	88fa      	ldrh	r2, [r7, #6]
 8003db6:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	88fa      	ldrh	r2, [r7, #6]
 8003dbc:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	2200      	movs	r2, #0
 8003dc2:	631a      	str	r2, [r3, #48]	@ 0x30
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	2200      	movs	r2, #0
 8003dc8:	869a      	strh	r2, [r3, #52]	@ 0x34
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2200      	movs	r2, #0
 8003dce:	86da      	strh	r2, [r3, #54]	@ 0x36
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	2200      	movs	r2, #0
 8003dd4:	641a      	str	r2, [r3, #64]	@ 0x40
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	2200      	movs	r2, #0
 8003dda:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	689b      	ldr	r3, [r3, #8]
 8003de0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003de4:	d10f      	bne.n	8003e06 <HAL_SPI_Receive+0xe4>
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	681a      	ldr	r2, [r3, #0]
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003df4:	601a      	str	r2, [r3, #0]
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	681a      	ldr	r2, [r3, #0]
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003e04:	601a      	str	r2, [r3, #0]
 8003e06:	68fb      	ldr	r3, [r7, #12]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003e10:	2b40      	cmp	r3, #64	@ 0x40
 8003e12:	d007      	beq.n	8003e24 <HAL_SPI_Receive+0x102>
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	681a      	ldr	r2, [r3, #0]
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003e22:	601a      	str	r2, [r3, #0]
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	68db      	ldr	r3, [r3, #12]
 8003e28:	2b00      	cmp	r3, #0
 8003e2a:	d170      	bne.n	8003f0e <HAL_SPI_Receive+0x1ec>
 8003e2c:	e035      	b.n	8003e9a <HAL_SPI_Receive+0x178>
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	689b      	ldr	r3, [r3, #8]
 8003e34:	f003 0301 	and.w	r3, r3, #1
 8003e38:	2b01      	cmp	r3, #1
 8003e3a:	d115      	bne.n	8003e68 <HAL_SPI_Receive+0x146>
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f103 020c 	add.w	r2, r3, #12
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e48:	7812      	ldrb	r2, [r2, #0]
 8003e4a:	b2d2      	uxtb	r2, r2
 8003e4c:	701a      	strb	r2, [r3, #0]
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e52:	1c5a      	adds	r2, r3, #1
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	639a      	str	r2, [r3, #56]	@ 0x38
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003e5c:	b29b      	uxth	r3, r3
 8003e5e:	3b01      	subs	r3, #1
 8003e60:	b29a      	uxth	r2, r3
 8003e62:	68fb      	ldr	r3, [r7, #12]
 8003e64:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003e66:	e018      	b.n	8003e9a <HAL_SPI_Receive+0x178>
 8003e68:	f7fe fa82 	bl	8002370 <HAL_GetTick>
 8003e6c:	4602      	mov	r2, r0
 8003e6e:	697b      	ldr	r3, [r7, #20]
 8003e70:	1ad3      	subs	r3, r2, r3
 8003e72:	683a      	ldr	r2, [r7, #0]
 8003e74:	429a      	cmp	r2, r3
 8003e76:	d803      	bhi.n	8003e80 <HAL_SPI_Receive+0x15e>
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003e7e:	d102      	bne.n	8003e86 <HAL_SPI_Receive+0x164>
 8003e80:	683b      	ldr	r3, [r7, #0]
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d109      	bne.n	8003e9a <HAL_SPI_Receive+0x178>
 8003e86:	68fb      	ldr	r3, [r7, #12]
 8003e88:	2201      	movs	r2, #1
 8003e8a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	2200      	movs	r2, #0
 8003e92:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003e96:	2303      	movs	r3, #3
 8003e98:	e058      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003e9e:	b29b      	uxth	r3, r3
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d1c4      	bne.n	8003e2e <HAL_SPI_Receive+0x10c>
 8003ea4:	e038      	b.n	8003f18 <HAL_SPI_Receive+0x1f6>
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	689b      	ldr	r3, [r3, #8]
 8003eac:	f003 0301 	and.w	r3, r3, #1
 8003eb0:	2b01      	cmp	r3, #1
 8003eb2:	d113      	bne.n	8003edc <HAL_SPI_Receive+0x1ba>
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	68da      	ldr	r2, [r3, #12]
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003ebe:	b292      	uxth	r2, r2
 8003ec0:	801a      	strh	r2, [r3, #0]
 8003ec2:	68fb      	ldr	r3, [r7, #12]
 8003ec4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003ec6:	1c9a      	adds	r2, r3, #2
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	639a      	str	r2, [r3, #56]	@ 0x38
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003ed0:	b29b      	uxth	r3, r3
 8003ed2:	3b01      	subs	r3, #1
 8003ed4:	b29a      	uxth	r2, r3
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003eda:	e018      	b.n	8003f0e <HAL_SPI_Receive+0x1ec>
 8003edc:	f7fe fa48 	bl	8002370 <HAL_GetTick>
 8003ee0:	4602      	mov	r2, r0
 8003ee2:	697b      	ldr	r3, [r7, #20]
 8003ee4:	1ad3      	subs	r3, r2, r3
 8003ee6:	683a      	ldr	r2, [r7, #0]
 8003ee8:	429a      	cmp	r2, r3
 8003eea:	d803      	bhi.n	8003ef4 <HAL_SPI_Receive+0x1d2>
 8003eec:	683b      	ldr	r3, [r7, #0]
 8003eee:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ef2:	d102      	bne.n	8003efa <HAL_SPI_Receive+0x1d8>
 8003ef4:	683b      	ldr	r3, [r7, #0]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d109      	bne.n	8003f0e <HAL_SPI_Receive+0x1ec>
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	2201      	movs	r2, #1
 8003efe:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003f02:	68fb      	ldr	r3, [r7, #12]
 8003f04:	2200      	movs	r2, #0
 8003f06:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003f0a:	2303      	movs	r3, #3
 8003f0c:	e01e      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003f12:	b29b      	uxth	r3, r3
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	d1c6      	bne.n	8003ea6 <HAL_SPI_Receive+0x184>
 8003f18:	697a      	ldr	r2, [r7, #20]
 8003f1a:	6839      	ldr	r1, [r7, #0]
 8003f1c:	68f8      	ldr	r0, [r7, #12]
 8003f1e:	f000 fa4b 	bl	80043b8 <SPI_EndRxTransaction>
 8003f22:	4603      	mov	r3, r0
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d002      	beq.n	8003f2e <HAL_SPI_Receive+0x20c>
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	2220      	movs	r2, #32
 8003f2c:	655a      	str	r2, [r3, #84]	@ 0x54
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	2201      	movs	r2, #1
 8003f32:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	2200      	movs	r2, #0
 8003f3a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d001      	beq.n	8003f4a <HAL_SPI_Receive+0x228>
 8003f46:	2301      	movs	r3, #1
 8003f48:	e000      	b.n	8003f4c <HAL_SPI_Receive+0x22a>
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	4618      	mov	r0, r3
 8003f4e:	3718      	adds	r7, #24
 8003f50:	46bd      	mov	sp, r7
 8003f52:	bd80      	pop	{r7, pc}

08003f54 <HAL_SPI_TransmitReceive>:
 8003f54:	b580      	push	{r7, lr}
 8003f56:	b08a      	sub	sp, #40	@ 0x28
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	60f8      	str	r0, [r7, #12]
 8003f5c:	60b9      	str	r1, [r7, #8]
 8003f5e:	607a      	str	r2, [r7, #4]
 8003f60:	807b      	strh	r3, [r7, #2]
 8003f62:	2301      	movs	r3, #1
 8003f64:	627b      	str	r3, [r7, #36]	@ 0x24
 8003f66:	f7fe fa03 	bl	8002370 <HAL_GetTick>
 8003f6a:	6238      	str	r0, [r7, #32]
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003f72:	77fb      	strb	r3, [r7, #31]
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	685b      	ldr	r3, [r3, #4]
 8003f78:	61bb      	str	r3, [r7, #24]
 8003f7a:	887b      	ldrh	r3, [r7, #2]
 8003f7c:	82fb      	strh	r3, [r7, #22]
 8003f7e:	7ffb      	ldrb	r3, [r7, #31]
 8003f80:	2b01      	cmp	r3, #1
 8003f82:	d00c      	beq.n	8003f9e <HAL_SPI_TransmitReceive+0x4a>
 8003f84:	69bb      	ldr	r3, [r7, #24]
 8003f86:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8003f8a:	d106      	bne.n	8003f9a <HAL_SPI_TransmitReceive+0x46>
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	689b      	ldr	r3, [r3, #8]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d102      	bne.n	8003f9a <HAL_SPI_TransmitReceive+0x46>
 8003f94:	7ffb      	ldrb	r3, [r7, #31]
 8003f96:	2b04      	cmp	r3, #4
 8003f98:	d001      	beq.n	8003f9e <HAL_SPI_TransmitReceive+0x4a>
 8003f9a:	2302      	movs	r3, #2
 8003f9c:	e17f      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	d005      	beq.n	8003fb0 <HAL_SPI_TransmitReceive+0x5c>
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d002      	beq.n	8003fb0 <HAL_SPI_TransmitReceive+0x5c>
 8003faa:	887b      	ldrh	r3, [r7, #2]
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d101      	bne.n	8003fb4 <HAL_SPI_TransmitReceive+0x60>
 8003fb0:	2301      	movs	r3, #1
 8003fb2:	e174      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8003fba:	2b01      	cmp	r3, #1
 8003fbc:	d101      	bne.n	8003fc2 <HAL_SPI_TransmitReceive+0x6e>
 8003fbe:	2302      	movs	r3, #2
 8003fc0:	e16d      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	2201      	movs	r2, #1
 8003fc6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003fd0:	b2db      	uxtb	r3, r3
 8003fd2:	2b04      	cmp	r3, #4
 8003fd4:	d003      	beq.n	8003fde <HAL_SPI_TransmitReceive+0x8a>
 8003fd6:	68fb      	ldr	r3, [r7, #12]
 8003fd8:	2205      	movs	r2, #5
 8003fda:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	2200      	movs	r2, #0
 8003fe2:	655a      	str	r2, [r3, #84]	@ 0x54
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	687a      	ldr	r2, [r7, #4]
 8003fe8:	639a      	str	r2, [r3, #56]	@ 0x38
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	887a      	ldrh	r2, [r7, #2]
 8003fee:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	887a      	ldrh	r2, [r7, #2]
 8003ff4:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	68ba      	ldr	r2, [r7, #8]
 8003ffa:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	887a      	ldrh	r2, [r7, #2]
 8004000:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004002:	68fb      	ldr	r3, [r7, #12]
 8004004:	887a      	ldrh	r2, [r7, #2]
 8004006:	869a      	strh	r2, [r3, #52]	@ 0x34
 8004008:	68fb      	ldr	r3, [r7, #12]
 800400a:	2200      	movs	r2, #0
 800400c:	641a      	str	r2, [r3, #64]	@ 0x40
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	2200      	movs	r2, #0
 8004012:	645a      	str	r2, [r3, #68]	@ 0x44
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800401e:	2b40      	cmp	r3, #64	@ 0x40
 8004020:	d007      	beq.n	8004032 <HAL_SPI_TransmitReceive+0xde>
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	681a      	ldr	r2, [r3, #0]
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004030:	601a      	str	r2, [r3, #0]
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	68db      	ldr	r3, [r3, #12]
 8004036:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800403a:	d17e      	bne.n	800413a <HAL_SPI_TransmitReceive+0x1e6>
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	685b      	ldr	r3, [r3, #4]
 8004040:	2b00      	cmp	r3, #0
 8004042:	d002      	beq.n	800404a <HAL_SPI_TransmitReceive+0xf6>
 8004044:	8afb      	ldrh	r3, [r7, #22]
 8004046:	2b01      	cmp	r3, #1
 8004048:	d16c      	bne.n	8004124 <HAL_SPI_TransmitReceive+0x1d0>
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800404e:	881a      	ldrh	r2, [r3, #0]
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	60da      	str	r2, [r3, #12]
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800405a:	1c9a      	adds	r2, r3, #2
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004064:	b29b      	uxth	r3, r3
 8004066:	3b01      	subs	r3, #1
 8004068:	b29a      	uxth	r2, r3
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800406e:	e059      	b.n	8004124 <HAL_SPI_TransmitReceive+0x1d0>
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	689b      	ldr	r3, [r3, #8]
 8004076:	f003 0302 	and.w	r3, r3, #2
 800407a:	2b02      	cmp	r3, #2
 800407c:	d11b      	bne.n	80040b6 <HAL_SPI_TransmitReceive+0x162>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004082:	b29b      	uxth	r3, r3
 8004084:	2b00      	cmp	r3, #0
 8004086:	d016      	beq.n	80040b6 <HAL_SPI_TransmitReceive+0x162>
 8004088:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800408a:	2b01      	cmp	r3, #1
 800408c:	d113      	bne.n	80040b6 <HAL_SPI_TransmitReceive+0x162>
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004092:	881a      	ldrh	r2, [r3, #0]
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	60da      	str	r2, [r3, #12]
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800409e:	1c9a      	adds	r2, r3, #2
 80040a0:	68fb      	ldr	r3, [r7, #12]
 80040a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80040a8:	b29b      	uxth	r3, r3
 80040aa:	3b01      	subs	r3, #1
 80040ac:	b29a      	uxth	r2, r3
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	86da      	strh	r2, [r3, #54]	@ 0x36
 80040b2:	2300      	movs	r3, #0
 80040b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	689b      	ldr	r3, [r3, #8]
 80040bc:	f003 0301 	and.w	r3, r3, #1
 80040c0:	2b01      	cmp	r3, #1
 80040c2:	d119      	bne.n	80040f8 <HAL_SPI_TransmitReceive+0x1a4>
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80040c8:	b29b      	uxth	r3, r3
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d014      	beq.n	80040f8 <HAL_SPI_TransmitReceive+0x1a4>
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	68da      	ldr	r2, [r3, #12]
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80040d8:	b292      	uxth	r2, r2
 80040da:	801a      	strh	r2, [r3, #0]
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80040e0:	1c9a      	adds	r2, r3, #2
 80040e2:	68fb      	ldr	r3, [r7, #12]
 80040e4:	639a      	str	r2, [r3, #56]	@ 0x38
 80040e6:	68fb      	ldr	r3, [r7, #12]
 80040e8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80040ea:	b29b      	uxth	r3, r3
 80040ec:	3b01      	subs	r3, #1
 80040ee:	b29a      	uxth	r2, r3
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80040f4:	2301      	movs	r3, #1
 80040f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80040f8:	f7fe f93a 	bl	8002370 <HAL_GetTick>
 80040fc:	4602      	mov	r2, r0
 80040fe:	6a3b      	ldr	r3, [r7, #32]
 8004100:	1ad3      	subs	r3, r2, r3
 8004102:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004104:	429a      	cmp	r2, r3
 8004106:	d80d      	bhi.n	8004124 <HAL_SPI_TransmitReceive+0x1d0>
 8004108:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800410a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800410e:	d009      	beq.n	8004124 <HAL_SPI_TransmitReceive+0x1d0>
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	2201      	movs	r2, #1
 8004114:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004118:	68fb      	ldr	r3, [r7, #12]
 800411a:	2200      	movs	r2, #0
 800411c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004120:	2303      	movs	r3, #3
 8004122:	e0bc      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 8004124:	68fb      	ldr	r3, [r7, #12]
 8004126:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004128:	b29b      	uxth	r3, r3
 800412a:	2b00      	cmp	r3, #0
 800412c:	d1a0      	bne.n	8004070 <HAL_SPI_TransmitReceive+0x11c>
 800412e:	68fb      	ldr	r3, [r7, #12]
 8004130:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004132:	b29b      	uxth	r3, r3
 8004134:	2b00      	cmp	r3, #0
 8004136:	d19b      	bne.n	8004070 <HAL_SPI_TransmitReceive+0x11c>
 8004138:	e082      	b.n	8004240 <HAL_SPI_TransmitReceive+0x2ec>
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	2b00      	cmp	r3, #0
 8004140:	d002      	beq.n	8004148 <HAL_SPI_TransmitReceive+0x1f4>
 8004142:	8afb      	ldrh	r3, [r7, #22]
 8004144:	2b01      	cmp	r3, #1
 8004146:	d171      	bne.n	800422c <HAL_SPI_TransmitReceive+0x2d8>
 8004148:	68fb      	ldr	r3, [r7, #12]
 800414a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	330c      	adds	r3, #12
 8004152:	7812      	ldrb	r2, [r2, #0]
 8004154:	701a      	strb	r2, [r3, #0]
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800415a:	1c5a      	adds	r2, r3, #1
 800415c:	68fb      	ldr	r3, [r7, #12]
 800415e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004164:	b29b      	uxth	r3, r3
 8004166:	3b01      	subs	r3, #1
 8004168:	b29a      	uxth	r2, r3
 800416a:	68fb      	ldr	r3, [r7, #12]
 800416c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800416e:	e05d      	b.n	800422c <HAL_SPI_TransmitReceive+0x2d8>
 8004170:	68fb      	ldr	r3, [r7, #12]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	689b      	ldr	r3, [r3, #8]
 8004176:	f003 0302 	and.w	r3, r3, #2
 800417a:	2b02      	cmp	r3, #2
 800417c:	d11c      	bne.n	80041b8 <HAL_SPI_TransmitReceive+0x264>
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004182:	b29b      	uxth	r3, r3
 8004184:	2b00      	cmp	r3, #0
 8004186:	d017      	beq.n	80041b8 <HAL_SPI_TransmitReceive+0x264>
 8004188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800418a:	2b01      	cmp	r3, #1
 800418c:	d114      	bne.n	80041b8 <HAL_SPI_TransmitReceive+0x264>
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	330c      	adds	r3, #12
 8004198:	7812      	ldrb	r2, [r2, #0]
 800419a:	701a      	strb	r2, [r3, #0]
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80041a0:	1c5a      	adds	r2, r3, #1
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	631a      	str	r2, [r3, #48]	@ 0x30
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80041aa:	b29b      	uxth	r3, r3
 80041ac:	3b01      	subs	r3, #1
 80041ae:	b29a      	uxth	r2, r3
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80041b4:	2300      	movs	r3, #0
 80041b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	689b      	ldr	r3, [r3, #8]
 80041be:	f003 0301 	and.w	r3, r3, #1
 80041c2:	2b01      	cmp	r3, #1
 80041c4:	d119      	bne.n	80041fa <HAL_SPI_TransmitReceive+0x2a6>
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80041ca:	b29b      	uxth	r3, r3
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d014      	beq.n	80041fa <HAL_SPI_TransmitReceive+0x2a6>
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	68da      	ldr	r2, [r3, #12]
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80041da:	b2d2      	uxtb	r2, r2
 80041dc:	701a      	strb	r2, [r3, #0]
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80041e2:	1c5a      	adds	r2, r3, #1
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80041ec:	b29b      	uxth	r3, r3
 80041ee:	3b01      	subs	r3, #1
 80041f0:	b29a      	uxth	r2, r3
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80041f6:	2301      	movs	r3, #1
 80041f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80041fa:	f7fe f8b9 	bl	8002370 <HAL_GetTick>
 80041fe:	4602      	mov	r2, r0
 8004200:	6a3b      	ldr	r3, [r7, #32]
 8004202:	1ad3      	subs	r3, r2, r3
 8004204:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004206:	429a      	cmp	r2, r3
 8004208:	d803      	bhi.n	8004212 <HAL_SPI_TransmitReceive+0x2be>
 800420a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800420c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004210:	d102      	bne.n	8004218 <HAL_SPI_TransmitReceive+0x2c4>
 8004212:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004214:	2b00      	cmp	r3, #0
 8004216:	d109      	bne.n	800422c <HAL_SPI_TransmitReceive+0x2d8>
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	2201      	movs	r2, #1
 800421c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	2200      	movs	r2, #0
 8004224:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004228:	2303      	movs	r3, #3
 800422a:	e038      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004230:	b29b      	uxth	r3, r3
 8004232:	2b00      	cmp	r3, #0
 8004234:	d19c      	bne.n	8004170 <HAL_SPI_TransmitReceive+0x21c>
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800423a:	b29b      	uxth	r3, r3
 800423c:	2b00      	cmp	r3, #0
 800423e:	d197      	bne.n	8004170 <HAL_SPI_TransmitReceive+0x21c>
 8004240:	6a3a      	ldr	r2, [r7, #32]
 8004242:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004244:	68f8      	ldr	r0, [r7, #12]
 8004246:	f000 f91d 	bl	8004484 <SPI_EndRxTxTransaction>
 800424a:	4603      	mov	r3, r0
 800424c:	2b00      	cmp	r3, #0
 800424e:	d008      	beq.n	8004262 <HAL_SPI_TransmitReceive+0x30e>
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	2220      	movs	r2, #32
 8004254:	655a      	str	r2, [r3, #84]	@ 0x54
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	2200      	movs	r2, #0
 800425a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800425e:	2301      	movs	r3, #1
 8004260:	e01d      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 8004262:	68fb      	ldr	r3, [r7, #12]
 8004264:	689b      	ldr	r3, [r3, #8]
 8004266:	2b00      	cmp	r3, #0
 8004268:	d10a      	bne.n	8004280 <HAL_SPI_TransmitReceive+0x32c>
 800426a:	2300      	movs	r3, #0
 800426c:	613b      	str	r3, [r7, #16]
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	68db      	ldr	r3, [r3, #12]
 8004274:	613b      	str	r3, [r7, #16]
 8004276:	68fb      	ldr	r3, [r7, #12]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	689b      	ldr	r3, [r3, #8]
 800427c:	613b      	str	r3, [r7, #16]
 800427e:	693b      	ldr	r3, [r7, #16]
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	2201      	movs	r2, #1
 8004284:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	2200      	movs	r2, #0
 800428c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004294:	2b00      	cmp	r3, #0
 8004296:	d001      	beq.n	800429c <HAL_SPI_TransmitReceive+0x348>
 8004298:	2301      	movs	r3, #1
 800429a:	e000      	b.n	800429e <HAL_SPI_TransmitReceive+0x34a>
 800429c:	2300      	movs	r3, #0
 800429e:	4618      	mov	r0, r3
 80042a0:	3728      	adds	r7, #40	@ 0x28
 80042a2:	46bd      	mov	sp, r7
 80042a4:	bd80      	pop	{r7, pc}
	...

080042a8 <SPI_WaitFlagStateUntilTimeout>:
 80042a8:	b580      	push	{r7, lr}
 80042aa:	b088      	sub	sp, #32
 80042ac:	af00      	add	r7, sp, #0
 80042ae:	60f8      	str	r0, [r7, #12]
 80042b0:	60b9      	str	r1, [r7, #8]
 80042b2:	603b      	str	r3, [r7, #0]
 80042b4:	4613      	mov	r3, r2
 80042b6:	71fb      	strb	r3, [r7, #7]
 80042b8:	f7fe f85a 	bl	8002370 <HAL_GetTick>
 80042bc:	4602      	mov	r2, r0
 80042be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80042c0:	1a9b      	subs	r3, r3, r2
 80042c2:	683a      	ldr	r2, [r7, #0]
 80042c4:	4413      	add	r3, r2
 80042c6:	61fb      	str	r3, [r7, #28]
 80042c8:	f7fe f852 	bl	8002370 <HAL_GetTick>
 80042cc:	61b8      	str	r0, [r7, #24]
 80042ce:	4b39      	ldr	r3, [pc, #228]	@ (80043b4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	015b      	lsls	r3, r3, #5
 80042d4:	0d1b      	lsrs	r3, r3, #20
 80042d6:	69fa      	ldr	r2, [r7, #28]
 80042d8:	fb02 f303 	mul.w	r3, r2, r3
 80042dc:	617b      	str	r3, [r7, #20]
 80042de:	e054      	b.n	800438a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80042e0:	683b      	ldr	r3, [r7, #0]
 80042e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80042e6:	d050      	beq.n	800438a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80042e8:	f7fe f842 	bl	8002370 <HAL_GetTick>
 80042ec:	4602      	mov	r2, r0
 80042ee:	69bb      	ldr	r3, [r7, #24]
 80042f0:	1ad3      	subs	r3, r2, r3
 80042f2:	69fa      	ldr	r2, [r7, #28]
 80042f4:	429a      	cmp	r2, r3
 80042f6:	d902      	bls.n	80042fe <SPI_WaitFlagStateUntilTimeout+0x56>
 80042f8:	69fb      	ldr	r3, [r7, #28]
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d13d      	bne.n	800437a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80042fe:	68fb      	ldr	r3, [r7, #12]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	685a      	ldr	r2, [r3, #4]
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800430c:	605a      	str	r2, [r3, #4]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	685b      	ldr	r3, [r3, #4]
 8004312:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004316:	d111      	bne.n	800433c <SPI_WaitFlagStateUntilTimeout+0x94>
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	689b      	ldr	r3, [r3, #8]
 800431c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004320:	d004      	beq.n	800432c <SPI_WaitFlagStateUntilTimeout+0x84>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	689b      	ldr	r3, [r3, #8]
 8004326:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800432a:	d107      	bne.n	800433c <SPI_WaitFlagStateUntilTimeout+0x94>
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	681a      	ldr	r2, [r3, #0]
 8004332:	68fb      	ldr	r3, [r7, #12]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800433a:	601a      	str	r2, [r3, #0]
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004340:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004344:	d10f      	bne.n	8004366 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004346:	68fb      	ldr	r3, [r7, #12]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	681a      	ldr	r2, [r3, #0]
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004354:	601a      	str	r2, [r3, #0]
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	681a      	ldr	r2, [r3, #0]
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004364:	601a      	str	r2, [r3, #0]
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	2201      	movs	r2, #1
 800436a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	2200      	movs	r2, #0
 8004372:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004376:	2303      	movs	r3, #3
 8004378:	e017      	b.n	80043aa <SPI_WaitFlagStateUntilTimeout+0x102>
 800437a:	697b      	ldr	r3, [r7, #20]
 800437c:	2b00      	cmp	r3, #0
 800437e:	d101      	bne.n	8004384 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8004380:	2300      	movs	r3, #0
 8004382:	61fb      	str	r3, [r7, #28]
 8004384:	697b      	ldr	r3, [r7, #20]
 8004386:	3b01      	subs	r3, #1
 8004388:	617b      	str	r3, [r7, #20]
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	689a      	ldr	r2, [r3, #8]
 8004390:	68bb      	ldr	r3, [r7, #8]
 8004392:	4013      	ands	r3, r2
 8004394:	68ba      	ldr	r2, [r7, #8]
 8004396:	429a      	cmp	r2, r3
 8004398:	bf0c      	ite	eq
 800439a:	2301      	moveq	r3, #1
 800439c:	2300      	movne	r3, #0
 800439e:	b2db      	uxtb	r3, r3
 80043a0:	461a      	mov	r2, r3
 80043a2:	79fb      	ldrb	r3, [r7, #7]
 80043a4:	429a      	cmp	r2, r3
 80043a6:	d19b      	bne.n	80042e0 <SPI_WaitFlagStateUntilTimeout+0x38>
 80043a8:	2300      	movs	r3, #0
 80043aa:	4618      	mov	r0, r3
 80043ac:	3720      	adds	r7, #32
 80043ae:	46bd      	mov	sp, r7
 80043b0:	bd80      	pop	{r7, pc}
 80043b2:	bf00      	nop
 80043b4:	20000000 	.word	0x20000000

080043b8 <SPI_EndRxTransaction>:
 80043b8:	b580      	push	{r7, lr}
 80043ba:	b086      	sub	sp, #24
 80043bc:	af02      	add	r7, sp, #8
 80043be:	60f8      	str	r0, [r7, #12]
 80043c0:	60b9      	str	r1, [r7, #8]
 80043c2:	607a      	str	r2, [r7, #4]
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	685b      	ldr	r3, [r3, #4]
 80043c8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80043cc:	d111      	bne.n	80043f2 <SPI_EndRxTransaction+0x3a>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	689b      	ldr	r3, [r3, #8]
 80043d2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80043d6:	d004      	beq.n	80043e2 <SPI_EndRxTransaction+0x2a>
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	689b      	ldr	r3, [r3, #8]
 80043dc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80043e0:	d107      	bne.n	80043f2 <SPI_EndRxTransaction+0x3a>
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	681a      	ldr	r2, [r3, #0]
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80043f0:	601a      	str	r2, [r3, #0]
 80043f2:	68fb      	ldr	r3, [r7, #12]
 80043f4:	685b      	ldr	r3, [r3, #4]
 80043f6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80043fa:	d12a      	bne.n	8004452 <SPI_EndRxTransaction+0x9a>
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	689b      	ldr	r3, [r3, #8]
 8004400:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004404:	d012      	beq.n	800442c <SPI_EndRxTransaction+0x74>
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	9300      	str	r3, [sp, #0]
 800440a:	68bb      	ldr	r3, [r7, #8]
 800440c:	2200      	movs	r2, #0
 800440e:	2180      	movs	r1, #128	@ 0x80
 8004410:	68f8      	ldr	r0, [r7, #12]
 8004412:	f7ff ff49 	bl	80042a8 <SPI_WaitFlagStateUntilTimeout>
 8004416:	4603      	mov	r3, r0
 8004418:	2b00      	cmp	r3, #0
 800441a:	d02d      	beq.n	8004478 <SPI_EndRxTransaction+0xc0>
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004420:	f043 0220 	orr.w	r2, r3, #32
 8004424:	68fb      	ldr	r3, [r7, #12]
 8004426:	655a      	str	r2, [r3, #84]	@ 0x54
 8004428:	2303      	movs	r3, #3
 800442a:	e026      	b.n	800447a <SPI_EndRxTransaction+0xc2>
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	9300      	str	r3, [sp, #0]
 8004430:	68bb      	ldr	r3, [r7, #8]
 8004432:	2200      	movs	r2, #0
 8004434:	2101      	movs	r1, #1
 8004436:	68f8      	ldr	r0, [r7, #12]
 8004438:	f7ff ff36 	bl	80042a8 <SPI_WaitFlagStateUntilTimeout>
 800443c:	4603      	mov	r3, r0
 800443e:	2b00      	cmp	r3, #0
 8004440:	d01a      	beq.n	8004478 <SPI_EndRxTransaction+0xc0>
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004446:	f043 0220 	orr.w	r2, r3, #32
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	655a      	str	r2, [r3, #84]	@ 0x54
 800444e:	2303      	movs	r3, #3
 8004450:	e013      	b.n	800447a <SPI_EndRxTransaction+0xc2>
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	9300      	str	r3, [sp, #0]
 8004456:	68bb      	ldr	r3, [r7, #8]
 8004458:	2200      	movs	r2, #0
 800445a:	2101      	movs	r1, #1
 800445c:	68f8      	ldr	r0, [r7, #12]
 800445e:	f7ff ff23 	bl	80042a8 <SPI_WaitFlagStateUntilTimeout>
 8004462:	4603      	mov	r3, r0
 8004464:	2b00      	cmp	r3, #0
 8004466:	d007      	beq.n	8004478 <SPI_EndRxTransaction+0xc0>
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800446c:	f043 0220 	orr.w	r2, r3, #32
 8004470:	68fb      	ldr	r3, [r7, #12]
 8004472:	655a      	str	r2, [r3, #84]	@ 0x54
 8004474:	2303      	movs	r3, #3
 8004476:	e000      	b.n	800447a <SPI_EndRxTransaction+0xc2>
 8004478:	2300      	movs	r3, #0
 800447a:	4618      	mov	r0, r3
 800447c:	3710      	adds	r7, #16
 800447e:	46bd      	mov	sp, r7
 8004480:	bd80      	pop	{r7, pc}
	...

08004484 <SPI_EndRxTxTransaction>:
 8004484:	b580      	push	{r7, lr}
 8004486:	b088      	sub	sp, #32
 8004488:	af02      	add	r7, sp, #8
 800448a:	60f8      	str	r0, [r7, #12]
 800448c:	60b9      	str	r1, [r7, #8]
 800448e:	607a      	str	r2, [r7, #4]
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	9300      	str	r3, [sp, #0]
 8004494:	68bb      	ldr	r3, [r7, #8]
 8004496:	2201      	movs	r2, #1
 8004498:	2102      	movs	r1, #2
 800449a:	68f8      	ldr	r0, [r7, #12]
 800449c:	f7ff ff04 	bl	80042a8 <SPI_WaitFlagStateUntilTimeout>
 80044a0:	4603      	mov	r3, r0
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	d007      	beq.n	80044b6 <SPI_EndRxTxTransaction+0x32>
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80044aa:	f043 0220 	orr.w	r2, r3, #32
 80044ae:	68fb      	ldr	r3, [r7, #12]
 80044b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80044b2:	2303      	movs	r3, #3
 80044b4:	e032      	b.n	800451c <SPI_EndRxTxTransaction+0x98>
 80044b6:	4b1b      	ldr	r3, [pc, #108]	@ (8004524 <SPI_EndRxTxTransaction+0xa0>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	4a1b      	ldr	r2, [pc, #108]	@ (8004528 <SPI_EndRxTxTransaction+0xa4>)
 80044bc:	fba2 2303 	umull	r2, r3, r2, r3
 80044c0:	0d5b      	lsrs	r3, r3, #21
 80044c2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80044c6:	fb02 f303 	mul.w	r3, r2, r3
 80044ca:	617b      	str	r3, [r7, #20]
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	685b      	ldr	r3, [r3, #4]
 80044d0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80044d4:	d112      	bne.n	80044fc <SPI_EndRxTxTransaction+0x78>
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	9300      	str	r3, [sp, #0]
 80044da:	68bb      	ldr	r3, [r7, #8]
 80044dc:	2200      	movs	r2, #0
 80044de:	2180      	movs	r1, #128	@ 0x80
 80044e0:	68f8      	ldr	r0, [r7, #12]
 80044e2:	f7ff fee1 	bl	80042a8 <SPI_WaitFlagStateUntilTimeout>
 80044e6:	4603      	mov	r3, r0
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	d016      	beq.n	800451a <SPI_EndRxTxTransaction+0x96>
 80044ec:	68fb      	ldr	r3, [r7, #12]
 80044ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80044f0:	f043 0220 	orr.w	r2, r3, #32
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	655a      	str	r2, [r3, #84]	@ 0x54
 80044f8:	2303      	movs	r3, #3
 80044fa:	e00f      	b.n	800451c <SPI_EndRxTxTransaction+0x98>
 80044fc:	697b      	ldr	r3, [r7, #20]
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d00a      	beq.n	8004518 <SPI_EndRxTxTransaction+0x94>
 8004502:	697b      	ldr	r3, [r7, #20]
 8004504:	3b01      	subs	r3, #1
 8004506:	617b      	str	r3, [r7, #20]
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	689b      	ldr	r3, [r3, #8]
 800450e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004512:	2b80      	cmp	r3, #128	@ 0x80
 8004514:	d0f2      	beq.n	80044fc <SPI_EndRxTxTransaction+0x78>
 8004516:	e000      	b.n	800451a <SPI_EndRxTxTransaction+0x96>
 8004518:	bf00      	nop
 800451a:	2300      	movs	r3, #0
 800451c:	4618      	mov	r0, r3
 800451e:	3718      	adds	r7, #24
 8004520:	46bd      	mov	sp, r7
 8004522:	bd80      	pop	{r7, pc}
 8004524:	20000000 	.word	0x20000000
 8004528:	165e9f81 	.word	0x165e9f81

0800452c <HAL_TIM_Base_Init>:
 800452c:	b580      	push	{r7, lr}
 800452e:	b082      	sub	sp, #8
 8004530:	af00      	add	r7, sp, #0
 8004532:	6078      	str	r0, [r7, #4]
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	2b00      	cmp	r3, #0
 8004538:	d101      	bne.n	800453e <HAL_TIM_Base_Init+0x12>
 800453a:	2301      	movs	r3, #1
 800453c:	e041      	b.n	80045c2 <HAL_TIM_Base_Init+0x96>
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004544:	b2db      	uxtb	r3, r3
 8004546:	2b00      	cmp	r3, #0
 8004548:	d106      	bne.n	8004558 <HAL_TIM_Base_Init+0x2c>
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	2200      	movs	r2, #0
 800454e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004552:	6878      	ldr	r0, [r7, #4]
 8004554:	f7fd fc7c 	bl	8001e50 <HAL_TIM_Base_MspInit>
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	2202      	movs	r2, #2
 800455c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681a      	ldr	r2, [r3, #0]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	3304      	adds	r3, #4
 8004568:	4619      	mov	r1, r3
 800456a:	4610      	mov	r0, r2
 800456c:	f000 fac0 	bl	8004af0 <TIM_Base_SetConfig>
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	2201      	movs	r2, #1
 8004574:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	2201      	movs	r2, #1
 800457c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	2201      	movs	r2, #1
 8004584:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	2201      	movs	r2, #1
 800458c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	2201      	movs	r2, #1
 8004594:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	2201      	movs	r2, #1
 800459c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	2201      	movs	r2, #1
 80045a4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	2201      	movs	r2, #1
 80045ac:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	2201      	movs	r2, #1
 80045b4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2201      	movs	r2, #1
 80045bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045c0:	2300      	movs	r3, #0
 80045c2:	4618      	mov	r0, r3
 80045c4:	3708      	adds	r7, #8
 80045c6:	46bd      	mov	sp, r7
 80045c8:	bd80      	pop	{r7, pc}

080045ca <HAL_TIM_PWM_Init>:
 80045ca:	b580      	push	{r7, lr}
 80045cc:	b082      	sub	sp, #8
 80045ce:	af00      	add	r7, sp, #0
 80045d0:	6078      	str	r0, [r7, #4]
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d101      	bne.n	80045dc <HAL_TIM_PWM_Init+0x12>
 80045d8:	2301      	movs	r3, #1
 80045da:	e041      	b.n	8004660 <HAL_TIM_PWM_Init+0x96>
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80045e2:	b2db      	uxtb	r3, r3
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d106      	bne.n	80045f6 <HAL_TIM_PWM_Init+0x2c>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2200      	movs	r2, #0
 80045ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045f0:	6878      	ldr	r0, [r7, #4]
 80045f2:	f000 f839 	bl	8004668 <HAL_TIM_PWM_MspInit>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	2202      	movs	r2, #2
 80045fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	681a      	ldr	r2, [r3, #0]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	3304      	adds	r3, #4
 8004606:	4619      	mov	r1, r3
 8004608:	4610      	mov	r0, r2
 800460a:	f000 fa71 	bl	8004af0 <TIM_Base_SetConfig>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	2201      	movs	r2, #1
 8004612:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	2201      	movs	r2, #1
 800461a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	2201      	movs	r2, #1
 8004622:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	2201      	movs	r2, #1
 800462a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	2201      	movs	r2, #1
 8004632:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	2201      	movs	r2, #1
 800463a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	2201      	movs	r2, #1
 8004642:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	2201      	movs	r2, #1
 800464a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	2201      	movs	r2, #1
 8004652:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	2201      	movs	r2, #1
 800465a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800465e:	2300      	movs	r3, #0
 8004660:	4618      	mov	r0, r3
 8004662:	3708      	adds	r7, #8
 8004664:	46bd      	mov	sp, r7
 8004666:	bd80      	pop	{r7, pc}

08004668 <HAL_TIM_PWM_MspInit>:
 8004668:	b480      	push	{r7}
 800466a:	b083      	sub	sp, #12
 800466c:	af00      	add	r7, sp, #0
 800466e:	6078      	str	r0, [r7, #4]
 8004670:	bf00      	nop
 8004672:	370c      	adds	r7, #12
 8004674:	46bd      	mov	sp, r7
 8004676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800467a:	4770      	bx	lr

0800467c <HAL_TIM_PWM_Start>:
 800467c:	b580      	push	{r7, lr}
 800467e:	b084      	sub	sp, #16
 8004680:	af00      	add	r7, sp, #0
 8004682:	6078      	str	r0, [r7, #4]
 8004684:	6039      	str	r1, [r7, #0]
 8004686:	683b      	ldr	r3, [r7, #0]
 8004688:	2b00      	cmp	r3, #0
 800468a:	d109      	bne.n	80046a0 <HAL_TIM_PWM_Start+0x24>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004692:	b2db      	uxtb	r3, r3
 8004694:	2b01      	cmp	r3, #1
 8004696:	bf14      	ite	ne
 8004698:	2301      	movne	r3, #1
 800469a:	2300      	moveq	r3, #0
 800469c:	b2db      	uxtb	r3, r3
 800469e:	e022      	b.n	80046e6 <HAL_TIM_PWM_Start+0x6a>
 80046a0:	683b      	ldr	r3, [r7, #0]
 80046a2:	2b04      	cmp	r3, #4
 80046a4:	d109      	bne.n	80046ba <HAL_TIM_PWM_Start+0x3e>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80046ac:	b2db      	uxtb	r3, r3
 80046ae:	2b01      	cmp	r3, #1
 80046b0:	bf14      	ite	ne
 80046b2:	2301      	movne	r3, #1
 80046b4:	2300      	moveq	r3, #0
 80046b6:	b2db      	uxtb	r3, r3
 80046b8:	e015      	b.n	80046e6 <HAL_TIM_PWM_Start+0x6a>
 80046ba:	683b      	ldr	r3, [r7, #0]
 80046bc:	2b08      	cmp	r3, #8
 80046be:	d109      	bne.n	80046d4 <HAL_TIM_PWM_Start+0x58>
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80046c6:	b2db      	uxtb	r3, r3
 80046c8:	2b01      	cmp	r3, #1
 80046ca:	bf14      	ite	ne
 80046cc:	2301      	movne	r3, #1
 80046ce:	2300      	moveq	r3, #0
 80046d0:	b2db      	uxtb	r3, r3
 80046d2:	e008      	b.n	80046e6 <HAL_TIM_PWM_Start+0x6a>
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80046da:	b2db      	uxtb	r3, r3
 80046dc:	2b01      	cmp	r3, #1
 80046de:	bf14      	ite	ne
 80046e0:	2301      	movne	r3, #1
 80046e2:	2300      	moveq	r3, #0
 80046e4:	b2db      	uxtb	r3, r3
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	d001      	beq.n	80046ee <HAL_TIM_PWM_Start+0x72>
 80046ea:	2301      	movs	r3, #1
 80046ec:	e068      	b.n	80047c0 <HAL_TIM_PWM_Start+0x144>
 80046ee:	683b      	ldr	r3, [r7, #0]
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d104      	bne.n	80046fe <HAL_TIM_PWM_Start+0x82>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	2202      	movs	r2, #2
 80046f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046fc:	e013      	b.n	8004726 <HAL_TIM_PWM_Start+0xaa>
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	2b04      	cmp	r3, #4
 8004702:	d104      	bne.n	800470e <HAL_TIM_PWM_Start+0x92>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	2202      	movs	r2, #2
 8004708:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800470c:	e00b      	b.n	8004726 <HAL_TIM_PWM_Start+0xaa>
 800470e:	683b      	ldr	r3, [r7, #0]
 8004710:	2b08      	cmp	r3, #8
 8004712:	d104      	bne.n	800471e <HAL_TIM_PWM_Start+0xa2>
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	2202      	movs	r2, #2
 8004718:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800471c:	e003      	b.n	8004726 <HAL_TIM_PWM_Start+0xaa>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	2202      	movs	r2, #2
 8004722:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	2201      	movs	r2, #1
 800472c:	6839      	ldr	r1, [r7, #0]
 800472e:	4618      	mov	r0, r3
 8004730:	f000 fc90 	bl	8005054 <TIM_CCxChannelCmd>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	4a23      	ldr	r2, [pc, #140]	@ (80047c8 <HAL_TIM_PWM_Start+0x14c>)
 800473a:	4293      	cmp	r3, r2
 800473c:	d107      	bne.n	800474e <HAL_TIM_PWM_Start+0xd2>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800474c:	645a      	str	r2, [r3, #68]	@ 0x44
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	4a1d      	ldr	r2, [pc, #116]	@ (80047c8 <HAL_TIM_PWM_Start+0x14c>)
 8004754:	4293      	cmp	r3, r2
 8004756:	d018      	beq.n	800478a <HAL_TIM_PWM_Start+0x10e>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004760:	d013      	beq.n	800478a <HAL_TIM_PWM_Start+0x10e>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	4a19      	ldr	r2, [pc, #100]	@ (80047cc <HAL_TIM_PWM_Start+0x150>)
 8004768:	4293      	cmp	r3, r2
 800476a:	d00e      	beq.n	800478a <HAL_TIM_PWM_Start+0x10e>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	4a17      	ldr	r2, [pc, #92]	@ (80047d0 <HAL_TIM_PWM_Start+0x154>)
 8004772:	4293      	cmp	r3, r2
 8004774:	d009      	beq.n	800478a <HAL_TIM_PWM_Start+0x10e>
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	4a16      	ldr	r2, [pc, #88]	@ (80047d4 <HAL_TIM_PWM_Start+0x158>)
 800477c:	4293      	cmp	r3, r2
 800477e:	d004      	beq.n	800478a <HAL_TIM_PWM_Start+0x10e>
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	4a14      	ldr	r2, [pc, #80]	@ (80047d8 <HAL_TIM_PWM_Start+0x15c>)
 8004786:	4293      	cmp	r3, r2
 8004788:	d111      	bne.n	80047ae <HAL_TIM_PWM_Start+0x132>
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	689b      	ldr	r3, [r3, #8]
 8004790:	f003 0307 	and.w	r3, r3, #7
 8004794:	60fb      	str	r3, [r7, #12]
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	2b06      	cmp	r3, #6
 800479a:	d010      	beq.n	80047be <HAL_TIM_PWM_Start+0x142>
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	681a      	ldr	r2, [r3, #0]
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	f042 0201 	orr.w	r2, r2, #1
 80047aa:	601a      	str	r2, [r3, #0]
 80047ac:	e007      	b.n	80047be <HAL_TIM_PWM_Start+0x142>
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	681a      	ldr	r2, [r3, #0]
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	f042 0201 	orr.w	r2, r2, #1
 80047bc:	601a      	str	r2, [r3, #0]
 80047be:	2300      	movs	r3, #0
 80047c0:	4618      	mov	r0, r3
 80047c2:	3710      	adds	r7, #16
 80047c4:	46bd      	mov	sp, r7
 80047c6:	bd80      	pop	{r7, pc}
 80047c8:	40010000 	.word	0x40010000
 80047cc:	40000400 	.word	0x40000400
 80047d0:	40000800 	.word	0x40000800
 80047d4:	40000c00 	.word	0x40000c00
 80047d8:	40014000 	.word	0x40014000

080047dc <HAL_TIM_PWM_ConfigChannel>:
 80047dc:	b580      	push	{r7, lr}
 80047de:	b086      	sub	sp, #24
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	60f8      	str	r0, [r7, #12]
 80047e4:	60b9      	str	r1, [r7, #8]
 80047e6:	607a      	str	r2, [r7, #4]
 80047e8:	2300      	movs	r3, #0
 80047ea:	75fb      	strb	r3, [r7, #23]
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80047f2:	2b01      	cmp	r3, #1
 80047f4:	d101      	bne.n	80047fa <HAL_TIM_PWM_ConfigChannel+0x1e>
 80047f6:	2302      	movs	r3, #2
 80047f8:	e0ae      	b.n	8004958 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80047fa:	68fb      	ldr	r3, [r7, #12]
 80047fc:	2201      	movs	r2, #1
 80047fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	2b0c      	cmp	r3, #12
 8004806:	f200 809f 	bhi.w	8004948 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800480a:	a201      	add	r2, pc, #4	@ (adr r2, 8004810 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800480c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004810:	08004845 	.word	0x08004845
 8004814:	08004949 	.word	0x08004949
 8004818:	08004949 	.word	0x08004949
 800481c:	08004949 	.word	0x08004949
 8004820:	08004885 	.word	0x08004885
 8004824:	08004949 	.word	0x08004949
 8004828:	08004949 	.word	0x08004949
 800482c:	08004949 	.word	0x08004949
 8004830:	080048c7 	.word	0x080048c7
 8004834:	08004949 	.word	0x08004949
 8004838:	08004949 	.word	0x08004949
 800483c:	08004949 	.word	0x08004949
 8004840:	08004907 	.word	0x08004907
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	68b9      	ldr	r1, [r7, #8]
 800484a:	4618      	mov	r0, r3
 800484c:	f000 f9dc 	bl	8004c08 <TIM_OC1_SetConfig>
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	699a      	ldr	r2, [r3, #24]
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f042 0208 	orr.w	r2, r2, #8
 800485e:	619a      	str	r2, [r3, #24]
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	699a      	ldr	r2, [r3, #24]
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	f022 0204 	bic.w	r2, r2, #4
 800486e:	619a      	str	r2, [r3, #24]
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	6999      	ldr	r1, [r3, #24]
 8004876:	68bb      	ldr	r3, [r7, #8]
 8004878:	691a      	ldr	r2, [r3, #16]
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	430a      	orrs	r2, r1
 8004880:	619a      	str	r2, [r3, #24]
 8004882:	e064      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	68b9      	ldr	r1, [r7, #8]
 800488a:	4618      	mov	r0, r3
 800488c:	f000 fa22 	bl	8004cd4 <TIM_OC2_SetConfig>
 8004890:	68fb      	ldr	r3, [r7, #12]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	699a      	ldr	r2, [r3, #24]
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800489e:	619a      	str	r2, [r3, #24]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	699a      	ldr	r2, [r3, #24]
 80048a6:	68fb      	ldr	r3, [r7, #12]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048ae:	619a      	str	r2, [r3, #24]
 80048b0:	68fb      	ldr	r3, [r7, #12]
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	6999      	ldr	r1, [r3, #24]
 80048b6:	68bb      	ldr	r3, [r7, #8]
 80048b8:	691b      	ldr	r3, [r3, #16]
 80048ba:	021a      	lsls	r2, r3, #8
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	430a      	orrs	r2, r1
 80048c2:	619a      	str	r2, [r3, #24]
 80048c4:	e043      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	68b9      	ldr	r1, [r7, #8]
 80048cc:	4618      	mov	r0, r3
 80048ce:	f000 fa6d 	bl	8004dac <TIM_OC3_SetConfig>
 80048d2:	68fb      	ldr	r3, [r7, #12]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	69da      	ldr	r2, [r3, #28]
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	f042 0208 	orr.w	r2, r2, #8
 80048e0:	61da      	str	r2, [r3, #28]
 80048e2:	68fb      	ldr	r3, [r7, #12]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	69da      	ldr	r2, [r3, #28]
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	f022 0204 	bic.w	r2, r2, #4
 80048f0:	61da      	str	r2, [r3, #28]
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	69d9      	ldr	r1, [r3, #28]
 80048f8:	68bb      	ldr	r3, [r7, #8]
 80048fa:	691a      	ldr	r2, [r3, #16]
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	430a      	orrs	r2, r1
 8004902:	61da      	str	r2, [r3, #28]
 8004904:	e023      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	68b9      	ldr	r1, [r7, #8]
 800490c:	4618      	mov	r0, r3
 800490e:	f000 fab7 	bl	8004e80 <TIM_OC4_SetConfig>
 8004912:	68fb      	ldr	r3, [r7, #12]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	69da      	ldr	r2, [r3, #28]
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004920:	61da      	str	r2, [r3, #28]
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	69da      	ldr	r2, [r3, #28]
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004930:	61da      	str	r2, [r3, #28]
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	69d9      	ldr	r1, [r3, #28]
 8004938:	68bb      	ldr	r3, [r7, #8]
 800493a:	691b      	ldr	r3, [r3, #16]
 800493c:	021a      	lsls	r2, r3, #8
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	430a      	orrs	r2, r1
 8004944:	61da      	str	r2, [r3, #28]
 8004946:	e002      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004948:	2301      	movs	r3, #1
 800494a:	75fb      	strb	r3, [r7, #23]
 800494c:	bf00      	nop
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	2200      	movs	r2, #0
 8004952:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004956:	7dfb      	ldrb	r3, [r7, #23]
 8004958:	4618      	mov	r0, r3
 800495a:	3718      	adds	r7, #24
 800495c:	46bd      	mov	sp, r7
 800495e:	bd80      	pop	{r7, pc}

08004960 <HAL_TIM_ConfigClockSource>:
 8004960:	b580      	push	{r7, lr}
 8004962:	b084      	sub	sp, #16
 8004964:	af00      	add	r7, sp, #0
 8004966:	6078      	str	r0, [r7, #4]
 8004968:	6039      	str	r1, [r7, #0]
 800496a:	2300      	movs	r3, #0
 800496c:	73fb      	strb	r3, [r7, #15]
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004974:	2b01      	cmp	r3, #1
 8004976:	d101      	bne.n	800497c <HAL_TIM_ConfigClockSource+0x1c>
 8004978:	2302      	movs	r3, #2
 800497a:	e0b4      	b.n	8004ae6 <HAL_TIM_ConfigClockSource+0x186>
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	2201      	movs	r2, #1
 8004980:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	2202      	movs	r2, #2
 8004988:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	689b      	ldr	r3, [r3, #8]
 8004992:	60bb      	str	r3, [r7, #8]
 8004994:	68bb      	ldr	r3, [r7, #8]
 8004996:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800499a:	60bb      	str	r3, [r7, #8]
 800499c:	68bb      	ldr	r3, [r7, #8]
 800499e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80049a2:	60bb      	str	r3, [r7, #8]
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	68ba      	ldr	r2, [r7, #8]
 80049aa:	609a      	str	r2, [r3, #8]
 80049ac:	683b      	ldr	r3, [r7, #0]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80049b4:	d03e      	beq.n	8004a34 <HAL_TIM_ConfigClockSource+0xd4>
 80049b6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80049ba:	f200 8087 	bhi.w	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049be:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80049c2:	f000 8086 	beq.w	8004ad2 <HAL_TIM_ConfigClockSource+0x172>
 80049c6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80049ca:	d87f      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049cc:	2b70      	cmp	r3, #112	@ 0x70
 80049ce:	d01a      	beq.n	8004a06 <HAL_TIM_ConfigClockSource+0xa6>
 80049d0:	2b70      	cmp	r3, #112	@ 0x70
 80049d2:	d87b      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049d4:	2b60      	cmp	r3, #96	@ 0x60
 80049d6:	d050      	beq.n	8004a7a <HAL_TIM_ConfigClockSource+0x11a>
 80049d8:	2b60      	cmp	r3, #96	@ 0x60
 80049da:	d877      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049dc:	2b50      	cmp	r3, #80	@ 0x50
 80049de:	d03c      	beq.n	8004a5a <HAL_TIM_ConfigClockSource+0xfa>
 80049e0:	2b50      	cmp	r3, #80	@ 0x50
 80049e2:	d873      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049e4:	2b40      	cmp	r3, #64	@ 0x40
 80049e6:	d058      	beq.n	8004a9a <HAL_TIM_ConfigClockSource+0x13a>
 80049e8:	2b40      	cmp	r3, #64	@ 0x40
 80049ea:	d86f      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049ec:	2b30      	cmp	r3, #48	@ 0x30
 80049ee:	d064      	beq.n	8004aba <HAL_TIM_ConfigClockSource+0x15a>
 80049f0:	2b30      	cmp	r3, #48	@ 0x30
 80049f2:	d86b      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049f4:	2b20      	cmp	r3, #32
 80049f6:	d060      	beq.n	8004aba <HAL_TIM_ConfigClockSource+0x15a>
 80049f8:	2b20      	cmp	r3, #32
 80049fa:	d867      	bhi.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d05c      	beq.n	8004aba <HAL_TIM_ConfigClockSource+0x15a>
 8004a00:	2b10      	cmp	r3, #16
 8004a02:	d05a      	beq.n	8004aba <HAL_TIM_ConfigClockSource+0x15a>
 8004a04:	e062      	b.n	8004acc <HAL_TIM_ConfigClockSource+0x16c>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	6818      	ldr	r0, [r3, #0]
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	6899      	ldr	r1, [r3, #8]
 8004a0e:	683b      	ldr	r3, [r7, #0]
 8004a10:	685a      	ldr	r2, [r3, #4]
 8004a12:	683b      	ldr	r3, [r7, #0]
 8004a14:	68db      	ldr	r3, [r3, #12]
 8004a16:	f000 fafd 	bl	8005014 <TIM_ETR_SetConfig>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	689b      	ldr	r3, [r3, #8]
 8004a20:	60bb      	str	r3, [r7, #8]
 8004a22:	68bb      	ldr	r3, [r7, #8]
 8004a24:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004a28:	60bb      	str	r3, [r7, #8]
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	68ba      	ldr	r2, [r7, #8]
 8004a30:	609a      	str	r2, [r3, #8]
 8004a32:	e04f      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	6818      	ldr	r0, [r3, #0]
 8004a38:	683b      	ldr	r3, [r7, #0]
 8004a3a:	6899      	ldr	r1, [r3, #8]
 8004a3c:	683b      	ldr	r3, [r7, #0]
 8004a3e:	685a      	ldr	r2, [r3, #4]
 8004a40:	683b      	ldr	r3, [r7, #0]
 8004a42:	68db      	ldr	r3, [r3, #12]
 8004a44:	f000 fae6 	bl	8005014 <TIM_ETR_SetConfig>
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	689a      	ldr	r2, [r3, #8]
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004a56:	609a      	str	r2, [r3, #8]
 8004a58:	e03c      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	6818      	ldr	r0, [r3, #0]
 8004a5e:	683b      	ldr	r3, [r7, #0]
 8004a60:	6859      	ldr	r1, [r3, #4]
 8004a62:	683b      	ldr	r3, [r7, #0]
 8004a64:	68db      	ldr	r3, [r3, #12]
 8004a66:	461a      	mov	r2, r3
 8004a68:	f000 fa5a 	bl	8004f20 <TIM_TI1_ConfigInputStage>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	2150      	movs	r1, #80	@ 0x50
 8004a72:	4618      	mov	r0, r3
 8004a74:	f000 fab3 	bl	8004fde <TIM_ITRx_SetConfig>
 8004a78:	e02c      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	6818      	ldr	r0, [r3, #0]
 8004a7e:	683b      	ldr	r3, [r7, #0]
 8004a80:	6859      	ldr	r1, [r3, #4]
 8004a82:	683b      	ldr	r3, [r7, #0]
 8004a84:	68db      	ldr	r3, [r3, #12]
 8004a86:	461a      	mov	r2, r3
 8004a88:	f000 fa79 	bl	8004f7e <TIM_TI2_ConfigInputStage>
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	2160      	movs	r1, #96	@ 0x60
 8004a92:	4618      	mov	r0, r3
 8004a94:	f000 faa3 	bl	8004fde <TIM_ITRx_SetConfig>
 8004a98:	e01c      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	6818      	ldr	r0, [r3, #0]
 8004a9e:	683b      	ldr	r3, [r7, #0]
 8004aa0:	6859      	ldr	r1, [r3, #4]
 8004aa2:	683b      	ldr	r3, [r7, #0]
 8004aa4:	68db      	ldr	r3, [r3, #12]
 8004aa6:	461a      	mov	r2, r3
 8004aa8:	f000 fa3a 	bl	8004f20 <TIM_TI1_ConfigInputStage>
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	681b      	ldr	r3, [r3, #0]
 8004ab0:	2140      	movs	r1, #64	@ 0x40
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	f000 fa93 	bl	8004fde <TIM_ITRx_SetConfig>
 8004ab8:	e00c      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	681a      	ldr	r2, [r3, #0]
 8004abe:	683b      	ldr	r3, [r7, #0]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4619      	mov	r1, r3
 8004ac4:	4610      	mov	r0, r2
 8004ac6:	f000 fa8a 	bl	8004fde <TIM_ITRx_SetConfig>
 8004aca:	e003      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004acc:	2301      	movs	r3, #1
 8004ace:	73fb      	strb	r3, [r7, #15]
 8004ad0:	e000      	b.n	8004ad4 <HAL_TIM_ConfigClockSource+0x174>
 8004ad2:	bf00      	nop
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	2201      	movs	r2, #1
 8004ad8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	2200      	movs	r2, #0
 8004ae0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004ae4:	7bfb      	ldrb	r3, [r7, #15]
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	3710      	adds	r7, #16
 8004aea:	46bd      	mov	sp, r7
 8004aec:	bd80      	pop	{r7, pc}
	...

08004af0 <TIM_Base_SetConfig>:
 8004af0:	b480      	push	{r7}
 8004af2:	b085      	sub	sp, #20
 8004af4:	af00      	add	r7, sp, #0
 8004af6:	6078      	str	r0, [r7, #4]
 8004af8:	6039      	str	r1, [r7, #0]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	60fb      	str	r3, [r7, #12]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	4a3a      	ldr	r2, [pc, #232]	@ (8004bec <TIM_Base_SetConfig+0xfc>)
 8004b04:	4293      	cmp	r3, r2
 8004b06:	d00f      	beq.n	8004b28 <TIM_Base_SetConfig+0x38>
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004b0e:	d00b      	beq.n	8004b28 <TIM_Base_SetConfig+0x38>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	4a37      	ldr	r2, [pc, #220]	@ (8004bf0 <TIM_Base_SetConfig+0x100>)
 8004b14:	4293      	cmp	r3, r2
 8004b16:	d007      	beq.n	8004b28 <TIM_Base_SetConfig+0x38>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	4a36      	ldr	r2, [pc, #216]	@ (8004bf4 <TIM_Base_SetConfig+0x104>)
 8004b1c:	4293      	cmp	r3, r2
 8004b1e:	d003      	beq.n	8004b28 <TIM_Base_SetConfig+0x38>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	4a35      	ldr	r2, [pc, #212]	@ (8004bf8 <TIM_Base_SetConfig+0x108>)
 8004b24:	4293      	cmp	r3, r2
 8004b26:	d108      	bne.n	8004b3a <TIM_Base_SetConfig+0x4a>
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b2e:	60fb      	str	r3, [r7, #12]
 8004b30:	683b      	ldr	r3, [r7, #0]
 8004b32:	685b      	ldr	r3, [r3, #4]
 8004b34:	68fa      	ldr	r2, [r7, #12]
 8004b36:	4313      	orrs	r3, r2
 8004b38:	60fb      	str	r3, [r7, #12]
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	4a2b      	ldr	r2, [pc, #172]	@ (8004bec <TIM_Base_SetConfig+0xfc>)
 8004b3e:	4293      	cmp	r3, r2
 8004b40:	d01b      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004b48:	d017      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	4a28      	ldr	r2, [pc, #160]	@ (8004bf0 <TIM_Base_SetConfig+0x100>)
 8004b4e:	4293      	cmp	r3, r2
 8004b50:	d013      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	4a27      	ldr	r2, [pc, #156]	@ (8004bf4 <TIM_Base_SetConfig+0x104>)
 8004b56:	4293      	cmp	r3, r2
 8004b58:	d00f      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	4a26      	ldr	r2, [pc, #152]	@ (8004bf8 <TIM_Base_SetConfig+0x108>)
 8004b5e:	4293      	cmp	r3, r2
 8004b60:	d00b      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	4a25      	ldr	r2, [pc, #148]	@ (8004bfc <TIM_Base_SetConfig+0x10c>)
 8004b66:	4293      	cmp	r3, r2
 8004b68:	d007      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	4a24      	ldr	r2, [pc, #144]	@ (8004c00 <TIM_Base_SetConfig+0x110>)
 8004b6e:	4293      	cmp	r3, r2
 8004b70:	d003      	beq.n	8004b7a <TIM_Base_SetConfig+0x8a>
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	4a23      	ldr	r2, [pc, #140]	@ (8004c04 <TIM_Base_SetConfig+0x114>)
 8004b76:	4293      	cmp	r3, r2
 8004b78:	d108      	bne.n	8004b8c <TIM_Base_SetConfig+0x9c>
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004b80:	60fb      	str	r3, [r7, #12]
 8004b82:	683b      	ldr	r3, [r7, #0]
 8004b84:	68db      	ldr	r3, [r3, #12]
 8004b86:	68fa      	ldr	r2, [r7, #12]
 8004b88:	4313      	orrs	r3, r2
 8004b8a:	60fb      	str	r3, [r7, #12]
 8004b8c:	68fb      	ldr	r3, [r7, #12]
 8004b8e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004b92:	683b      	ldr	r3, [r7, #0]
 8004b94:	695b      	ldr	r3, [r3, #20]
 8004b96:	4313      	orrs	r3, r2
 8004b98:	60fb      	str	r3, [r7, #12]
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	68fa      	ldr	r2, [r7, #12]
 8004b9e:	601a      	str	r2, [r3, #0]
 8004ba0:	683b      	ldr	r3, [r7, #0]
 8004ba2:	689a      	ldr	r2, [r3, #8]
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004ba8:	683b      	ldr	r3, [r7, #0]
 8004baa:	681a      	ldr	r2, [r3, #0]
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	629a      	str	r2, [r3, #40]	@ 0x28
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	4a0e      	ldr	r2, [pc, #56]	@ (8004bec <TIM_Base_SetConfig+0xfc>)
 8004bb4:	4293      	cmp	r3, r2
 8004bb6:	d103      	bne.n	8004bc0 <TIM_Base_SetConfig+0xd0>
 8004bb8:	683b      	ldr	r3, [r7, #0]
 8004bba:	691a      	ldr	r2, [r3, #16]
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	631a      	str	r2, [r3, #48]	@ 0x30
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	2201      	movs	r2, #1
 8004bc4:	615a      	str	r2, [r3, #20]
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	691b      	ldr	r3, [r3, #16]
 8004bca:	f003 0301 	and.w	r3, r3, #1
 8004bce:	2b01      	cmp	r3, #1
 8004bd0:	d105      	bne.n	8004bde <TIM_Base_SetConfig+0xee>
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	691b      	ldr	r3, [r3, #16]
 8004bd6:	f023 0201 	bic.w	r2, r3, #1
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	611a      	str	r2, [r3, #16]
 8004bde:	bf00      	nop
 8004be0:	3714      	adds	r7, #20
 8004be2:	46bd      	mov	sp, r7
 8004be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004be8:	4770      	bx	lr
 8004bea:	bf00      	nop
 8004bec:	40010000 	.word	0x40010000
 8004bf0:	40000400 	.word	0x40000400
 8004bf4:	40000800 	.word	0x40000800
 8004bf8:	40000c00 	.word	0x40000c00
 8004bfc:	40014000 	.word	0x40014000
 8004c00:	40014400 	.word	0x40014400
 8004c04:	40014800 	.word	0x40014800

08004c08 <TIM_OC1_SetConfig>:
 8004c08:	b480      	push	{r7}
 8004c0a:	b087      	sub	sp, #28
 8004c0c:	af00      	add	r7, sp, #0
 8004c0e:	6078      	str	r0, [r7, #4]
 8004c10:	6039      	str	r1, [r7, #0]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	6a1b      	ldr	r3, [r3, #32]
 8004c16:	617b      	str	r3, [r7, #20]
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	6a1b      	ldr	r3, [r3, #32]
 8004c1c:	f023 0201 	bic.w	r2, r3, #1
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	621a      	str	r2, [r3, #32]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	685b      	ldr	r3, [r3, #4]
 8004c28:	613b      	str	r3, [r7, #16]
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	699b      	ldr	r3, [r3, #24]
 8004c2e:	60fb      	str	r3, [r7, #12]
 8004c30:	68fb      	ldr	r3, [r7, #12]
 8004c32:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004c36:	60fb      	str	r3, [r7, #12]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	f023 0303 	bic.w	r3, r3, #3
 8004c3e:	60fb      	str	r3, [r7, #12]
 8004c40:	683b      	ldr	r3, [r7, #0]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	68fa      	ldr	r2, [r7, #12]
 8004c46:	4313      	orrs	r3, r2
 8004c48:	60fb      	str	r3, [r7, #12]
 8004c4a:	697b      	ldr	r3, [r7, #20]
 8004c4c:	f023 0302 	bic.w	r3, r3, #2
 8004c50:	617b      	str	r3, [r7, #20]
 8004c52:	683b      	ldr	r3, [r7, #0]
 8004c54:	689b      	ldr	r3, [r3, #8]
 8004c56:	697a      	ldr	r2, [r7, #20]
 8004c58:	4313      	orrs	r3, r2
 8004c5a:	617b      	str	r3, [r7, #20]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	4a1c      	ldr	r2, [pc, #112]	@ (8004cd0 <TIM_OC1_SetConfig+0xc8>)
 8004c60:	4293      	cmp	r3, r2
 8004c62:	d10c      	bne.n	8004c7e <TIM_OC1_SetConfig+0x76>
 8004c64:	697b      	ldr	r3, [r7, #20]
 8004c66:	f023 0308 	bic.w	r3, r3, #8
 8004c6a:	617b      	str	r3, [r7, #20]
 8004c6c:	683b      	ldr	r3, [r7, #0]
 8004c6e:	68db      	ldr	r3, [r3, #12]
 8004c70:	697a      	ldr	r2, [r7, #20]
 8004c72:	4313      	orrs	r3, r2
 8004c74:	617b      	str	r3, [r7, #20]
 8004c76:	697b      	ldr	r3, [r7, #20]
 8004c78:	f023 0304 	bic.w	r3, r3, #4
 8004c7c:	617b      	str	r3, [r7, #20]
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	4a13      	ldr	r2, [pc, #76]	@ (8004cd0 <TIM_OC1_SetConfig+0xc8>)
 8004c82:	4293      	cmp	r3, r2
 8004c84:	d111      	bne.n	8004caa <TIM_OC1_SetConfig+0xa2>
 8004c86:	693b      	ldr	r3, [r7, #16]
 8004c88:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004c8c:	613b      	str	r3, [r7, #16]
 8004c8e:	693b      	ldr	r3, [r7, #16]
 8004c90:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004c94:	613b      	str	r3, [r7, #16]
 8004c96:	683b      	ldr	r3, [r7, #0]
 8004c98:	695b      	ldr	r3, [r3, #20]
 8004c9a:	693a      	ldr	r2, [r7, #16]
 8004c9c:	4313      	orrs	r3, r2
 8004c9e:	613b      	str	r3, [r7, #16]
 8004ca0:	683b      	ldr	r3, [r7, #0]
 8004ca2:	699b      	ldr	r3, [r3, #24]
 8004ca4:	693a      	ldr	r2, [r7, #16]
 8004ca6:	4313      	orrs	r3, r2
 8004ca8:	613b      	str	r3, [r7, #16]
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	693a      	ldr	r2, [r7, #16]
 8004cae:	605a      	str	r2, [r3, #4]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	68fa      	ldr	r2, [r7, #12]
 8004cb4:	619a      	str	r2, [r3, #24]
 8004cb6:	683b      	ldr	r3, [r7, #0]
 8004cb8:	685a      	ldr	r2, [r3, #4]
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	635a      	str	r2, [r3, #52]	@ 0x34
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	697a      	ldr	r2, [r7, #20]
 8004cc2:	621a      	str	r2, [r3, #32]
 8004cc4:	bf00      	nop
 8004cc6:	371c      	adds	r7, #28
 8004cc8:	46bd      	mov	sp, r7
 8004cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cce:	4770      	bx	lr
 8004cd0:	40010000 	.word	0x40010000

08004cd4 <TIM_OC2_SetConfig>:
 8004cd4:	b480      	push	{r7}
 8004cd6:	b087      	sub	sp, #28
 8004cd8:	af00      	add	r7, sp, #0
 8004cda:	6078      	str	r0, [r7, #4]
 8004cdc:	6039      	str	r1, [r7, #0]
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	6a1b      	ldr	r3, [r3, #32]
 8004ce2:	617b      	str	r3, [r7, #20]
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	6a1b      	ldr	r3, [r3, #32]
 8004ce8:	f023 0210 	bic.w	r2, r3, #16
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	621a      	str	r2, [r3, #32]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	685b      	ldr	r3, [r3, #4]
 8004cf4:	613b      	str	r3, [r7, #16]
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	699b      	ldr	r3, [r3, #24]
 8004cfa:	60fb      	str	r3, [r7, #12]
 8004cfc:	68fb      	ldr	r3, [r7, #12]
 8004cfe:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004d02:	60fb      	str	r3, [r7, #12]
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d0a:	60fb      	str	r3, [r7, #12]
 8004d0c:	683b      	ldr	r3, [r7, #0]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	021b      	lsls	r3, r3, #8
 8004d12:	68fa      	ldr	r2, [r7, #12]
 8004d14:	4313      	orrs	r3, r2
 8004d16:	60fb      	str	r3, [r7, #12]
 8004d18:	697b      	ldr	r3, [r7, #20]
 8004d1a:	f023 0320 	bic.w	r3, r3, #32
 8004d1e:	617b      	str	r3, [r7, #20]
 8004d20:	683b      	ldr	r3, [r7, #0]
 8004d22:	689b      	ldr	r3, [r3, #8]
 8004d24:	011b      	lsls	r3, r3, #4
 8004d26:	697a      	ldr	r2, [r7, #20]
 8004d28:	4313      	orrs	r3, r2
 8004d2a:	617b      	str	r3, [r7, #20]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	4a1e      	ldr	r2, [pc, #120]	@ (8004da8 <TIM_OC2_SetConfig+0xd4>)
 8004d30:	4293      	cmp	r3, r2
 8004d32:	d10d      	bne.n	8004d50 <TIM_OC2_SetConfig+0x7c>
 8004d34:	697b      	ldr	r3, [r7, #20]
 8004d36:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004d3a:	617b      	str	r3, [r7, #20]
 8004d3c:	683b      	ldr	r3, [r7, #0]
 8004d3e:	68db      	ldr	r3, [r3, #12]
 8004d40:	011b      	lsls	r3, r3, #4
 8004d42:	697a      	ldr	r2, [r7, #20]
 8004d44:	4313      	orrs	r3, r2
 8004d46:	617b      	str	r3, [r7, #20]
 8004d48:	697b      	ldr	r3, [r7, #20]
 8004d4a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004d4e:	617b      	str	r3, [r7, #20]
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	4a15      	ldr	r2, [pc, #84]	@ (8004da8 <TIM_OC2_SetConfig+0xd4>)
 8004d54:	4293      	cmp	r3, r2
 8004d56:	d113      	bne.n	8004d80 <TIM_OC2_SetConfig+0xac>
 8004d58:	693b      	ldr	r3, [r7, #16]
 8004d5a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004d5e:	613b      	str	r3, [r7, #16]
 8004d60:	693b      	ldr	r3, [r7, #16]
 8004d62:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004d66:	613b      	str	r3, [r7, #16]
 8004d68:	683b      	ldr	r3, [r7, #0]
 8004d6a:	695b      	ldr	r3, [r3, #20]
 8004d6c:	009b      	lsls	r3, r3, #2
 8004d6e:	693a      	ldr	r2, [r7, #16]
 8004d70:	4313      	orrs	r3, r2
 8004d72:	613b      	str	r3, [r7, #16]
 8004d74:	683b      	ldr	r3, [r7, #0]
 8004d76:	699b      	ldr	r3, [r3, #24]
 8004d78:	009b      	lsls	r3, r3, #2
 8004d7a:	693a      	ldr	r2, [r7, #16]
 8004d7c:	4313      	orrs	r3, r2
 8004d7e:	613b      	str	r3, [r7, #16]
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	693a      	ldr	r2, [r7, #16]
 8004d84:	605a      	str	r2, [r3, #4]
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	68fa      	ldr	r2, [r7, #12]
 8004d8a:	619a      	str	r2, [r3, #24]
 8004d8c:	683b      	ldr	r3, [r7, #0]
 8004d8e:	685a      	ldr	r2, [r3, #4]
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	639a      	str	r2, [r3, #56]	@ 0x38
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	697a      	ldr	r2, [r7, #20]
 8004d98:	621a      	str	r2, [r3, #32]
 8004d9a:	bf00      	nop
 8004d9c:	371c      	adds	r7, #28
 8004d9e:	46bd      	mov	sp, r7
 8004da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004da4:	4770      	bx	lr
 8004da6:	bf00      	nop
 8004da8:	40010000 	.word	0x40010000

08004dac <TIM_OC3_SetConfig>:
 8004dac:	b480      	push	{r7}
 8004dae:	b087      	sub	sp, #28
 8004db0:	af00      	add	r7, sp, #0
 8004db2:	6078      	str	r0, [r7, #4]
 8004db4:	6039      	str	r1, [r7, #0]
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	6a1b      	ldr	r3, [r3, #32]
 8004dba:	617b      	str	r3, [r7, #20]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	6a1b      	ldr	r3, [r3, #32]
 8004dc0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	621a      	str	r2, [r3, #32]
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	685b      	ldr	r3, [r3, #4]
 8004dcc:	613b      	str	r3, [r7, #16]
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	69db      	ldr	r3, [r3, #28]
 8004dd2:	60fb      	str	r3, [r7, #12]
 8004dd4:	68fb      	ldr	r3, [r7, #12]
 8004dd6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004dda:	60fb      	str	r3, [r7, #12]
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	f023 0303 	bic.w	r3, r3, #3
 8004de2:	60fb      	str	r3, [r7, #12]
 8004de4:	683b      	ldr	r3, [r7, #0]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	68fa      	ldr	r2, [r7, #12]
 8004dea:	4313      	orrs	r3, r2
 8004dec:	60fb      	str	r3, [r7, #12]
 8004dee:	697b      	ldr	r3, [r7, #20]
 8004df0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004df4:	617b      	str	r3, [r7, #20]
 8004df6:	683b      	ldr	r3, [r7, #0]
 8004df8:	689b      	ldr	r3, [r3, #8]
 8004dfa:	021b      	lsls	r3, r3, #8
 8004dfc:	697a      	ldr	r2, [r7, #20]
 8004dfe:	4313      	orrs	r3, r2
 8004e00:	617b      	str	r3, [r7, #20]
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	4a1d      	ldr	r2, [pc, #116]	@ (8004e7c <TIM_OC3_SetConfig+0xd0>)
 8004e06:	4293      	cmp	r3, r2
 8004e08:	d10d      	bne.n	8004e26 <TIM_OC3_SetConfig+0x7a>
 8004e0a:	697b      	ldr	r3, [r7, #20]
 8004e0c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004e10:	617b      	str	r3, [r7, #20]
 8004e12:	683b      	ldr	r3, [r7, #0]
 8004e14:	68db      	ldr	r3, [r3, #12]
 8004e16:	021b      	lsls	r3, r3, #8
 8004e18:	697a      	ldr	r2, [r7, #20]
 8004e1a:	4313      	orrs	r3, r2
 8004e1c:	617b      	str	r3, [r7, #20]
 8004e1e:	697b      	ldr	r3, [r7, #20]
 8004e20:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004e24:	617b      	str	r3, [r7, #20]
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	4a14      	ldr	r2, [pc, #80]	@ (8004e7c <TIM_OC3_SetConfig+0xd0>)
 8004e2a:	4293      	cmp	r3, r2
 8004e2c:	d113      	bne.n	8004e56 <TIM_OC3_SetConfig+0xaa>
 8004e2e:	693b      	ldr	r3, [r7, #16]
 8004e30:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004e34:	613b      	str	r3, [r7, #16]
 8004e36:	693b      	ldr	r3, [r7, #16]
 8004e38:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004e3c:	613b      	str	r3, [r7, #16]
 8004e3e:	683b      	ldr	r3, [r7, #0]
 8004e40:	695b      	ldr	r3, [r3, #20]
 8004e42:	011b      	lsls	r3, r3, #4
 8004e44:	693a      	ldr	r2, [r7, #16]
 8004e46:	4313      	orrs	r3, r2
 8004e48:	613b      	str	r3, [r7, #16]
 8004e4a:	683b      	ldr	r3, [r7, #0]
 8004e4c:	699b      	ldr	r3, [r3, #24]
 8004e4e:	011b      	lsls	r3, r3, #4
 8004e50:	693a      	ldr	r2, [r7, #16]
 8004e52:	4313      	orrs	r3, r2
 8004e54:	613b      	str	r3, [r7, #16]
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	693a      	ldr	r2, [r7, #16]
 8004e5a:	605a      	str	r2, [r3, #4]
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	68fa      	ldr	r2, [r7, #12]
 8004e60:	61da      	str	r2, [r3, #28]
 8004e62:	683b      	ldr	r3, [r7, #0]
 8004e64:	685a      	ldr	r2, [r3, #4]
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	697a      	ldr	r2, [r7, #20]
 8004e6e:	621a      	str	r2, [r3, #32]
 8004e70:	bf00      	nop
 8004e72:	371c      	adds	r7, #28
 8004e74:	46bd      	mov	sp, r7
 8004e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e7a:	4770      	bx	lr
 8004e7c:	40010000 	.word	0x40010000

08004e80 <TIM_OC4_SetConfig>:
 8004e80:	b480      	push	{r7}
 8004e82:	b087      	sub	sp, #28
 8004e84:	af00      	add	r7, sp, #0
 8004e86:	6078      	str	r0, [r7, #4]
 8004e88:	6039      	str	r1, [r7, #0]
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	6a1b      	ldr	r3, [r3, #32]
 8004e8e:	613b      	str	r3, [r7, #16]
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	6a1b      	ldr	r3, [r3, #32]
 8004e94:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	621a      	str	r2, [r3, #32]
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	685b      	ldr	r3, [r3, #4]
 8004ea0:	617b      	str	r3, [r7, #20]
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	69db      	ldr	r3, [r3, #28]
 8004ea6:	60fb      	str	r3, [r7, #12]
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004eae:	60fb      	str	r3, [r7, #12]
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004eb6:	60fb      	str	r3, [r7, #12]
 8004eb8:	683b      	ldr	r3, [r7, #0]
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	021b      	lsls	r3, r3, #8
 8004ebe:	68fa      	ldr	r2, [r7, #12]
 8004ec0:	4313      	orrs	r3, r2
 8004ec2:	60fb      	str	r3, [r7, #12]
 8004ec4:	693b      	ldr	r3, [r7, #16]
 8004ec6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004eca:	613b      	str	r3, [r7, #16]
 8004ecc:	683b      	ldr	r3, [r7, #0]
 8004ece:	689b      	ldr	r3, [r3, #8]
 8004ed0:	031b      	lsls	r3, r3, #12
 8004ed2:	693a      	ldr	r2, [r7, #16]
 8004ed4:	4313      	orrs	r3, r2
 8004ed6:	613b      	str	r3, [r7, #16]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	4a10      	ldr	r2, [pc, #64]	@ (8004f1c <TIM_OC4_SetConfig+0x9c>)
 8004edc:	4293      	cmp	r3, r2
 8004ede:	d109      	bne.n	8004ef4 <TIM_OC4_SetConfig+0x74>
 8004ee0:	697b      	ldr	r3, [r7, #20]
 8004ee2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004ee6:	617b      	str	r3, [r7, #20]
 8004ee8:	683b      	ldr	r3, [r7, #0]
 8004eea:	695b      	ldr	r3, [r3, #20]
 8004eec:	019b      	lsls	r3, r3, #6
 8004eee:	697a      	ldr	r2, [r7, #20]
 8004ef0:	4313      	orrs	r3, r2
 8004ef2:	617b      	str	r3, [r7, #20]
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	697a      	ldr	r2, [r7, #20]
 8004ef8:	605a      	str	r2, [r3, #4]
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	68fa      	ldr	r2, [r7, #12]
 8004efe:	61da      	str	r2, [r3, #28]
 8004f00:	683b      	ldr	r3, [r7, #0]
 8004f02:	685a      	ldr	r2, [r3, #4]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	693a      	ldr	r2, [r7, #16]
 8004f0c:	621a      	str	r2, [r3, #32]
 8004f0e:	bf00      	nop
 8004f10:	371c      	adds	r7, #28
 8004f12:	46bd      	mov	sp, r7
 8004f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f18:	4770      	bx	lr
 8004f1a:	bf00      	nop
 8004f1c:	40010000 	.word	0x40010000

08004f20 <TIM_TI1_ConfigInputStage>:
 8004f20:	b480      	push	{r7}
 8004f22:	b087      	sub	sp, #28
 8004f24:	af00      	add	r7, sp, #0
 8004f26:	60f8      	str	r0, [r7, #12]
 8004f28:	60b9      	str	r1, [r7, #8]
 8004f2a:	607a      	str	r2, [r7, #4]
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	6a1b      	ldr	r3, [r3, #32]
 8004f30:	617b      	str	r3, [r7, #20]
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	6a1b      	ldr	r3, [r3, #32]
 8004f36:	f023 0201 	bic.w	r2, r3, #1
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	621a      	str	r2, [r3, #32]
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	699b      	ldr	r3, [r3, #24]
 8004f42:	613b      	str	r3, [r7, #16]
 8004f44:	693b      	ldr	r3, [r7, #16]
 8004f46:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004f4a:	613b      	str	r3, [r7, #16]
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	011b      	lsls	r3, r3, #4
 8004f50:	693a      	ldr	r2, [r7, #16]
 8004f52:	4313      	orrs	r3, r2
 8004f54:	613b      	str	r3, [r7, #16]
 8004f56:	697b      	ldr	r3, [r7, #20]
 8004f58:	f023 030a 	bic.w	r3, r3, #10
 8004f5c:	617b      	str	r3, [r7, #20]
 8004f5e:	697a      	ldr	r2, [r7, #20]
 8004f60:	68bb      	ldr	r3, [r7, #8]
 8004f62:	4313      	orrs	r3, r2
 8004f64:	617b      	str	r3, [r7, #20]
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	693a      	ldr	r2, [r7, #16]
 8004f6a:	619a      	str	r2, [r3, #24]
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	697a      	ldr	r2, [r7, #20]
 8004f70:	621a      	str	r2, [r3, #32]
 8004f72:	bf00      	nop
 8004f74:	371c      	adds	r7, #28
 8004f76:	46bd      	mov	sp, r7
 8004f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f7c:	4770      	bx	lr

08004f7e <TIM_TI2_ConfigInputStage>:
 8004f7e:	b480      	push	{r7}
 8004f80:	b087      	sub	sp, #28
 8004f82:	af00      	add	r7, sp, #0
 8004f84:	60f8      	str	r0, [r7, #12]
 8004f86:	60b9      	str	r1, [r7, #8]
 8004f88:	607a      	str	r2, [r7, #4]
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	6a1b      	ldr	r3, [r3, #32]
 8004f8e:	617b      	str	r3, [r7, #20]
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	6a1b      	ldr	r3, [r3, #32]
 8004f94:	f023 0210 	bic.w	r2, r3, #16
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	621a      	str	r2, [r3, #32]
 8004f9c:	68fb      	ldr	r3, [r7, #12]
 8004f9e:	699b      	ldr	r3, [r3, #24]
 8004fa0:	613b      	str	r3, [r7, #16]
 8004fa2:	693b      	ldr	r3, [r7, #16]
 8004fa4:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004fa8:	613b      	str	r3, [r7, #16]
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	031b      	lsls	r3, r3, #12
 8004fae:	693a      	ldr	r2, [r7, #16]
 8004fb0:	4313      	orrs	r3, r2
 8004fb2:	613b      	str	r3, [r7, #16]
 8004fb4:	697b      	ldr	r3, [r7, #20]
 8004fb6:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004fba:	617b      	str	r3, [r7, #20]
 8004fbc:	68bb      	ldr	r3, [r7, #8]
 8004fbe:	011b      	lsls	r3, r3, #4
 8004fc0:	697a      	ldr	r2, [r7, #20]
 8004fc2:	4313      	orrs	r3, r2
 8004fc4:	617b      	str	r3, [r7, #20]
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	693a      	ldr	r2, [r7, #16]
 8004fca:	619a      	str	r2, [r3, #24]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	697a      	ldr	r2, [r7, #20]
 8004fd0:	621a      	str	r2, [r3, #32]
 8004fd2:	bf00      	nop
 8004fd4:	371c      	adds	r7, #28
 8004fd6:	46bd      	mov	sp, r7
 8004fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fdc:	4770      	bx	lr

08004fde <TIM_ITRx_SetConfig>:
 8004fde:	b480      	push	{r7}
 8004fe0:	b085      	sub	sp, #20
 8004fe2:	af00      	add	r7, sp, #0
 8004fe4:	6078      	str	r0, [r7, #4]
 8004fe6:	6039      	str	r1, [r7, #0]
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	689b      	ldr	r3, [r3, #8]
 8004fec:	60fb      	str	r3, [r7, #12]
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004ff4:	60fb      	str	r3, [r7, #12]
 8004ff6:	683a      	ldr	r2, [r7, #0]
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	4313      	orrs	r3, r2
 8004ffc:	f043 0307 	orr.w	r3, r3, #7
 8005000:	60fb      	str	r3, [r7, #12]
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	68fa      	ldr	r2, [r7, #12]
 8005006:	609a      	str	r2, [r3, #8]
 8005008:	bf00      	nop
 800500a:	3714      	adds	r7, #20
 800500c:	46bd      	mov	sp, r7
 800500e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005012:	4770      	bx	lr

08005014 <TIM_ETR_SetConfig>:
 8005014:	b480      	push	{r7}
 8005016:	b087      	sub	sp, #28
 8005018:	af00      	add	r7, sp, #0
 800501a:	60f8      	str	r0, [r7, #12]
 800501c:	60b9      	str	r1, [r7, #8]
 800501e:	607a      	str	r2, [r7, #4]
 8005020:	603b      	str	r3, [r7, #0]
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	689b      	ldr	r3, [r3, #8]
 8005026:	617b      	str	r3, [r7, #20]
 8005028:	697b      	ldr	r3, [r7, #20]
 800502a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800502e:	617b      	str	r3, [r7, #20]
 8005030:	683b      	ldr	r3, [r7, #0]
 8005032:	021a      	lsls	r2, r3, #8
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	431a      	orrs	r2, r3
 8005038:	68bb      	ldr	r3, [r7, #8]
 800503a:	4313      	orrs	r3, r2
 800503c:	697a      	ldr	r2, [r7, #20]
 800503e:	4313      	orrs	r3, r2
 8005040:	617b      	str	r3, [r7, #20]
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	697a      	ldr	r2, [r7, #20]
 8005046:	609a      	str	r2, [r3, #8]
 8005048:	bf00      	nop
 800504a:	371c      	adds	r7, #28
 800504c:	46bd      	mov	sp, r7
 800504e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005052:	4770      	bx	lr

08005054 <TIM_CCxChannelCmd>:
 8005054:	b480      	push	{r7}
 8005056:	b087      	sub	sp, #28
 8005058:	af00      	add	r7, sp, #0
 800505a:	60f8      	str	r0, [r7, #12]
 800505c:	60b9      	str	r1, [r7, #8]
 800505e:	607a      	str	r2, [r7, #4]
 8005060:	68bb      	ldr	r3, [r7, #8]
 8005062:	f003 031f 	and.w	r3, r3, #31
 8005066:	2201      	movs	r2, #1
 8005068:	fa02 f303 	lsl.w	r3, r2, r3
 800506c:	617b      	str	r3, [r7, #20]
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	6a1a      	ldr	r2, [r3, #32]
 8005072:	697b      	ldr	r3, [r7, #20]
 8005074:	43db      	mvns	r3, r3
 8005076:	401a      	ands	r2, r3
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	621a      	str	r2, [r3, #32]
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	6a1a      	ldr	r2, [r3, #32]
 8005080:	68bb      	ldr	r3, [r7, #8]
 8005082:	f003 031f 	and.w	r3, r3, #31
 8005086:	6879      	ldr	r1, [r7, #4]
 8005088:	fa01 f303 	lsl.w	r3, r1, r3
 800508c:	431a      	orrs	r2, r3
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	621a      	str	r2, [r3, #32]
 8005092:	bf00      	nop
 8005094:	371c      	adds	r7, #28
 8005096:	46bd      	mov	sp, r7
 8005098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800509c:	4770      	bx	lr
	...

080050a0 <HAL_TIMEx_MasterConfigSynchronization>:
 80050a0:	b480      	push	{r7}
 80050a2:	b085      	sub	sp, #20
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	6078      	str	r0, [r7, #4]
 80050a8:	6039      	str	r1, [r7, #0]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80050b0:	2b01      	cmp	r3, #1
 80050b2:	d101      	bne.n	80050b8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80050b4:	2302      	movs	r3, #2
 80050b6:	e050      	b.n	800515a <HAL_TIMEx_MasterConfigSynchronization+0xba>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	2201      	movs	r2, #1
 80050bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	2202      	movs	r2, #2
 80050c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	685b      	ldr	r3, [r3, #4]
 80050ce:	60fb      	str	r3, [r7, #12]
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	689b      	ldr	r3, [r3, #8]
 80050d6:	60bb      	str	r3, [r7, #8]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80050de:	60fb      	str	r3, [r7, #12]
 80050e0:	683b      	ldr	r3, [r7, #0]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	68fa      	ldr	r2, [r7, #12]
 80050e6:	4313      	orrs	r3, r2
 80050e8:	60fb      	str	r3, [r7, #12]
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	68fa      	ldr	r2, [r7, #12]
 80050f0:	605a      	str	r2, [r3, #4]
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	4a1c      	ldr	r2, [pc, #112]	@ (8005168 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80050f8:	4293      	cmp	r3, r2
 80050fa:	d018      	beq.n	800512e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005104:	d013      	beq.n	800512e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	4a18      	ldr	r2, [pc, #96]	@ (800516c <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800510c:	4293      	cmp	r3, r2
 800510e:	d00e      	beq.n	800512e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	4a16      	ldr	r2, [pc, #88]	@ (8005170 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8005116:	4293      	cmp	r3, r2
 8005118:	d009      	beq.n	800512e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	4a15      	ldr	r2, [pc, #84]	@ (8005174 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8005120:	4293      	cmp	r3, r2
 8005122:	d004      	beq.n	800512e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	4a13      	ldr	r2, [pc, #76]	@ (8005178 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800512a:	4293      	cmp	r3, r2
 800512c:	d10c      	bne.n	8005148 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800512e:	68bb      	ldr	r3, [r7, #8]
 8005130:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005134:	60bb      	str	r3, [r7, #8]
 8005136:	683b      	ldr	r3, [r7, #0]
 8005138:	685b      	ldr	r3, [r3, #4]
 800513a:	68ba      	ldr	r2, [r7, #8]
 800513c:	4313      	orrs	r3, r2
 800513e:	60bb      	str	r3, [r7, #8]
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	68ba      	ldr	r2, [r7, #8]
 8005146:	609a      	str	r2, [r3, #8]
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	2201      	movs	r2, #1
 800514c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	2200      	movs	r2, #0
 8005154:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005158:	2300      	movs	r3, #0
 800515a:	4618      	mov	r0, r3
 800515c:	3714      	adds	r7, #20
 800515e:	46bd      	mov	sp, r7
 8005160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005164:	4770      	bx	lr
 8005166:	bf00      	nop
 8005168:	40010000 	.word	0x40010000
 800516c:	40000400 	.word	0x40000400
 8005170:	40000800 	.word	0x40000800
 8005174:	40000c00 	.word	0x40000c00
 8005178:	40014000 	.word	0x40014000

0800517c <HAL_UART_Init>:
 800517c:	b580      	push	{r7, lr}
 800517e:	b082      	sub	sp, #8
 8005180:	af00      	add	r7, sp, #0
 8005182:	6078      	str	r0, [r7, #4]
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	2b00      	cmp	r3, #0
 8005188:	d101      	bne.n	800518e <HAL_UART_Init+0x12>
 800518a:	2301      	movs	r3, #1
 800518c:	e042      	b.n	8005214 <HAL_UART_Init+0x98>
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005194:	b2db      	uxtb	r3, r3
 8005196:	2b00      	cmp	r3, #0
 8005198:	d106      	bne.n	80051a8 <HAL_UART_Init+0x2c>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	2200      	movs	r2, #0
 800519e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80051a2:	6878      	ldr	r0, [r7, #4]
 80051a4:	f7fc feac 	bl	8001f00 <HAL_UART_MspInit>
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	2224      	movs	r2, #36	@ 0x24
 80051ac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	68da      	ldr	r2, [r3, #12]
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80051be:	60da      	str	r2, [r3, #12]
 80051c0:	6878      	ldr	r0, [r7, #4]
 80051c2:	f000 fdbd 	bl	8005d40 <UART_SetConfig>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	691a      	ldr	r2, [r3, #16]
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80051d4:	611a      	str	r2, [r3, #16]
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	695a      	ldr	r2, [r3, #20]
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80051e4:	615a      	str	r2, [r3, #20]
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	68da      	ldr	r2, [r3, #12]
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80051f4:	60da      	str	r2, [r3, #12]
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	2200      	movs	r2, #0
 80051fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	2220      	movs	r2, #32
 8005200:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	2220      	movs	r2, #32
 8005208:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	2200      	movs	r2, #0
 8005210:	635a      	str	r2, [r3, #52]	@ 0x34
 8005212:	2300      	movs	r3, #0
 8005214:	4618      	mov	r0, r3
 8005216:	3708      	adds	r7, #8
 8005218:	46bd      	mov	sp, r7
 800521a:	bd80      	pop	{r7, pc}

0800521c <HAL_UART_Transmit>:
 800521c:	b580      	push	{r7, lr}
 800521e:	b08a      	sub	sp, #40	@ 0x28
 8005220:	af02      	add	r7, sp, #8
 8005222:	60f8      	str	r0, [r7, #12]
 8005224:	60b9      	str	r1, [r7, #8]
 8005226:	603b      	str	r3, [r7, #0]
 8005228:	4613      	mov	r3, r2
 800522a:	80fb      	strh	r3, [r7, #6]
 800522c:	2300      	movs	r3, #0
 800522e:	617b      	str	r3, [r7, #20]
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005236:	b2db      	uxtb	r3, r3
 8005238:	2b20      	cmp	r3, #32
 800523a:	d175      	bne.n	8005328 <HAL_UART_Transmit+0x10c>
 800523c:	68bb      	ldr	r3, [r7, #8]
 800523e:	2b00      	cmp	r3, #0
 8005240:	d002      	beq.n	8005248 <HAL_UART_Transmit+0x2c>
 8005242:	88fb      	ldrh	r3, [r7, #6]
 8005244:	2b00      	cmp	r3, #0
 8005246:	d101      	bne.n	800524c <HAL_UART_Transmit+0x30>
 8005248:	2301      	movs	r3, #1
 800524a:	e06e      	b.n	800532a <HAL_UART_Transmit+0x10e>
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	2200      	movs	r2, #0
 8005250:	645a      	str	r2, [r3, #68]	@ 0x44
 8005252:	68fb      	ldr	r3, [r7, #12]
 8005254:	2221      	movs	r2, #33	@ 0x21
 8005256:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800525a:	f7fd f889 	bl	8002370 <HAL_GetTick>
 800525e:	6178      	str	r0, [r7, #20]
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	88fa      	ldrh	r2, [r7, #6]
 8005264:	849a      	strh	r2, [r3, #36]	@ 0x24
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	88fa      	ldrh	r2, [r7, #6]
 800526a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	689b      	ldr	r3, [r3, #8]
 8005270:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005274:	d108      	bne.n	8005288 <HAL_UART_Transmit+0x6c>
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	691b      	ldr	r3, [r3, #16]
 800527a:	2b00      	cmp	r3, #0
 800527c:	d104      	bne.n	8005288 <HAL_UART_Transmit+0x6c>
 800527e:	2300      	movs	r3, #0
 8005280:	61fb      	str	r3, [r7, #28]
 8005282:	68bb      	ldr	r3, [r7, #8]
 8005284:	61bb      	str	r3, [r7, #24]
 8005286:	e003      	b.n	8005290 <HAL_UART_Transmit+0x74>
 8005288:	68bb      	ldr	r3, [r7, #8]
 800528a:	61fb      	str	r3, [r7, #28]
 800528c:	2300      	movs	r3, #0
 800528e:	61bb      	str	r3, [r7, #24]
 8005290:	e02e      	b.n	80052f0 <HAL_UART_Transmit+0xd4>
 8005292:	683b      	ldr	r3, [r7, #0]
 8005294:	9300      	str	r3, [sp, #0]
 8005296:	697b      	ldr	r3, [r7, #20]
 8005298:	2200      	movs	r2, #0
 800529a:	2180      	movs	r1, #128	@ 0x80
 800529c:	68f8      	ldr	r0, [r7, #12]
 800529e:	f000 fb1f 	bl	80058e0 <UART_WaitOnFlagUntilTimeout>
 80052a2:	4603      	mov	r3, r0
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	d005      	beq.n	80052b4 <HAL_UART_Transmit+0x98>
 80052a8:	68fb      	ldr	r3, [r7, #12]
 80052aa:	2220      	movs	r2, #32
 80052ac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80052b0:	2303      	movs	r3, #3
 80052b2:	e03a      	b.n	800532a <HAL_UART_Transmit+0x10e>
 80052b4:	69fb      	ldr	r3, [r7, #28]
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d10b      	bne.n	80052d2 <HAL_UART_Transmit+0xb6>
 80052ba:	69bb      	ldr	r3, [r7, #24]
 80052bc:	881b      	ldrh	r3, [r3, #0]
 80052be:	461a      	mov	r2, r3
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80052c8:	605a      	str	r2, [r3, #4]
 80052ca:	69bb      	ldr	r3, [r7, #24]
 80052cc:	3302      	adds	r3, #2
 80052ce:	61bb      	str	r3, [r7, #24]
 80052d0:	e007      	b.n	80052e2 <HAL_UART_Transmit+0xc6>
 80052d2:	69fb      	ldr	r3, [r7, #28]
 80052d4:	781a      	ldrb	r2, [r3, #0]
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	605a      	str	r2, [r3, #4]
 80052dc:	69fb      	ldr	r3, [r7, #28]
 80052de:	3301      	adds	r3, #1
 80052e0:	61fb      	str	r3, [r7, #28]
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80052e6:	b29b      	uxth	r3, r3
 80052e8:	3b01      	subs	r3, #1
 80052ea:	b29a      	uxth	r2, r3
 80052ec:	68fb      	ldr	r3, [r7, #12]
 80052ee:	84da      	strh	r2, [r3, #38]	@ 0x26
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80052f4:	b29b      	uxth	r3, r3
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d1cb      	bne.n	8005292 <HAL_UART_Transmit+0x76>
 80052fa:	683b      	ldr	r3, [r7, #0]
 80052fc:	9300      	str	r3, [sp, #0]
 80052fe:	697b      	ldr	r3, [r7, #20]
 8005300:	2200      	movs	r2, #0
 8005302:	2140      	movs	r1, #64	@ 0x40
 8005304:	68f8      	ldr	r0, [r7, #12]
 8005306:	f000 faeb 	bl	80058e0 <UART_WaitOnFlagUntilTimeout>
 800530a:	4603      	mov	r3, r0
 800530c:	2b00      	cmp	r3, #0
 800530e:	d005      	beq.n	800531c <HAL_UART_Transmit+0x100>
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	2220      	movs	r2, #32
 8005314:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005318:	2303      	movs	r3, #3
 800531a:	e006      	b.n	800532a <HAL_UART_Transmit+0x10e>
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	2220      	movs	r2, #32
 8005320:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005324:	2300      	movs	r3, #0
 8005326:	e000      	b.n	800532a <HAL_UART_Transmit+0x10e>
 8005328:	2302      	movs	r3, #2
 800532a:	4618      	mov	r0, r3
 800532c:	3720      	adds	r7, #32
 800532e:	46bd      	mov	sp, r7
 8005330:	bd80      	pop	{r7, pc}

08005332 <HAL_UART_Receive_IT>:
 8005332:	b580      	push	{r7, lr}
 8005334:	b084      	sub	sp, #16
 8005336:	af00      	add	r7, sp, #0
 8005338:	60f8      	str	r0, [r7, #12]
 800533a:	60b9      	str	r1, [r7, #8]
 800533c:	4613      	mov	r3, r2
 800533e:	80fb      	strh	r3, [r7, #6]
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005346:	b2db      	uxtb	r3, r3
 8005348:	2b20      	cmp	r3, #32
 800534a:	d112      	bne.n	8005372 <HAL_UART_Receive_IT+0x40>
 800534c:	68bb      	ldr	r3, [r7, #8]
 800534e:	2b00      	cmp	r3, #0
 8005350:	d002      	beq.n	8005358 <HAL_UART_Receive_IT+0x26>
 8005352:	88fb      	ldrh	r3, [r7, #6]
 8005354:	2b00      	cmp	r3, #0
 8005356:	d101      	bne.n	800535c <HAL_UART_Receive_IT+0x2a>
 8005358:	2301      	movs	r3, #1
 800535a:	e00b      	b.n	8005374 <HAL_UART_Receive_IT+0x42>
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	2200      	movs	r2, #0
 8005360:	631a      	str	r2, [r3, #48]	@ 0x30
 8005362:	88fb      	ldrh	r3, [r7, #6]
 8005364:	461a      	mov	r2, r3
 8005366:	68b9      	ldr	r1, [r7, #8]
 8005368:	68f8      	ldr	r0, [r7, #12]
 800536a:	f000 fb12 	bl	8005992 <UART_Start_Receive_IT>
 800536e:	4603      	mov	r3, r0
 8005370:	e000      	b.n	8005374 <HAL_UART_Receive_IT+0x42>
 8005372:	2302      	movs	r3, #2
 8005374:	4618      	mov	r0, r3
 8005376:	3710      	adds	r7, #16
 8005378:	46bd      	mov	sp, r7
 800537a:	bd80      	pop	{r7, pc}

0800537c <HAL_UART_IRQHandler>:
 800537c:	b580      	push	{r7, lr}
 800537e:	b0ba      	sub	sp, #232	@ 0xe8
 8005380:	af00      	add	r7, sp, #0
 8005382:	6078      	str	r0, [r7, #4]
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	68db      	ldr	r3, [r3, #12]
 8005394:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	695b      	ldr	r3, [r3, #20]
 800539e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80053a2:	2300      	movs	r3, #0
 80053a4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80053a8:	2300      	movs	r3, #0
 80053aa:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80053ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053b2:	f003 030f 	and.w	r3, r3, #15
 80053b6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80053ba:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80053be:	2b00      	cmp	r3, #0
 80053c0:	d10f      	bne.n	80053e2 <HAL_UART_IRQHandler+0x66>
 80053c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053c6:	f003 0320 	and.w	r3, r3, #32
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	d009      	beq.n	80053e2 <HAL_UART_IRQHandler+0x66>
 80053ce:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053d2:	f003 0320 	and.w	r3, r3, #32
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d003      	beq.n	80053e2 <HAL_UART_IRQHandler+0x66>
 80053da:	6878      	ldr	r0, [r7, #4]
 80053dc:	f000 fbf2 	bl	8005bc4 <UART_Receive_IT>
 80053e0:	e25b      	b.n	800589a <HAL_UART_IRQHandler+0x51e>
 80053e2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80053e6:	2b00      	cmp	r3, #0
 80053e8:	f000 80de 	beq.w	80055a8 <HAL_UART_IRQHandler+0x22c>
 80053ec:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80053f0:	f003 0301 	and.w	r3, r3, #1
 80053f4:	2b00      	cmp	r3, #0
 80053f6:	d106      	bne.n	8005406 <HAL_UART_IRQHandler+0x8a>
 80053f8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053fc:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005400:	2b00      	cmp	r3, #0
 8005402:	f000 80d1 	beq.w	80055a8 <HAL_UART_IRQHandler+0x22c>
 8005406:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800540a:	f003 0301 	and.w	r3, r3, #1
 800540e:	2b00      	cmp	r3, #0
 8005410:	d00b      	beq.n	800542a <HAL_UART_IRQHandler+0xae>
 8005412:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005416:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800541a:	2b00      	cmp	r3, #0
 800541c:	d005      	beq.n	800542a <HAL_UART_IRQHandler+0xae>
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005422:	f043 0201 	orr.w	r2, r3, #1
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	645a      	str	r2, [r3, #68]	@ 0x44
 800542a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800542e:	f003 0304 	and.w	r3, r3, #4
 8005432:	2b00      	cmp	r3, #0
 8005434:	d00b      	beq.n	800544e <HAL_UART_IRQHandler+0xd2>
 8005436:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800543a:	f003 0301 	and.w	r3, r3, #1
 800543e:	2b00      	cmp	r3, #0
 8005440:	d005      	beq.n	800544e <HAL_UART_IRQHandler+0xd2>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005446:	f043 0202 	orr.w	r2, r3, #2
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	645a      	str	r2, [r3, #68]	@ 0x44
 800544e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005452:	f003 0302 	and.w	r3, r3, #2
 8005456:	2b00      	cmp	r3, #0
 8005458:	d00b      	beq.n	8005472 <HAL_UART_IRQHandler+0xf6>
 800545a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800545e:	f003 0301 	and.w	r3, r3, #1
 8005462:	2b00      	cmp	r3, #0
 8005464:	d005      	beq.n	8005472 <HAL_UART_IRQHandler+0xf6>
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800546a:	f043 0204 	orr.w	r2, r3, #4
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	645a      	str	r2, [r3, #68]	@ 0x44
 8005472:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005476:	f003 0308 	and.w	r3, r3, #8
 800547a:	2b00      	cmp	r3, #0
 800547c:	d011      	beq.n	80054a2 <HAL_UART_IRQHandler+0x126>
 800547e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005482:	f003 0320 	and.w	r3, r3, #32
 8005486:	2b00      	cmp	r3, #0
 8005488:	d105      	bne.n	8005496 <HAL_UART_IRQHandler+0x11a>
 800548a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800548e:	f003 0301 	and.w	r3, r3, #1
 8005492:	2b00      	cmp	r3, #0
 8005494:	d005      	beq.n	80054a2 <HAL_UART_IRQHandler+0x126>
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800549a:	f043 0208 	orr.w	r2, r3, #8
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80054a6:	2b00      	cmp	r3, #0
 80054a8:	f000 81f2 	beq.w	8005890 <HAL_UART_IRQHandler+0x514>
 80054ac:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80054b0:	f003 0320 	and.w	r3, r3, #32
 80054b4:	2b00      	cmp	r3, #0
 80054b6:	d008      	beq.n	80054ca <HAL_UART_IRQHandler+0x14e>
 80054b8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80054bc:	f003 0320 	and.w	r3, r3, #32
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d002      	beq.n	80054ca <HAL_UART_IRQHandler+0x14e>
 80054c4:	6878      	ldr	r0, [r7, #4]
 80054c6:	f000 fb7d 	bl	8005bc4 <UART_Receive_IT>
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	695b      	ldr	r3, [r3, #20]
 80054d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80054d4:	2b40      	cmp	r3, #64	@ 0x40
 80054d6:	bf0c      	ite	eq
 80054d8:	2301      	moveq	r3, #1
 80054da:	2300      	movne	r3, #0
 80054dc:	b2db      	uxtb	r3, r3
 80054de:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80054e6:	f003 0308 	and.w	r3, r3, #8
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d103      	bne.n	80054f6 <HAL_UART_IRQHandler+0x17a>
 80054ee:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80054f2:	2b00      	cmp	r3, #0
 80054f4:	d04f      	beq.n	8005596 <HAL_UART_IRQHandler+0x21a>
 80054f6:	6878      	ldr	r0, [r7, #4]
 80054f8:	f000 fa85 	bl	8005a06 <UART_EndRxTransfer>
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	695b      	ldr	r3, [r3, #20]
 8005502:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005506:	2b40      	cmp	r3, #64	@ 0x40
 8005508:	d141      	bne.n	800558e <HAL_UART_IRQHandler+0x212>
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	3314      	adds	r3, #20
 8005510:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005514:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005518:	e853 3f00 	ldrex	r3, [r3]
 800551c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005520:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005524:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005528:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	3314      	adds	r3, #20
 8005532:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005536:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800553a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800553e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005542:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005546:	e841 2300 	strex	r3, r2, [r1]
 800554a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800554e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005552:	2b00      	cmp	r3, #0
 8005554:	d1d9      	bne.n	800550a <HAL_UART_IRQHandler+0x18e>
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800555a:	2b00      	cmp	r3, #0
 800555c:	d013      	beq.n	8005586 <HAL_UART_IRQHandler+0x20a>
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005562:	4a7e      	ldr	r2, [pc, #504]	@ (800575c <HAL_UART_IRQHandler+0x3e0>)
 8005564:	651a      	str	r2, [r3, #80]	@ 0x50
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800556a:	4618      	mov	r0, r3
 800556c:	f7fd f8b1 	bl	80026d2 <HAL_DMA_Abort_IT>
 8005570:	4603      	mov	r3, r0
 8005572:	2b00      	cmp	r3, #0
 8005574:	d016      	beq.n	80055a4 <HAL_UART_IRQHandler+0x228>
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800557a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800557c:	687a      	ldr	r2, [r7, #4]
 800557e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005580:	4610      	mov	r0, r2
 8005582:	4798      	blx	r3
 8005584:	e00e      	b.n	80055a4 <HAL_UART_IRQHandler+0x228>
 8005586:	6878      	ldr	r0, [r7, #4]
 8005588:	f000 f994 	bl	80058b4 <HAL_UART_ErrorCallback>
 800558c:	e00a      	b.n	80055a4 <HAL_UART_IRQHandler+0x228>
 800558e:	6878      	ldr	r0, [r7, #4]
 8005590:	f000 f990 	bl	80058b4 <HAL_UART_ErrorCallback>
 8005594:	e006      	b.n	80055a4 <HAL_UART_IRQHandler+0x228>
 8005596:	6878      	ldr	r0, [r7, #4]
 8005598:	f000 f98c 	bl	80058b4 <HAL_UART_ErrorCallback>
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	2200      	movs	r2, #0
 80055a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80055a2:	e175      	b.n	8005890 <HAL_UART_IRQHandler+0x514>
 80055a4:	bf00      	nop
 80055a6:	e173      	b.n	8005890 <HAL_UART_IRQHandler+0x514>
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80055ac:	2b01      	cmp	r3, #1
 80055ae:	f040 814f 	bne.w	8005850 <HAL_UART_IRQHandler+0x4d4>
 80055b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80055b6:	f003 0310 	and.w	r3, r3, #16
 80055ba:	2b00      	cmp	r3, #0
 80055bc:	f000 8148 	beq.w	8005850 <HAL_UART_IRQHandler+0x4d4>
 80055c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80055c4:	f003 0310 	and.w	r3, r3, #16
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	f000 8141 	beq.w	8005850 <HAL_UART_IRQHandler+0x4d4>
 80055ce:	2300      	movs	r3, #0
 80055d0:	60bb      	str	r3, [r7, #8]
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	681b      	ldr	r3, [r3, #0]
 80055d8:	60bb      	str	r3, [r7, #8]
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	681b      	ldr	r3, [r3, #0]
 80055de:	685b      	ldr	r3, [r3, #4]
 80055e0:	60bb      	str	r3, [r7, #8]
 80055e2:	68bb      	ldr	r3, [r7, #8]
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	695b      	ldr	r3, [r3, #20]
 80055ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80055ee:	2b40      	cmp	r3, #64	@ 0x40
 80055f0:	f040 80b6 	bne.w	8005760 <HAL_UART_IRQHandler+0x3e4>
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	685b      	ldr	r3, [r3, #4]
 80055fc:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005600:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8005604:	2b00      	cmp	r3, #0
 8005606:	f000 8145 	beq.w	8005894 <HAL_UART_IRQHandler+0x518>
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800560e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005612:	429a      	cmp	r2, r3
 8005614:	f080 813e 	bcs.w	8005894 <HAL_UART_IRQHandler+0x518>
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800561e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005624:	69db      	ldr	r3, [r3, #28]
 8005626:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800562a:	f000 8088 	beq.w	800573e <HAL_UART_IRQHandler+0x3c2>
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	681b      	ldr	r3, [r3, #0]
 8005632:	330c      	adds	r3, #12
 8005634:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005638:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800563c:	e853 3f00 	ldrex	r3, [r3]
 8005640:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005644:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005648:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800564c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	330c      	adds	r3, #12
 8005656:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800565a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800565e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005662:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8005666:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800566a:	e841 2300 	strex	r3, r2, [r1]
 800566e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005672:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005676:	2b00      	cmp	r3, #0
 8005678:	d1d9      	bne.n	800562e <HAL_UART_IRQHandler+0x2b2>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	3314      	adds	r3, #20
 8005680:	677b      	str	r3, [r7, #116]	@ 0x74
 8005682:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005684:	e853 3f00 	ldrex	r3, [r3]
 8005688:	673b      	str	r3, [r7, #112]	@ 0x70
 800568a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800568c:	f023 0301 	bic.w	r3, r3, #1
 8005690:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	3314      	adds	r3, #20
 800569a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800569e:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80056a2:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80056a4:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80056a6:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80056aa:	e841 2300 	strex	r3, r2, [r1]
 80056ae:	67bb      	str	r3, [r7, #120]	@ 0x78
 80056b0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80056b2:	2b00      	cmp	r3, #0
 80056b4:	d1e1      	bne.n	800567a <HAL_UART_IRQHandler+0x2fe>
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	3314      	adds	r3, #20
 80056bc:	663b      	str	r3, [r7, #96]	@ 0x60
 80056be:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80056c0:	e853 3f00 	ldrex	r3, [r3]
 80056c4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80056c6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80056c8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80056cc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	3314      	adds	r3, #20
 80056d6:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80056da:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80056dc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80056de:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80056e0:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80056e2:	e841 2300 	strex	r3, r2, [r1]
 80056e6:	667b      	str	r3, [r7, #100]	@ 0x64
 80056e8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	d1e3      	bne.n	80056b6 <HAL_UART_IRQHandler+0x33a>
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	2220      	movs	r2, #32
 80056f2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	2200      	movs	r2, #0
 80056fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	330c      	adds	r3, #12
 8005702:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005704:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005706:	e853 3f00 	ldrex	r3, [r3]
 800570a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800570c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800570e:	f023 0310 	bic.w	r3, r3, #16
 8005712:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	330c      	adds	r3, #12
 800571c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005720:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005722:	657b      	str	r3, [r7, #84]	@ 0x54
 8005724:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005726:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005728:	e841 2300 	strex	r3, r2, [r1]
 800572c:	653b      	str	r3, [r7, #80]	@ 0x50
 800572e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005730:	2b00      	cmp	r3, #0
 8005732:	d1e3      	bne.n	80056fc <HAL_UART_IRQHandler+0x380>
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005738:	4618      	mov	r0, r3
 800573a:	f7fc ff5a 	bl	80025f2 <HAL_DMA_Abort>
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	2202      	movs	r2, #2
 8005742:	635a      	str	r2, [r3, #52]	@ 0x34
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800574c:	b29b      	uxth	r3, r3
 800574e:	1ad3      	subs	r3, r2, r3
 8005750:	b29b      	uxth	r3, r3
 8005752:	4619      	mov	r1, r3
 8005754:	6878      	ldr	r0, [r7, #4]
 8005756:	f000 f8b7 	bl	80058c8 <HAL_UARTEx_RxEventCallback>
 800575a:	e09b      	b.n	8005894 <HAL_UART_IRQHandler+0x518>
 800575c:	08005acd 	.word	0x08005acd
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005768:	b29b      	uxth	r3, r3
 800576a:	1ad3      	subs	r3, r2, r3
 800576c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005774:	b29b      	uxth	r3, r3
 8005776:	2b00      	cmp	r3, #0
 8005778:	f000 808e 	beq.w	8005898 <HAL_UART_IRQHandler+0x51c>
 800577c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005780:	2b00      	cmp	r3, #0
 8005782:	f000 8089 	beq.w	8005898 <HAL_UART_IRQHandler+0x51c>
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	330c      	adds	r3, #12
 800578c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800578e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005790:	e853 3f00 	ldrex	r3, [r3]
 8005794:	637b      	str	r3, [r7, #52]	@ 0x34
 8005796:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005798:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800579c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	330c      	adds	r3, #12
 80057a6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80057aa:	647a      	str	r2, [r7, #68]	@ 0x44
 80057ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80057ae:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80057b0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80057b2:	e841 2300 	strex	r3, r2, [r1]
 80057b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80057b8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d1e3      	bne.n	8005786 <HAL_UART_IRQHandler+0x40a>
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	3314      	adds	r3, #20
 80057c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80057c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057c8:	e853 3f00 	ldrex	r3, [r3]
 80057cc:	623b      	str	r3, [r7, #32]
 80057ce:	6a3b      	ldr	r3, [r7, #32]
 80057d0:	f023 0301 	bic.w	r3, r3, #1
 80057d4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	681b      	ldr	r3, [r3, #0]
 80057dc:	3314      	adds	r3, #20
 80057de:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80057e2:	633a      	str	r2, [r7, #48]	@ 0x30
 80057e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80057e6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80057e8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80057ea:	e841 2300 	strex	r3, r2, [r1]
 80057ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 80057f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d1e3      	bne.n	80057be <HAL_UART_IRQHandler+0x442>
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	2220      	movs	r2, #32
 80057fa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	2200      	movs	r2, #0
 8005802:	631a      	str	r2, [r3, #48]	@ 0x30
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	681b      	ldr	r3, [r3, #0]
 8005808:	330c      	adds	r3, #12
 800580a:	613b      	str	r3, [r7, #16]
 800580c:	693b      	ldr	r3, [r7, #16]
 800580e:	e853 3f00 	ldrex	r3, [r3]
 8005812:	60fb      	str	r3, [r7, #12]
 8005814:	68fb      	ldr	r3, [r7, #12]
 8005816:	f023 0310 	bic.w	r3, r3, #16
 800581a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	330c      	adds	r3, #12
 8005824:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005828:	61fa      	str	r2, [r7, #28]
 800582a:	61bb      	str	r3, [r7, #24]
 800582c:	69b9      	ldr	r1, [r7, #24]
 800582e:	69fa      	ldr	r2, [r7, #28]
 8005830:	e841 2300 	strex	r3, r2, [r1]
 8005834:	617b      	str	r3, [r7, #20]
 8005836:	697b      	ldr	r3, [r7, #20]
 8005838:	2b00      	cmp	r3, #0
 800583a:	d1e3      	bne.n	8005804 <HAL_UART_IRQHandler+0x488>
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	2202      	movs	r2, #2
 8005840:	635a      	str	r2, [r3, #52]	@ 0x34
 8005842:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005846:	4619      	mov	r1, r3
 8005848:	6878      	ldr	r0, [r7, #4]
 800584a:	f000 f83d 	bl	80058c8 <HAL_UARTEx_RxEventCallback>
 800584e:	e023      	b.n	8005898 <HAL_UART_IRQHandler+0x51c>
 8005850:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005854:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005858:	2b00      	cmp	r3, #0
 800585a:	d009      	beq.n	8005870 <HAL_UART_IRQHandler+0x4f4>
 800585c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005860:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005864:	2b00      	cmp	r3, #0
 8005866:	d003      	beq.n	8005870 <HAL_UART_IRQHandler+0x4f4>
 8005868:	6878      	ldr	r0, [r7, #4]
 800586a:	f000 f943 	bl	8005af4 <UART_Transmit_IT>
 800586e:	e014      	b.n	800589a <HAL_UART_IRQHandler+0x51e>
 8005870:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005874:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005878:	2b00      	cmp	r3, #0
 800587a:	d00e      	beq.n	800589a <HAL_UART_IRQHandler+0x51e>
 800587c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005880:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005884:	2b00      	cmp	r3, #0
 8005886:	d008      	beq.n	800589a <HAL_UART_IRQHandler+0x51e>
 8005888:	6878      	ldr	r0, [r7, #4]
 800588a:	f000 f983 	bl	8005b94 <UART_EndTransmit_IT>
 800588e:	e004      	b.n	800589a <HAL_UART_IRQHandler+0x51e>
 8005890:	bf00      	nop
 8005892:	e002      	b.n	800589a <HAL_UART_IRQHandler+0x51e>
 8005894:	bf00      	nop
 8005896:	e000      	b.n	800589a <HAL_UART_IRQHandler+0x51e>
 8005898:	bf00      	nop
 800589a:	37e8      	adds	r7, #232	@ 0xe8
 800589c:	46bd      	mov	sp, r7
 800589e:	bd80      	pop	{r7, pc}

080058a0 <HAL_UART_TxCpltCallback>:
 80058a0:	b480      	push	{r7}
 80058a2:	b083      	sub	sp, #12
 80058a4:	af00      	add	r7, sp, #0
 80058a6:	6078      	str	r0, [r7, #4]
 80058a8:	bf00      	nop
 80058aa:	370c      	adds	r7, #12
 80058ac:	46bd      	mov	sp, r7
 80058ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058b2:	4770      	bx	lr

080058b4 <HAL_UART_ErrorCallback>:
 80058b4:	b480      	push	{r7}
 80058b6:	b083      	sub	sp, #12
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	6078      	str	r0, [r7, #4]
 80058bc:	bf00      	nop
 80058be:	370c      	adds	r7, #12
 80058c0:	46bd      	mov	sp, r7
 80058c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c6:	4770      	bx	lr

080058c8 <HAL_UARTEx_RxEventCallback>:
 80058c8:	b480      	push	{r7}
 80058ca:	b083      	sub	sp, #12
 80058cc:	af00      	add	r7, sp, #0
 80058ce:	6078      	str	r0, [r7, #4]
 80058d0:	460b      	mov	r3, r1
 80058d2:	807b      	strh	r3, [r7, #2]
 80058d4:	bf00      	nop
 80058d6:	370c      	adds	r7, #12
 80058d8:	46bd      	mov	sp, r7
 80058da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058de:	4770      	bx	lr

080058e0 <UART_WaitOnFlagUntilTimeout>:
 80058e0:	b580      	push	{r7, lr}
 80058e2:	b086      	sub	sp, #24
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	60f8      	str	r0, [r7, #12]
 80058e8:	60b9      	str	r1, [r7, #8]
 80058ea:	603b      	str	r3, [r7, #0]
 80058ec:	4613      	mov	r3, r2
 80058ee:	71fb      	strb	r3, [r7, #7]
 80058f0:	e03b      	b.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 80058f2:	6a3b      	ldr	r3, [r7, #32]
 80058f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80058f8:	d037      	beq.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 80058fa:	f7fc fd39 	bl	8002370 <HAL_GetTick>
 80058fe:	4602      	mov	r2, r0
 8005900:	683b      	ldr	r3, [r7, #0]
 8005902:	1ad3      	subs	r3, r2, r3
 8005904:	6a3a      	ldr	r2, [r7, #32]
 8005906:	429a      	cmp	r2, r3
 8005908:	d302      	bcc.n	8005910 <UART_WaitOnFlagUntilTimeout+0x30>
 800590a:	6a3b      	ldr	r3, [r7, #32]
 800590c:	2b00      	cmp	r3, #0
 800590e:	d101      	bne.n	8005914 <UART_WaitOnFlagUntilTimeout+0x34>
 8005910:	2303      	movs	r3, #3
 8005912:	e03a      	b.n	800598a <UART_WaitOnFlagUntilTimeout+0xaa>
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	68db      	ldr	r3, [r3, #12]
 800591a:	f003 0304 	and.w	r3, r3, #4
 800591e:	2b00      	cmp	r3, #0
 8005920:	d023      	beq.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005922:	68bb      	ldr	r3, [r7, #8]
 8005924:	2b80      	cmp	r3, #128	@ 0x80
 8005926:	d020      	beq.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005928:	68bb      	ldr	r3, [r7, #8]
 800592a:	2b40      	cmp	r3, #64	@ 0x40
 800592c:	d01d      	beq.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 800592e:	68fb      	ldr	r3, [r7, #12]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	f003 0308 	and.w	r3, r3, #8
 8005938:	2b08      	cmp	r3, #8
 800593a:	d116      	bne.n	800596a <UART_WaitOnFlagUntilTimeout+0x8a>
 800593c:	2300      	movs	r3, #0
 800593e:	617b      	str	r3, [r7, #20]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	681b      	ldr	r3, [r3, #0]
 8005946:	617b      	str	r3, [r7, #20]
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	685b      	ldr	r3, [r3, #4]
 800594e:	617b      	str	r3, [r7, #20]
 8005950:	697b      	ldr	r3, [r7, #20]
 8005952:	68f8      	ldr	r0, [r7, #12]
 8005954:	f000 f857 	bl	8005a06 <UART_EndRxTransfer>
 8005958:	68fb      	ldr	r3, [r7, #12]
 800595a:	2208      	movs	r2, #8
 800595c:	645a      	str	r2, [r3, #68]	@ 0x44
 800595e:	68fb      	ldr	r3, [r7, #12]
 8005960:	2200      	movs	r2, #0
 8005962:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005966:	2301      	movs	r3, #1
 8005968:	e00f      	b.n	800598a <UART_WaitOnFlagUntilTimeout+0xaa>
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	681a      	ldr	r2, [r3, #0]
 8005970:	68bb      	ldr	r3, [r7, #8]
 8005972:	4013      	ands	r3, r2
 8005974:	68ba      	ldr	r2, [r7, #8]
 8005976:	429a      	cmp	r2, r3
 8005978:	bf0c      	ite	eq
 800597a:	2301      	moveq	r3, #1
 800597c:	2300      	movne	r3, #0
 800597e:	b2db      	uxtb	r3, r3
 8005980:	461a      	mov	r2, r3
 8005982:	79fb      	ldrb	r3, [r7, #7]
 8005984:	429a      	cmp	r2, r3
 8005986:	d0b4      	beq.n	80058f2 <UART_WaitOnFlagUntilTimeout+0x12>
 8005988:	2300      	movs	r3, #0
 800598a:	4618      	mov	r0, r3
 800598c:	3718      	adds	r7, #24
 800598e:	46bd      	mov	sp, r7
 8005990:	bd80      	pop	{r7, pc}

08005992 <UART_Start_Receive_IT>:
 8005992:	b480      	push	{r7}
 8005994:	b085      	sub	sp, #20
 8005996:	af00      	add	r7, sp, #0
 8005998:	60f8      	str	r0, [r7, #12]
 800599a:	60b9      	str	r1, [r7, #8]
 800599c:	4613      	mov	r3, r2
 800599e:	80fb      	strh	r3, [r7, #6]
 80059a0:	68fb      	ldr	r3, [r7, #12]
 80059a2:	68ba      	ldr	r2, [r7, #8]
 80059a4:	629a      	str	r2, [r3, #40]	@ 0x28
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	88fa      	ldrh	r2, [r7, #6]
 80059aa:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80059ac:	68fb      	ldr	r3, [r7, #12]
 80059ae:	88fa      	ldrh	r2, [r7, #6]
 80059b0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80059b2:	68fb      	ldr	r3, [r7, #12]
 80059b4:	2200      	movs	r2, #0
 80059b6:	645a      	str	r2, [r3, #68]	@ 0x44
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	2222      	movs	r2, #34	@ 0x22
 80059bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	691b      	ldr	r3, [r3, #16]
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	d007      	beq.n	80059d8 <UART_Start_Receive_IT+0x46>
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	68da      	ldr	r2, [r3, #12]
 80059ce:	68fb      	ldr	r3, [r7, #12]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80059d6:	60da      	str	r2, [r3, #12]
 80059d8:	68fb      	ldr	r3, [r7, #12]
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	695a      	ldr	r2, [r3, #20]
 80059de:	68fb      	ldr	r3, [r7, #12]
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	f042 0201 	orr.w	r2, r2, #1
 80059e6:	615a      	str	r2, [r3, #20]
 80059e8:	68fb      	ldr	r3, [r7, #12]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	68da      	ldr	r2, [r3, #12]
 80059ee:	68fb      	ldr	r3, [r7, #12]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	f042 0220 	orr.w	r2, r2, #32
 80059f6:	60da      	str	r2, [r3, #12]
 80059f8:	2300      	movs	r3, #0
 80059fa:	4618      	mov	r0, r3
 80059fc:	3714      	adds	r7, #20
 80059fe:	46bd      	mov	sp, r7
 8005a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a04:	4770      	bx	lr

08005a06 <UART_EndRxTransfer>:
 8005a06:	b480      	push	{r7}
 8005a08:	b095      	sub	sp, #84	@ 0x54
 8005a0a:	af00      	add	r7, sp, #0
 8005a0c:	6078      	str	r0, [r7, #4]
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	330c      	adds	r3, #12
 8005a14:	637b      	str	r3, [r7, #52]	@ 0x34
 8005a16:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005a18:	e853 3f00 	ldrex	r3, [r3]
 8005a1c:	633b      	str	r3, [r7, #48]	@ 0x30
 8005a1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005a20:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005a24:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	330c      	adds	r3, #12
 8005a2c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005a2e:	643a      	str	r2, [r7, #64]	@ 0x40
 8005a30:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005a32:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005a34:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005a36:	e841 2300 	strex	r3, r2, [r1]
 8005a3a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005a3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	d1e5      	bne.n	8005a0e <UART_EndRxTransfer+0x8>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	3314      	adds	r3, #20
 8005a48:	623b      	str	r3, [r7, #32]
 8005a4a:	6a3b      	ldr	r3, [r7, #32]
 8005a4c:	e853 3f00 	ldrex	r3, [r3]
 8005a50:	61fb      	str	r3, [r7, #28]
 8005a52:	69fb      	ldr	r3, [r7, #28]
 8005a54:	f023 0301 	bic.w	r3, r3, #1
 8005a58:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	3314      	adds	r3, #20
 8005a60:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005a62:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005a64:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005a66:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005a68:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005a6a:	e841 2300 	strex	r3, r2, [r1]
 8005a6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005a72:	2b00      	cmp	r3, #0
 8005a74:	d1e5      	bne.n	8005a42 <UART_EndRxTransfer+0x3c>
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a7a:	2b01      	cmp	r3, #1
 8005a7c:	d119      	bne.n	8005ab2 <UART_EndRxTransfer+0xac>
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	330c      	adds	r3, #12
 8005a84:	60fb      	str	r3, [r7, #12]
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	e853 3f00 	ldrex	r3, [r3]
 8005a8c:	60bb      	str	r3, [r7, #8]
 8005a8e:	68bb      	ldr	r3, [r7, #8]
 8005a90:	f023 0310 	bic.w	r3, r3, #16
 8005a94:	647b      	str	r3, [r7, #68]	@ 0x44
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	330c      	adds	r3, #12
 8005a9c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005a9e:	61ba      	str	r2, [r7, #24]
 8005aa0:	617b      	str	r3, [r7, #20]
 8005aa2:	6979      	ldr	r1, [r7, #20]
 8005aa4:	69ba      	ldr	r2, [r7, #24]
 8005aa6:	e841 2300 	strex	r3, r2, [r1]
 8005aaa:	613b      	str	r3, [r7, #16]
 8005aac:	693b      	ldr	r3, [r7, #16]
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d1e5      	bne.n	8005a7e <UART_EndRxTransfer+0x78>
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	2220      	movs	r2, #32
 8005ab6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	2200      	movs	r2, #0
 8005abe:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ac0:	bf00      	nop
 8005ac2:	3754      	adds	r7, #84	@ 0x54
 8005ac4:	46bd      	mov	sp, r7
 8005ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aca:	4770      	bx	lr

08005acc <UART_DMAAbortOnError>:
 8005acc:	b580      	push	{r7, lr}
 8005ace:	b084      	sub	sp, #16
 8005ad0:	af00      	add	r7, sp, #0
 8005ad2:	6078      	str	r0, [r7, #4]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005ad8:	60fb      	str	r3, [r7, #12]
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	2200      	movs	r2, #0
 8005ade:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005ae0:	68fb      	ldr	r3, [r7, #12]
 8005ae2:	2200      	movs	r2, #0
 8005ae4:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005ae6:	68f8      	ldr	r0, [r7, #12]
 8005ae8:	f7ff fee4 	bl	80058b4 <HAL_UART_ErrorCallback>
 8005aec:	bf00      	nop
 8005aee:	3710      	adds	r7, #16
 8005af0:	46bd      	mov	sp, r7
 8005af2:	bd80      	pop	{r7, pc}

08005af4 <UART_Transmit_IT>:
 8005af4:	b480      	push	{r7}
 8005af6:	b085      	sub	sp, #20
 8005af8:	af00      	add	r7, sp, #0
 8005afa:	6078      	str	r0, [r7, #4]
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005b02:	b2db      	uxtb	r3, r3
 8005b04:	2b21      	cmp	r3, #33	@ 0x21
 8005b06:	d13e      	bne.n	8005b86 <UART_Transmit_IT+0x92>
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	689b      	ldr	r3, [r3, #8]
 8005b0c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005b10:	d114      	bne.n	8005b3c <UART_Transmit_IT+0x48>
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	691b      	ldr	r3, [r3, #16]
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d110      	bne.n	8005b3c <UART_Transmit_IT+0x48>
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	6a1b      	ldr	r3, [r3, #32]
 8005b1e:	60fb      	str	r3, [r7, #12]
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	881b      	ldrh	r3, [r3, #0]
 8005b24:	461a      	mov	r2, r3
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	681b      	ldr	r3, [r3, #0]
 8005b2a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005b2e:	605a      	str	r2, [r3, #4]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	6a1b      	ldr	r3, [r3, #32]
 8005b34:	1c9a      	adds	r2, r3, #2
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	621a      	str	r2, [r3, #32]
 8005b3a:	e008      	b.n	8005b4e <UART_Transmit_IT+0x5a>
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	6a1b      	ldr	r3, [r3, #32]
 8005b40:	1c59      	adds	r1, r3, #1
 8005b42:	687a      	ldr	r2, [r7, #4]
 8005b44:	6211      	str	r1, [r2, #32]
 8005b46:	781a      	ldrb	r2, [r3, #0]
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	605a      	str	r2, [r3, #4]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005b52:	b29b      	uxth	r3, r3
 8005b54:	3b01      	subs	r3, #1
 8005b56:	b29b      	uxth	r3, r3
 8005b58:	687a      	ldr	r2, [r7, #4]
 8005b5a:	4619      	mov	r1, r3
 8005b5c:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	d10f      	bne.n	8005b82 <UART_Transmit_IT+0x8e>
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	68da      	ldr	r2, [r3, #12]
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005b70:	60da      	str	r2, [r3, #12]
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	68da      	ldr	r2, [r3, #12]
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005b80:	60da      	str	r2, [r3, #12]
 8005b82:	2300      	movs	r3, #0
 8005b84:	e000      	b.n	8005b88 <UART_Transmit_IT+0x94>
 8005b86:	2302      	movs	r3, #2
 8005b88:	4618      	mov	r0, r3
 8005b8a:	3714      	adds	r7, #20
 8005b8c:	46bd      	mov	sp, r7
 8005b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b92:	4770      	bx	lr

08005b94 <UART_EndTransmit_IT>:
 8005b94:	b580      	push	{r7, lr}
 8005b96:	b082      	sub	sp, #8
 8005b98:	af00      	add	r7, sp, #0
 8005b9a:	6078      	str	r0, [r7, #4]
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	68da      	ldr	r2, [r3, #12]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005baa:	60da      	str	r2, [r3, #12]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	2220      	movs	r2, #32
 8005bb0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005bb4:	6878      	ldr	r0, [r7, #4]
 8005bb6:	f7ff fe73 	bl	80058a0 <HAL_UART_TxCpltCallback>
 8005bba:	2300      	movs	r3, #0
 8005bbc:	4618      	mov	r0, r3
 8005bbe:	3708      	adds	r7, #8
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	bd80      	pop	{r7, pc}

08005bc4 <UART_Receive_IT>:
 8005bc4:	b580      	push	{r7, lr}
 8005bc6:	b08c      	sub	sp, #48	@ 0x30
 8005bc8:	af00      	add	r7, sp, #0
 8005bca:	6078      	str	r0, [r7, #4]
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005bd2:	b2db      	uxtb	r3, r3
 8005bd4:	2b22      	cmp	r3, #34	@ 0x22
 8005bd6:	f040 80ae 	bne.w	8005d36 <UART_Receive_IT+0x172>
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	689b      	ldr	r3, [r3, #8]
 8005bde:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005be2:	d117      	bne.n	8005c14 <UART_Receive_IT+0x50>
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	691b      	ldr	r3, [r3, #16]
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	d113      	bne.n	8005c14 <UART_Receive_IT+0x50>
 8005bec:	2300      	movs	r3, #0
 8005bee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bf4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	685b      	ldr	r3, [r3, #4]
 8005bfc:	b29b      	uxth	r3, r3
 8005bfe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005c02:	b29a      	uxth	r2, r3
 8005c04:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005c06:	801a      	strh	r2, [r3, #0]
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c0c:	1c9a      	adds	r2, r3, #2
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	629a      	str	r2, [r3, #40]	@ 0x28
 8005c12:	e026      	b.n	8005c62 <UART_Receive_IT+0x9e>
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c18:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005c1a:	2300      	movs	r3, #0
 8005c1c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	689b      	ldr	r3, [r3, #8]
 8005c22:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c26:	d007      	beq.n	8005c38 <UART_Receive_IT+0x74>
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	689b      	ldr	r3, [r3, #8]
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d10a      	bne.n	8005c46 <UART_Receive_IT+0x82>
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	691b      	ldr	r3, [r3, #16]
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	d106      	bne.n	8005c46 <UART_Receive_IT+0x82>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	685b      	ldr	r3, [r3, #4]
 8005c3e:	b2da      	uxtb	r2, r3
 8005c40:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005c42:	701a      	strb	r2, [r3, #0]
 8005c44:	e008      	b.n	8005c58 <UART_Receive_IT+0x94>
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	685b      	ldr	r3, [r3, #4]
 8005c4c:	b2db      	uxtb	r3, r3
 8005c4e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005c52:	b2da      	uxtb	r2, r3
 8005c54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005c56:	701a      	strb	r2, [r3, #0]
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c5c:	1c5a      	adds	r2, r3, #1
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	629a      	str	r2, [r3, #40]	@ 0x28
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005c66:	b29b      	uxth	r3, r3
 8005c68:	3b01      	subs	r3, #1
 8005c6a:	b29b      	uxth	r3, r3
 8005c6c:	687a      	ldr	r2, [r7, #4]
 8005c6e:	4619      	mov	r1, r3
 8005c70:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005c72:	2b00      	cmp	r3, #0
 8005c74:	d15d      	bne.n	8005d32 <UART_Receive_IT+0x16e>
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	68da      	ldr	r2, [r3, #12]
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	f022 0220 	bic.w	r2, r2, #32
 8005c84:	60da      	str	r2, [r3, #12]
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	68da      	ldr	r2, [r3, #12]
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	681b      	ldr	r3, [r3, #0]
 8005c90:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005c94:	60da      	str	r2, [r3, #12]
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	695a      	ldr	r2, [r3, #20]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	f022 0201 	bic.w	r2, r2, #1
 8005ca4:	615a      	str	r2, [r3, #20]
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	2220      	movs	r2, #32
 8005caa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	2200      	movs	r2, #0
 8005cb2:	635a      	str	r2, [r3, #52]	@ 0x34
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005cb8:	2b01      	cmp	r3, #1
 8005cba:	d135      	bne.n	8005d28 <UART_Receive_IT+0x164>
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	2200      	movs	r2, #0
 8005cc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	330c      	adds	r3, #12
 8005cc8:	617b      	str	r3, [r7, #20]
 8005cca:	697b      	ldr	r3, [r7, #20]
 8005ccc:	e853 3f00 	ldrex	r3, [r3]
 8005cd0:	613b      	str	r3, [r7, #16]
 8005cd2:	693b      	ldr	r3, [r7, #16]
 8005cd4:	f023 0310 	bic.w	r3, r3, #16
 8005cd8:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	330c      	adds	r3, #12
 8005ce0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005ce2:	623a      	str	r2, [r7, #32]
 8005ce4:	61fb      	str	r3, [r7, #28]
 8005ce6:	69f9      	ldr	r1, [r7, #28]
 8005ce8:	6a3a      	ldr	r2, [r7, #32]
 8005cea:	e841 2300 	strex	r3, r2, [r1]
 8005cee:	61bb      	str	r3, [r7, #24]
 8005cf0:	69bb      	ldr	r3, [r7, #24]
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d1e5      	bne.n	8005cc2 <UART_Receive_IT+0xfe>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	681b      	ldr	r3, [r3, #0]
 8005cfc:	f003 0310 	and.w	r3, r3, #16
 8005d00:	2b10      	cmp	r3, #16
 8005d02:	d10a      	bne.n	8005d1a <UART_Receive_IT+0x156>
 8005d04:	2300      	movs	r3, #0
 8005d06:	60fb      	str	r3, [r7, #12]
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	60fb      	str	r3, [r7, #12]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	685b      	ldr	r3, [r3, #4]
 8005d16:	60fb      	str	r3, [r7, #12]
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005d1e:	4619      	mov	r1, r3
 8005d20:	6878      	ldr	r0, [r7, #4]
 8005d22:	f7ff fdd1 	bl	80058c8 <HAL_UARTEx_RxEventCallback>
 8005d26:	e002      	b.n	8005d2e <UART_Receive_IT+0x16a>
 8005d28:	6878      	ldr	r0, [r7, #4]
 8005d2a:	f7fb f8bd 	bl	8000ea8 <HAL_UART_RxCpltCallback>
 8005d2e:	2300      	movs	r3, #0
 8005d30:	e002      	b.n	8005d38 <UART_Receive_IT+0x174>
 8005d32:	2300      	movs	r3, #0
 8005d34:	e000      	b.n	8005d38 <UART_Receive_IT+0x174>
 8005d36:	2302      	movs	r3, #2
 8005d38:	4618      	mov	r0, r3
 8005d3a:	3730      	adds	r7, #48	@ 0x30
 8005d3c:	46bd      	mov	sp, r7
 8005d3e:	bd80      	pop	{r7, pc}

08005d40 <UART_SetConfig>:
 8005d40:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005d44:	b0c0      	sub	sp, #256	@ 0x100
 8005d46:	af00      	add	r7, sp, #0
 8005d48:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005d4c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	691b      	ldr	r3, [r3, #16]
 8005d54:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d5c:	68d9      	ldr	r1, [r3, #12]
 8005d5e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d62:	681a      	ldr	r2, [r3, #0]
 8005d64:	ea40 0301 	orr.w	r3, r0, r1
 8005d68:	6113      	str	r3, [r2, #16]
 8005d6a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d6e:	689a      	ldr	r2, [r3, #8]
 8005d70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d74:	691b      	ldr	r3, [r3, #16]
 8005d76:	431a      	orrs	r2, r3
 8005d78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d7c:	695b      	ldr	r3, [r3, #20]
 8005d7e:	431a      	orrs	r2, r3
 8005d80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d84:	69db      	ldr	r3, [r3, #28]
 8005d86:	4313      	orrs	r3, r2
 8005d88:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005d8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	68db      	ldr	r3, [r3, #12]
 8005d94:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005d98:	f021 010c 	bic.w	r1, r1, #12
 8005d9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005da0:	681a      	ldr	r2, [r3, #0]
 8005da2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005da6:	430b      	orrs	r3, r1
 8005da8:	60d3      	str	r3, [r2, #12]
 8005daa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005dae:	681b      	ldr	r3, [r3, #0]
 8005db0:	695b      	ldr	r3, [r3, #20]
 8005db2:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005db6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005dba:	6999      	ldr	r1, [r3, #24]
 8005dbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005dc0:	681a      	ldr	r2, [r3, #0]
 8005dc2:	ea40 0301 	orr.w	r3, r0, r1
 8005dc6:	6153      	str	r3, [r2, #20]
 8005dc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005dcc:	681a      	ldr	r2, [r3, #0]
 8005dce:	4b8f      	ldr	r3, [pc, #572]	@ (800600c <UART_SetConfig+0x2cc>)
 8005dd0:	429a      	cmp	r2, r3
 8005dd2:	d005      	beq.n	8005de0 <UART_SetConfig+0xa0>
 8005dd4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005dd8:	681a      	ldr	r2, [r3, #0]
 8005dda:	4b8d      	ldr	r3, [pc, #564]	@ (8006010 <UART_SetConfig+0x2d0>)
 8005ddc:	429a      	cmp	r2, r3
 8005dde:	d104      	bne.n	8005dea <UART_SetConfig+0xaa>
 8005de0:	f7fd fdbe 	bl	8003960 <HAL_RCC_GetPCLK2Freq>
 8005de4:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005de8:	e003      	b.n	8005df2 <UART_SetConfig+0xb2>
 8005dea:	f7fd fda5 	bl	8003938 <HAL_RCC_GetPCLK1Freq>
 8005dee:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005df2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005df6:	69db      	ldr	r3, [r3, #28]
 8005df8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005dfc:	f040 810c 	bne.w	8006018 <UART_SetConfig+0x2d8>
 8005e00:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005e04:	2200      	movs	r2, #0
 8005e06:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005e0a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005e0e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8005e12:	4622      	mov	r2, r4
 8005e14:	462b      	mov	r3, r5
 8005e16:	1891      	adds	r1, r2, r2
 8005e18:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005e1a:	415b      	adcs	r3, r3
 8005e1c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005e1e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005e22:	4621      	mov	r1, r4
 8005e24:	eb12 0801 	adds.w	r8, r2, r1
 8005e28:	4629      	mov	r1, r5
 8005e2a:	eb43 0901 	adc.w	r9, r3, r1
 8005e2e:	f04f 0200 	mov.w	r2, #0
 8005e32:	f04f 0300 	mov.w	r3, #0
 8005e36:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005e3a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005e3e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005e42:	4690      	mov	r8, r2
 8005e44:	4699      	mov	r9, r3
 8005e46:	4623      	mov	r3, r4
 8005e48:	eb18 0303 	adds.w	r3, r8, r3
 8005e4c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005e50:	462b      	mov	r3, r5
 8005e52:	eb49 0303 	adc.w	r3, r9, r3
 8005e56:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005e5a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e5e:	685b      	ldr	r3, [r3, #4]
 8005e60:	2200      	movs	r2, #0
 8005e62:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005e66:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005e6a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005e6e:	460b      	mov	r3, r1
 8005e70:	18db      	adds	r3, r3, r3
 8005e72:	653b      	str	r3, [r7, #80]	@ 0x50
 8005e74:	4613      	mov	r3, r2
 8005e76:	eb42 0303 	adc.w	r3, r2, r3
 8005e7a:	657b      	str	r3, [r7, #84]	@ 0x54
 8005e7c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005e80:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005e84:	f7fa fe98 	bl	8000bb8 <__aeabi_uldivmod>
 8005e88:	4602      	mov	r2, r0
 8005e8a:	460b      	mov	r3, r1
 8005e8c:	4b61      	ldr	r3, [pc, #388]	@ (8006014 <UART_SetConfig+0x2d4>)
 8005e8e:	fba3 2302 	umull	r2, r3, r3, r2
 8005e92:	095b      	lsrs	r3, r3, #5
 8005e94:	011c      	lsls	r4, r3, #4
 8005e96:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005e9a:	2200      	movs	r2, #0
 8005e9c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005ea0:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005ea4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005ea8:	4642      	mov	r2, r8
 8005eaa:	464b      	mov	r3, r9
 8005eac:	1891      	adds	r1, r2, r2
 8005eae:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005eb0:	415b      	adcs	r3, r3
 8005eb2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005eb4:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005eb8:	4641      	mov	r1, r8
 8005eba:	eb12 0a01 	adds.w	sl, r2, r1
 8005ebe:	4649      	mov	r1, r9
 8005ec0:	eb43 0b01 	adc.w	fp, r3, r1
 8005ec4:	f04f 0200 	mov.w	r2, #0
 8005ec8:	f04f 0300 	mov.w	r3, #0
 8005ecc:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005ed0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005ed4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005ed8:	4692      	mov	sl, r2
 8005eda:	469b      	mov	fp, r3
 8005edc:	4643      	mov	r3, r8
 8005ede:	eb1a 0303 	adds.w	r3, sl, r3
 8005ee2:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005ee6:	464b      	mov	r3, r9
 8005ee8:	eb4b 0303 	adc.w	r3, fp, r3
 8005eec:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005ef0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ef4:	685b      	ldr	r3, [r3, #4]
 8005ef6:	2200      	movs	r2, #0
 8005ef8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005efc:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8005f00:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005f04:	460b      	mov	r3, r1
 8005f06:	18db      	adds	r3, r3, r3
 8005f08:	643b      	str	r3, [r7, #64]	@ 0x40
 8005f0a:	4613      	mov	r3, r2
 8005f0c:	eb42 0303 	adc.w	r3, r2, r3
 8005f10:	647b      	str	r3, [r7, #68]	@ 0x44
 8005f12:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005f16:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8005f1a:	f7fa fe4d 	bl	8000bb8 <__aeabi_uldivmod>
 8005f1e:	4602      	mov	r2, r0
 8005f20:	460b      	mov	r3, r1
 8005f22:	4611      	mov	r1, r2
 8005f24:	4b3b      	ldr	r3, [pc, #236]	@ (8006014 <UART_SetConfig+0x2d4>)
 8005f26:	fba3 2301 	umull	r2, r3, r3, r1
 8005f2a:	095b      	lsrs	r3, r3, #5
 8005f2c:	2264      	movs	r2, #100	@ 0x64
 8005f2e:	fb02 f303 	mul.w	r3, r2, r3
 8005f32:	1acb      	subs	r3, r1, r3
 8005f34:	00db      	lsls	r3, r3, #3
 8005f36:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8005f3a:	4b36      	ldr	r3, [pc, #216]	@ (8006014 <UART_SetConfig+0x2d4>)
 8005f3c:	fba3 2302 	umull	r2, r3, r3, r2
 8005f40:	095b      	lsrs	r3, r3, #5
 8005f42:	005b      	lsls	r3, r3, #1
 8005f44:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005f48:	441c      	add	r4, r3
 8005f4a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005f4e:	2200      	movs	r2, #0
 8005f50:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005f54:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005f58:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005f5c:	4642      	mov	r2, r8
 8005f5e:	464b      	mov	r3, r9
 8005f60:	1891      	adds	r1, r2, r2
 8005f62:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005f64:	415b      	adcs	r3, r3
 8005f66:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005f68:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005f6c:	4641      	mov	r1, r8
 8005f6e:	1851      	adds	r1, r2, r1
 8005f70:	6339      	str	r1, [r7, #48]	@ 0x30
 8005f72:	4649      	mov	r1, r9
 8005f74:	414b      	adcs	r3, r1
 8005f76:	637b      	str	r3, [r7, #52]	@ 0x34
 8005f78:	f04f 0200 	mov.w	r2, #0
 8005f7c:	f04f 0300 	mov.w	r3, #0
 8005f80:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005f84:	4659      	mov	r1, fp
 8005f86:	00cb      	lsls	r3, r1, #3
 8005f88:	4651      	mov	r1, sl
 8005f8a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005f8e:	4651      	mov	r1, sl
 8005f90:	00ca      	lsls	r2, r1, #3
 8005f92:	4610      	mov	r0, r2
 8005f94:	4619      	mov	r1, r3
 8005f96:	4603      	mov	r3, r0
 8005f98:	4642      	mov	r2, r8
 8005f9a:	189b      	adds	r3, r3, r2
 8005f9c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005fa0:	464b      	mov	r3, r9
 8005fa2:	460a      	mov	r2, r1
 8005fa4:	eb42 0303 	adc.w	r3, r2, r3
 8005fa8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005fac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fb0:	685b      	ldr	r3, [r3, #4]
 8005fb2:	2200      	movs	r2, #0
 8005fb4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005fb8:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005fbc:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005fc0:	460b      	mov	r3, r1
 8005fc2:	18db      	adds	r3, r3, r3
 8005fc4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005fc6:	4613      	mov	r3, r2
 8005fc8:	eb42 0303 	adc.w	r3, r2, r3
 8005fcc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005fce:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8005fd2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8005fd6:	f7fa fdef 	bl	8000bb8 <__aeabi_uldivmod>
 8005fda:	4602      	mov	r2, r0
 8005fdc:	460b      	mov	r3, r1
 8005fde:	4b0d      	ldr	r3, [pc, #52]	@ (8006014 <UART_SetConfig+0x2d4>)
 8005fe0:	fba3 1302 	umull	r1, r3, r3, r2
 8005fe4:	095b      	lsrs	r3, r3, #5
 8005fe6:	2164      	movs	r1, #100	@ 0x64
 8005fe8:	fb01 f303 	mul.w	r3, r1, r3
 8005fec:	1ad3      	subs	r3, r2, r3
 8005fee:	00db      	lsls	r3, r3, #3
 8005ff0:	3332      	adds	r3, #50	@ 0x32
 8005ff2:	4a08      	ldr	r2, [pc, #32]	@ (8006014 <UART_SetConfig+0x2d4>)
 8005ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8005ff8:	095b      	lsrs	r3, r3, #5
 8005ffa:	f003 0207 	and.w	r2, r3, #7
 8005ffe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	4422      	add	r2, r4
 8006006:	609a      	str	r2, [r3, #8]
 8006008:	e106      	b.n	8006218 <UART_SetConfig+0x4d8>
 800600a:	bf00      	nop
 800600c:	40011000 	.word	0x40011000
 8006010:	40011400 	.word	0x40011400
 8006014:	51eb851f 	.word	0x51eb851f
 8006018:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800601c:	2200      	movs	r2, #0
 800601e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006022:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8006026:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800602a:	4642      	mov	r2, r8
 800602c:	464b      	mov	r3, r9
 800602e:	1891      	adds	r1, r2, r2
 8006030:	6239      	str	r1, [r7, #32]
 8006032:	415b      	adcs	r3, r3
 8006034:	627b      	str	r3, [r7, #36]	@ 0x24
 8006036:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800603a:	4641      	mov	r1, r8
 800603c:	1854      	adds	r4, r2, r1
 800603e:	4649      	mov	r1, r9
 8006040:	eb43 0501 	adc.w	r5, r3, r1
 8006044:	f04f 0200 	mov.w	r2, #0
 8006048:	f04f 0300 	mov.w	r3, #0
 800604c:	00eb      	lsls	r3, r5, #3
 800604e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006052:	00e2      	lsls	r2, r4, #3
 8006054:	4614      	mov	r4, r2
 8006056:	461d      	mov	r5, r3
 8006058:	4643      	mov	r3, r8
 800605a:	18e3      	adds	r3, r4, r3
 800605c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006060:	464b      	mov	r3, r9
 8006062:	eb45 0303 	adc.w	r3, r5, r3
 8006066:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800606a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800606e:	685b      	ldr	r3, [r3, #4]
 8006070:	2200      	movs	r2, #0
 8006072:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006076:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800607a:	f04f 0200 	mov.w	r2, #0
 800607e:	f04f 0300 	mov.w	r3, #0
 8006082:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8006086:	4629      	mov	r1, r5
 8006088:	008b      	lsls	r3, r1, #2
 800608a:	4621      	mov	r1, r4
 800608c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006090:	4621      	mov	r1, r4
 8006092:	008a      	lsls	r2, r1, #2
 8006094:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006098:	f7fa fd8e 	bl	8000bb8 <__aeabi_uldivmod>
 800609c:	4602      	mov	r2, r0
 800609e:	460b      	mov	r3, r1
 80060a0:	4b60      	ldr	r3, [pc, #384]	@ (8006224 <UART_SetConfig+0x4e4>)
 80060a2:	fba3 2302 	umull	r2, r3, r3, r2
 80060a6:	095b      	lsrs	r3, r3, #5
 80060a8:	011c      	lsls	r4, r3, #4
 80060aa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80060ae:	2200      	movs	r2, #0
 80060b0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80060b4:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80060b8:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80060bc:	4642      	mov	r2, r8
 80060be:	464b      	mov	r3, r9
 80060c0:	1891      	adds	r1, r2, r2
 80060c2:	61b9      	str	r1, [r7, #24]
 80060c4:	415b      	adcs	r3, r3
 80060c6:	61fb      	str	r3, [r7, #28]
 80060c8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80060cc:	4641      	mov	r1, r8
 80060ce:	1851      	adds	r1, r2, r1
 80060d0:	6139      	str	r1, [r7, #16]
 80060d2:	4649      	mov	r1, r9
 80060d4:	414b      	adcs	r3, r1
 80060d6:	617b      	str	r3, [r7, #20]
 80060d8:	f04f 0200 	mov.w	r2, #0
 80060dc:	f04f 0300 	mov.w	r3, #0
 80060e0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80060e4:	4659      	mov	r1, fp
 80060e6:	00cb      	lsls	r3, r1, #3
 80060e8:	4651      	mov	r1, sl
 80060ea:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80060ee:	4651      	mov	r1, sl
 80060f0:	00ca      	lsls	r2, r1, #3
 80060f2:	4610      	mov	r0, r2
 80060f4:	4619      	mov	r1, r3
 80060f6:	4603      	mov	r3, r0
 80060f8:	4642      	mov	r2, r8
 80060fa:	189b      	adds	r3, r3, r2
 80060fc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006100:	464b      	mov	r3, r9
 8006102:	460a      	mov	r2, r1
 8006104:	eb42 0303 	adc.w	r3, r2, r3
 8006108:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800610c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006110:	685b      	ldr	r3, [r3, #4]
 8006112:	2200      	movs	r2, #0
 8006114:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006116:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8006118:	f04f 0200 	mov.w	r2, #0
 800611c:	f04f 0300 	mov.w	r3, #0
 8006120:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8006124:	4649      	mov	r1, r9
 8006126:	008b      	lsls	r3, r1, #2
 8006128:	4641      	mov	r1, r8
 800612a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800612e:	4641      	mov	r1, r8
 8006130:	008a      	lsls	r2, r1, #2
 8006132:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8006136:	f7fa fd3f 	bl	8000bb8 <__aeabi_uldivmod>
 800613a:	4602      	mov	r2, r0
 800613c:	460b      	mov	r3, r1
 800613e:	4611      	mov	r1, r2
 8006140:	4b38      	ldr	r3, [pc, #224]	@ (8006224 <UART_SetConfig+0x4e4>)
 8006142:	fba3 2301 	umull	r2, r3, r3, r1
 8006146:	095b      	lsrs	r3, r3, #5
 8006148:	2264      	movs	r2, #100	@ 0x64
 800614a:	fb02 f303 	mul.w	r3, r2, r3
 800614e:	1acb      	subs	r3, r1, r3
 8006150:	011b      	lsls	r3, r3, #4
 8006152:	3332      	adds	r3, #50	@ 0x32
 8006154:	4a33      	ldr	r2, [pc, #204]	@ (8006224 <UART_SetConfig+0x4e4>)
 8006156:	fba2 2303 	umull	r2, r3, r2, r3
 800615a:	095b      	lsrs	r3, r3, #5
 800615c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006160:	441c      	add	r4, r3
 8006162:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006166:	2200      	movs	r2, #0
 8006168:	673b      	str	r3, [r7, #112]	@ 0x70
 800616a:	677a      	str	r2, [r7, #116]	@ 0x74
 800616c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8006170:	4642      	mov	r2, r8
 8006172:	464b      	mov	r3, r9
 8006174:	1891      	adds	r1, r2, r2
 8006176:	60b9      	str	r1, [r7, #8]
 8006178:	415b      	adcs	r3, r3
 800617a:	60fb      	str	r3, [r7, #12]
 800617c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006180:	4641      	mov	r1, r8
 8006182:	1851      	adds	r1, r2, r1
 8006184:	6039      	str	r1, [r7, #0]
 8006186:	4649      	mov	r1, r9
 8006188:	414b      	adcs	r3, r1
 800618a:	607b      	str	r3, [r7, #4]
 800618c:	f04f 0200 	mov.w	r2, #0
 8006190:	f04f 0300 	mov.w	r3, #0
 8006194:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006198:	4659      	mov	r1, fp
 800619a:	00cb      	lsls	r3, r1, #3
 800619c:	4651      	mov	r1, sl
 800619e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80061a2:	4651      	mov	r1, sl
 80061a4:	00ca      	lsls	r2, r1, #3
 80061a6:	4610      	mov	r0, r2
 80061a8:	4619      	mov	r1, r3
 80061aa:	4603      	mov	r3, r0
 80061ac:	4642      	mov	r2, r8
 80061ae:	189b      	adds	r3, r3, r2
 80061b0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80061b2:	464b      	mov	r3, r9
 80061b4:	460a      	mov	r2, r1
 80061b6:	eb42 0303 	adc.w	r3, r2, r3
 80061ba:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80061bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80061c0:	685b      	ldr	r3, [r3, #4]
 80061c2:	2200      	movs	r2, #0
 80061c4:	663b      	str	r3, [r7, #96]	@ 0x60
 80061c6:	667a      	str	r2, [r7, #100]	@ 0x64
 80061c8:	f04f 0200 	mov.w	r2, #0
 80061cc:	f04f 0300 	mov.w	r3, #0
 80061d0:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80061d4:	4649      	mov	r1, r9
 80061d6:	008b      	lsls	r3, r1, #2
 80061d8:	4641      	mov	r1, r8
 80061da:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80061de:	4641      	mov	r1, r8
 80061e0:	008a      	lsls	r2, r1, #2
 80061e2:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80061e6:	f7fa fce7 	bl	8000bb8 <__aeabi_uldivmod>
 80061ea:	4602      	mov	r2, r0
 80061ec:	460b      	mov	r3, r1
 80061ee:	4b0d      	ldr	r3, [pc, #52]	@ (8006224 <UART_SetConfig+0x4e4>)
 80061f0:	fba3 1302 	umull	r1, r3, r3, r2
 80061f4:	095b      	lsrs	r3, r3, #5
 80061f6:	2164      	movs	r1, #100	@ 0x64
 80061f8:	fb01 f303 	mul.w	r3, r1, r3
 80061fc:	1ad3      	subs	r3, r2, r3
 80061fe:	011b      	lsls	r3, r3, #4
 8006200:	3332      	adds	r3, #50	@ 0x32
 8006202:	4a08      	ldr	r2, [pc, #32]	@ (8006224 <UART_SetConfig+0x4e4>)
 8006204:	fba2 2303 	umull	r2, r3, r2, r3
 8006208:	095b      	lsrs	r3, r3, #5
 800620a:	f003 020f 	and.w	r2, r3, #15
 800620e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	4422      	add	r2, r4
 8006216:	609a      	str	r2, [r3, #8]
 8006218:	bf00      	nop
 800621a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 800621e:	46bd      	mov	sp, r7
 8006220:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006224:	51eb851f 	.word	0x51eb851f

08006228 <calloc>:
 8006228:	4b02      	ldr	r3, [pc, #8]	@ (8006234 <calloc+0xc>)
 800622a:	460a      	mov	r2, r1
 800622c:	4601      	mov	r1, r0
 800622e:	6818      	ldr	r0, [r3, #0]
 8006230:	f000 b802 	b.w	8006238 <_calloc_r>
 8006234:	20000018 	.word	0x20000018

08006238 <_calloc_r>:
 8006238:	b570      	push	{r4, r5, r6, lr}
 800623a:	fba1 5402 	umull	r5, r4, r1, r2
 800623e:	b93c      	cbnz	r4, 8006250 <_calloc_r+0x18>
 8006240:	4629      	mov	r1, r5
 8006242:	f000 f83f 	bl	80062c4 <_malloc_r>
 8006246:	4606      	mov	r6, r0
 8006248:	b928      	cbnz	r0, 8006256 <_calloc_r+0x1e>
 800624a:	2600      	movs	r6, #0
 800624c:	4630      	mov	r0, r6
 800624e:	bd70      	pop	{r4, r5, r6, pc}
 8006250:	220c      	movs	r2, #12
 8006252:	6002      	str	r2, [r0, #0]
 8006254:	e7f9      	b.n	800624a <_calloc_r+0x12>
 8006256:	462a      	mov	r2, r5
 8006258:	4621      	mov	r1, r4
 800625a:	f000 fe3c 	bl	8006ed6 <memset>
 800625e:	e7f5      	b.n	800624c <_calloc_r+0x14>

08006260 <malloc>:
 8006260:	4b02      	ldr	r3, [pc, #8]	@ (800626c <malloc+0xc>)
 8006262:	4601      	mov	r1, r0
 8006264:	6818      	ldr	r0, [r3, #0]
 8006266:	f000 b82d 	b.w	80062c4 <_malloc_r>
 800626a:	bf00      	nop
 800626c:	20000018 	.word	0x20000018

08006270 <free>:
 8006270:	4b02      	ldr	r3, [pc, #8]	@ (800627c <free+0xc>)
 8006272:	4601      	mov	r1, r0
 8006274:	6818      	ldr	r0, [r3, #0]
 8006276:	f001 bd9b 	b.w	8007db0 <_free_r>
 800627a:	bf00      	nop
 800627c:	20000018 	.word	0x20000018

08006280 <sbrk_aligned>:
 8006280:	b570      	push	{r4, r5, r6, lr}
 8006282:	4e0f      	ldr	r6, [pc, #60]	@ (80062c0 <sbrk_aligned+0x40>)
 8006284:	460c      	mov	r4, r1
 8006286:	6831      	ldr	r1, [r6, #0]
 8006288:	4605      	mov	r5, r0
 800628a:	b911      	cbnz	r1, 8006292 <sbrk_aligned+0x12>
 800628c:	f000 fecc 	bl	8007028 <_sbrk_r>
 8006290:	6030      	str	r0, [r6, #0]
 8006292:	4621      	mov	r1, r4
 8006294:	4628      	mov	r0, r5
 8006296:	f000 fec7 	bl	8007028 <_sbrk_r>
 800629a:	1c43      	adds	r3, r0, #1
 800629c:	d103      	bne.n	80062a6 <sbrk_aligned+0x26>
 800629e:	f04f 34ff 	mov.w	r4, #4294967295
 80062a2:	4620      	mov	r0, r4
 80062a4:	bd70      	pop	{r4, r5, r6, pc}
 80062a6:	1cc4      	adds	r4, r0, #3
 80062a8:	f024 0403 	bic.w	r4, r4, #3
 80062ac:	42a0      	cmp	r0, r4
 80062ae:	d0f8      	beq.n	80062a2 <sbrk_aligned+0x22>
 80062b0:	1a21      	subs	r1, r4, r0
 80062b2:	4628      	mov	r0, r5
 80062b4:	f000 feb8 	bl	8007028 <_sbrk_r>
 80062b8:	3001      	adds	r0, #1
 80062ba:	d1f2      	bne.n	80062a2 <sbrk_aligned+0x22>
 80062bc:	e7ef      	b.n	800629e <sbrk_aligned+0x1e>
 80062be:	bf00      	nop
 80062c0:	200004d0 	.word	0x200004d0

080062c4 <_malloc_r>:
 80062c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80062c8:	1ccd      	adds	r5, r1, #3
 80062ca:	f025 0503 	bic.w	r5, r5, #3
 80062ce:	3508      	adds	r5, #8
 80062d0:	2d0c      	cmp	r5, #12
 80062d2:	bf38      	it	cc
 80062d4:	250c      	movcc	r5, #12
 80062d6:	2d00      	cmp	r5, #0
 80062d8:	4606      	mov	r6, r0
 80062da:	db01      	blt.n	80062e0 <_malloc_r+0x1c>
 80062dc:	42a9      	cmp	r1, r5
 80062de:	d904      	bls.n	80062ea <_malloc_r+0x26>
 80062e0:	230c      	movs	r3, #12
 80062e2:	6033      	str	r3, [r6, #0]
 80062e4:	2000      	movs	r0, #0
 80062e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80062ea:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80063c0 <_malloc_r+0xfc>
 80062ee:	f000 f869 	bl	80063c4 <__malloc_lock>
 80062f2:	f8d8 3000 	ldr.w	r3, [r8]
 80062f6:	461c      	mov	r4, r3
 80062f8:	bb44      	cbnz	r4, 800634c <_malloc_r+0x88>
 80062fa:	4629      	mov	r1, r5
 80062fc:	4630      	mov	r0, r6
 80062fe:	f7ff ffbf 	bl	8006280 <sbrk_aligned>
 8006302:	1c43      	adds	r3, r0, #1
 8006304:	4604      	mov	r4, r0
 8006306:	d158      	bne.n	80063ba <_malloc_r+0xf6>
 8006308:	f8d8 4000 	ldr.w	r4, [r8]
 800630c:	4627      	mov	r7, r4
 800630e:	2f00      	cmp	r7, #0
 8006310:	d143      	bne.n	800639a <_malloc_r+0xd6>
 8006312:	2c00      	cmp	r4, #0
 8006314:	d04b      	beq.n	80063ae <_malloc_r+0xea>
 8006316:	6823      	ldr	r3, [r4, #0]
 8006318:	4639      	mov	r1, r7
 800631a:	4630      	mov	r0, r6
 800631c:	eb04 0903 	add.w	r9, r4, r3
 8006320:	f000 fe82 	bl	8007028 <_sbrk_r>
 8006324:	4581      	cmp	r9, r0
 8006326:	d142      	bne.n	80063ae <_malloc_r+0xea>
 8006328:	6821      	ldr	r1, [r4, #0]
 800632a:	1a6d      	subs	r5, r5, r1
 800632c:	4629      	mov	r1, r5
 800632e:	4630      	mov	r0, r6
 8006330:	f7ff ffa6 	bl	8006280 <sbrk_aligned>
 8006334:	3001      	adds	r0, #1
 8006336:	d03a      	beq.n	80063ae <_malloc_r+0xea>
 8006338:	6823      	ldr	r3, [r4, #0]
 800633a:	442b      	add	r3, r5
 800633c:	6023      	str	r3, [r4, #0]
 800633e:	f8d8 3000 	ldr.w	r3, [r8]
 8006342:	685a      	ldr	r2, [r3, #4]
 8006344:	bb62      	cbnz	r2, 80063a0 <_malloc_r+0xdc>
 8006346:	f8c8 7000 	str.w	r7, [r8]
 800634a:	e00f      	b.n	800636c <_malloc_r+0xa8>
 800634c:	6822      	ldr	r2, [r4, #0]
 800634e:	1b52      	subs	r2, r2, r5
 8006350:	d420      	bmi.n	8006394 <_malloc_r+0xd0>
 8006352:	2a0b      	cmp	r2, #11
 8006354:	d917      	bls.n	8006386 <_malloc_r+0xc2>
 8006356:	1961      	adds	r1, r4, r5
 8006358:	42a3      	cmp	r3, r4
 800635a:	6025      	str	r5, [r4, #0]
 800635c:	bf18      	it	ne
 800635e:	6059      	strne	r1, [r3, #4]
 8006360:	6863      	ldr	r3, [r4, #4]
 8006362:	bf08      	it	eq
 8006364:	f8c8 1000 	streq.w	r1, [r8]
 8006368:	5162      	str	r2, [r4, r5]
 800636a:	604b      	str	r3, [r1, #4]
 800636c:	4630      	mov	r0, r6
 800636e:	f000 f82f 	bl	80063d0 <__malloc_unlock>
 8006372:	f104 000b 	add.w	r0, r4, #11
 8006376:	1d23      	adds	r3, r4, #4
 8006378:	f020 0007 	bic.w	r0, r0, #7
 800637c:	1ac2      	subs	r2, r0, r3
 800637e:	bf1c      	itt	ne
 8006380:	1a1b      	subne	r3, r3, r0
 8006382:	50a3      	strne	r3, [r4, r2]
 8006384:	e7af      	b.n	80062e6 <_malloc_r+0x22>
 8006386:	6862      	ldr	r2, [r4, #4]
 8006388:	42a3      	cmp	r3, r4
 800638a:	bf0c      	ite	eq
 800638c:	f8c8 2000 	streq.w	r2, [r8]
 8006390:	605a      	strne	r2, [r3, #4]
 8006392:	e7eb      	b.n	800636c <_malloc_r+0xa8>
 8006394:	4623      	mov	r3, r4
 8006396:	6864      	ldr	r4, [r4, #4]
 8006398:	e7ae      	b.n	80062f8 <_malloc_r+0x34>
 800639a:	463c      	mov	r4, r7
 800639c:	687f      	ldr	r7, [r7, #4]
 800639e:	e7b6      	b.n	800630e <_malloc_r+0x4a>
 80063a0:	461a      	mov	r2, r3
 80063a2:	685b      	ldr	r3, [r3, #4]
 80063a4:	42a3      	cmp	r3, r4
 80063a6:	d1fb      	bne.n	80063a0 <_malloc_r+0xdc>
 80063a8:	2300      	movs	r3, #0
 80063aa:	6053      	str	r3, [r2, #4]
 80063ac:	e7de      	b.n	800636c <_malloc_r+0xa8>
 80063ae:	230c      	movs	r3, #12
 80063b0:	6033      	str	r3, [r6, #0]
 80063b2:	4630      	mov	r0, r6
 80063b4:	f000 f80c 	bl	80063d0 <__malloc_unlock>
 80063b8:	e794      	b.n	80062e4 <_malloc_r+0x20>
 80063ba:	6005      	str	r5, [r0, #0]
 80063bc:	e7d6      	b.n	800636c <_malloc_r+0xa8>
 80063be:	bf00      	nop
 80063c0:	200004d4 	.word	0x200004d4

080063c4 <__malloc_lock>:
 80063c4:	4801      	ldr	r0, [pc, #4]	@ (80063cc <__malloc_lock+0x8>)
 80063c6:	f000 be7c 	b.w	80070c2 <__retarget_lock_acquire_recursive>
 80063ca:	bf00      	nop
 80063cc:	20000618 	.word	0x20000618

080063d0 <__malloc_unlock>:
 80063d0:	4801      	ldr	r0, [pc, #4]	@ (80063d8 <__malloc_unlock+0x8>)
 80063d2:	f000 be77 	b.w	80070c4 <__retarget_lock_release_recursive>
 80063d6:	bf00      	nop
 80063d8:	20000618 	.word	0x20000618

080063dc <__cvt>:
 80063dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80063e0:	ec57 6b10 	vmov	r6, r7, d0
 80063e4:	2f00      	cmp	r7, #0
 80063e6:	460c      	mov	r4, r1
 80063e8:	4619      	mov	r1, r3
 80063ea:	463b      	mov	r3, r7
 80063ec:	bfbb      	ittet	lt
 80063ee:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80063f2:	461f      	movlt	r7, r3
 80063f4:	2300      	movge	r3, #0
 80063f6:	232d      	movlt	r3, #45	@ 0x2d
 80063f8:	700b      	strb	r3, [r1, #0]
 80063fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80063fc:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8006400:	4691      	mov	r9, r2
 8006402:	f023 0820 	bic.w	r8, r3, #32
 8006406:	bfbc      	itt	lt
 8006408:	4632      	movlt	r2, r6
 800640a:	4616      	movlt	r6, r2
 800640c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8006410:	d005      	beq.n	800641e <__cvt+0x42>
 8006412:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8006416:	d100      	bne.n	800641a <__cvt+0x3e>
 8006418:	3401      	adds	r4, #1
 800641a:	2102      	movs	r1, #2
 800641c:	e000      	b.n	8006420 <__cvt+0x44>
 800641e:	2103      	movs	r1, #3
 8006420:	ab03      	add	r3, sp, #12
 8006422:	9301      	str	r3, [sp, #4]
 8006424:	ab02      	add	r3, sp, #8
 8006426:	9300      	str	r3, [sp, #0]
 8006428:	ec47 6b10 	vmov	d0, r6, r7
 800642c:	4653      	mov	r3, sl
 800642e:	4622      	mov	r2, r4
 8006430:	f000 fefa 	bl	8007228 <_dtoa_r>
 8006434:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8006438:	4605      	mov	r5, r0
 800643a:	d119      	bne.n	8006470 <__cvt+0x94>
 800643c:	f019 0f01 	tst.w	r9, #1
 8006440:	d00e      	beq.n	8006460 <__cvt+0x84>
 8006442:	eb00 0904 	add.w	r9, r0, r4
 8006446:	2200      	movs	r2, #0
 8006448:	2300      	movs	r3, #0
 800644a:	4630      	mov	r0, r6
 800644c:	4639      	mov	r1, r7
 800644e:	f7fa fb43 	bl	8000ad8 <__aeabi_dcmpeq>
 8006452:	b108      	cbz	r0, 8006458 <__cvt+0x7c>
 8006454:	f8cd 900c 	str.w	r9, [sp, #12]
 8006458:	2230      	movs	r2, #48	@ 0x30
 800645a:	9b03      	ldr	r3, [sp, #12]
 800645c:	454b      	cmp	r3, r9
 800645e:	d31e      	bcc.n	800649e <__cvt+0xc2>
 8006460:	9b03      	ldr	r3, [sp, #12]
 8006462:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006464:	1b5b      	subs	r3, r3, r5
 8006466:	4628      	mov	r0, r5
 8006468:	6013      	str	r3, [r2, #0]
 800646a:	b004      	add	sp, #16
 800646c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006470:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8006474:	eb00 0904 	add.w	r9, r0, r4
 8006478:	d1e5      	bne.n	8006446 <__cvt+0x6a>
 800647a:	7803      	ldrb	r3, [r0, #0]
 800647c:	2b30      	cmp	r3, #48	@ 0x30
 800647e:	d10a      	bne.n	8006496 <__cvt+0xba>
 8006480:	2200      	movs	r2, #0
 8006482:	2300      	movs	r3, #0
 8006484:	4630      	mov	r0, r6
 8006486:	4639      	mov	r1, r7
 8006488:	f7fa fb26 	bl	8000ad8 <__aeabi_dcmpeq>
 800648c:	b918      	cbnz	r0, 8006496 <__cvt+0xba>
 800648e:	f1c4 0401 	rsb	r4, r4, #1
 8006492:	f8ca 4000 	str.w	r4, [sl]
 8006496:	f8da 3000 	ldr.w	r3, [sl]
 800649a:	4499      	add	r9, r3
 800649c:	e7d3      	b.n	8006446 <__cvt+0x6a>
 800649e:	1c59      	adds	r1, r3, #1
 80064a0:	9103      	str	r1, [sp, #12]
 80064a2:	701a      	strb	r2, [r3, #0]
 80064a4:	e7d9      	b.n	800645a <__cvt+0x7e>

080064a6 <__exponent>:
 80064a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064a8:	2900      	cmp	r1, #0
 80064aa:	bfba      	itte	lt
 80064ac:	4249      	neglt	r1, r1
 80064ae:	232d      	movlt	r3, #45	@ 0x2d
 80064b0:	232b      	movge	r3, #43	@ 0x2b
 80064b2:	2909      	cmp	r1, #9
 80064b4:	7002      	strb	r2, [r0, #0]
 80064b6:	7043      	strb	r3, [r0, #1]
 80064b8:	dd29      	ble.n	800650e <__exponent+0x68>
 80064ba:	f10d 0307 	add.w	r3, sp, #7
 80064be:	461d      	mov	r5, r3
 80064c0:	270a      	movs	r7, #10
 80064c2:	461a      	mov	r2, r3
 80064c4:	fbb1 f6f7 	udiv	r6, r1, r7
 80064c8:	fb07 1416 	mls	r4, r7, r6, r1
 80064cc:	3430      	adds	r4, #48	@ 0x30
 80064ce:	f802 4c01 	strb.w	r4, [r2, #-1]
 80064d2:	460c      	mov	r4, r1
 80064d4:	2c63      	cmp	r4, #99	@ 0x63
 80064d6:	f103 33ff 	add.w	r3, r3, #4294967295
 80064da:	4631      	mov	r1, r6
 80064dc:	dcf1      	bgt.n	80064c2 <__exponent+0x1c>
 80064de:	3130      	adds	r1, #48	@ 0x30
 80064e0:	1e94      	subs	r4, r2, #2
 80064e2:	f803 1c01 	strb.w	r1, [r3, #-1]
 80064e6:	1c41      	adds	r1, r0, #1
 80064e8:	4623      	mov	r3, r4
 80064ea:	42ab      	cmp	r3, r5
 80064ec:	d30a      	bcc.n	8006504 <__exponent+0x5e>
 80064ee:	f10d 0309 	add.w	r3, sp, #9
 80064f2:	1a9b      	subs	r3, r3, r2
 80064f4:	42ac      	cmp	r4, r5
 80064f6:	bf88      	it	hi
 80064f8:	2300      	movhi	r3, #0
 80064fa:	3302      	adds	r3, #2
 80064fc:	4403      	add	r3, r0
 80064fe:	1a18      	subs	r0, r3, r0
 8006500:	b003      	add	sp, #12
 8006502:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006504:	f813 6b01 	ldrb.w	r6, [r3], #1
 8006508:	f801 6f01 	strb.w	r6, [r1, #1]!
 800650c:	e7ed      	b.n	80064ea <__exponent+0x44>
 800650e:	2330      	movs	r3, #48	@ 0x30
 8006510:	3130      	adds	r1, #48	@ 0x30
 8006512:	7083      	strb	r3, [r0, #2]
 8006514:	70c1      	strb	r1, [r0, #3]
 8006516:	1d03      	adds	r3, r0, #4
 8006518:	e7f1      	b.n	80064fe <__exponent+0x58>
	...

0800651c <_printf_float>:
 800651c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006520:	b08d      	sub	sp, #52	@ 0x34
 8006522:	460c      	mov	r4, r1
 8006524:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8006528:	4616      	mov	r6, r2
 800652a:	461f      	mov	r7, r3
 800652c:	4605      	mov	r5, r0
 800652e:	f000 fd43 	bl	8006fb8 <_localeconv_r>
 8006532:	6803      	ldr	r3, [r0, #0]
 8006534:	9304      	str	r3, [sp, #16]
 8006536:	4618      	mov	r0, r3
 8006538:	f7f9 fea2 	bl	8000280 <strlen>
 800653c:	2300      	movs	r3, #0
 800653e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006540:	f8d8 3000 	ldr.w	r3, [r8]
 8006544:	9005      	str	r0, [sp, #20]
 8006546:	3307      	adds	r3, #7
 8006548:	f023 0307 	bic.w	r3, r3, #7
 800654c:	f103 0208 	add.w	r2, r3, #8
 8006550:	f894 a018 	ldrb.w	sl, [r4, #24]
 8006554:	f8d4 b000 	ldr.w	fp, [r4]
 8006558:	f8c8 2000 	str.w	r2, [r8]
 800655c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006560:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8006564:	9307      	str	r3, [sp, #28]
 8006566:	f8cd 8018 	str.w	r8, [sp, #24]
 800656a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800656e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006572:	4b9c      	ldr	r3, [pc, #624]	@ (80067e4 <_printf_float+0x2c8>)
 8006574:	f04f 32ff 	mov.w	r2, #4294967295
 8006578:	f7fa fae0 	bl	8000b3c <__aeabi_dcmpun>
 800657c:	bb70      	cbnz	r0, 80065dc <_printf_float+0xc0>
 800657e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006582:	4b98      	ldr	r3, [pc, #608]	@ (80067e4 <_printf_float+0x2c8>)
 8006584:	f04f 32ff 	mov.w	r2, #4294967295
 8006588:	f7fa faba 	bl	8000b00 <__aeabi_dcmple>
 800658c:	bb30      	cbnz	r0, 80065dc <_printf_float+0xc0>
 800658e:	2200      	movs	r2, #0
 8006590:	2300      	movs	r3, #0
 8006592:	4640      	mov	r0, r8
 8006594:	4649      	mov	r1, r9
 8006596:	f7fa faa9 	bl	8000aec <__aeabi_dcmplt>
 800659a:	b110      	cbz	r0, 80065a2 <_printf_float+0x86>
 800659c:	232d      	movs	r3, #45	@ 0x2d
 800659e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80065a2:	4a91      	ldr	r2, [pc, #580]	@ (80067e8 <_printf_float+0x2cc>)
 80065a4:	4b91      	ldr	r3, [pc, #580]	@ (80067ec <_printf_float+0x2d0>)
 80065a6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80065aa:	bf94      	ite	ls
 80065ac:	4690      	movls	r8, r2
 80065ae:	4698      	movhi	r8, r3
 80065b0:	2303      	movs	r3, #3
 80065b2:	6123      	str	r3, [r4, #16]
 80065b4:	f02b 0304 	bic.w	r3, fp, #4
 80065b8:	6023      	str	r3, [r4, #0]
 80065ba:	f04f 0900 	mov.w	r9, #0
 80065be:	9700      	str	r7, [sp, #0]
 80065c0:	4633      	mov	r3, r6
 80065c2:	aa0b      	add	r2, sp, #44	@ 0x2c
 80065c4:	4621      	mov	r1, r4
 80065c6:	4628      	mov	r0, r5
 80065c8:	f000 f9d2 	bl	8006970 <_printf_common>
 80065cc:	3001      	adds	r0, #1
 80065ce:	f040 808d 	bne.w	80066ec <_printf_float+0x1d0>
 80065d2:	f04f 30ff 	mov.w	r0, #4294967295
 80065d6:	b00d      	add	sp, #52	@ 0x34
 80065d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065dc:	4642      	mov	r2, r8
 80065de:	464b      	mov	r3, r9
 80065e0:	4640      	mov	r0, r8
 80065e2:	4649      	mov	r1, r9
 80065e4:	f7fa faaa 	bl	8000b3c <__aeabi_dcmpun>
 80065e8:	b140      	cbz	r0, 80065fc <_printf_float+0xe0>
 80065ea:	464b      	mov	r3, r9
 80065ec:	2b00      	cmp	r3, #0
 80065ee:	bfbc      	itt	lt
 80065f0:	232d      	movlt	r3, #45	@ 0x2d
 80065f2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80065f6:	4a7e      	ldr	r2, [pc, #504]	@ (80067f0 <_printf_float+0x2d4>)
 80065f8:	4b7e      	ldr	r3, [pc, #504]	@ (80067f4 <_printf_float+0x2d8>)
 80065fa:	e7d4      	b.n	80065a6 <_printf_float+0x8a>
 80065fc:	6863      	ldr	r3, [r4, #4]
 80065fe:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8006602:	9206      	str	r2, [sp, #24]
 8006604:	1c5a      	adds	r2, r3, #1
 8006606:	d13b      	bne.n	8006680 <_printf_float+0x164>
 8006608:	2306      	movs	r3, #6
 800660a:	6063      	str	r3, [r4, #4]
 800660c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8006610:	2300      	movs	r3, #0
 8006612:	6022      	str	r2, [r4, #0]
 8006614:	9303      	str	r3, [sp, #12]
 8006616:	ab0a      	add	r3, sp, #40	@ 0x28
 8006618:	e9cd a301 	strd	sl, r3, [sp, #4]
 800661c:	ab09      	add	r3, sp, #36	@ 0x24
 800661e:	9300      	str	r3, [sp, #0]
 8006620:	6861      	ldr	r1, [r4, #4]
 8006622:	ec49 8b10 	vmov	d0, r8, r9
 8006626:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800662a:	4628      	mov	r0, r5
 800662c:	f7ff fed6 	bl	80063dc <__cvt>
 8006630:	9b06      	ldr	r3, [sp, #24]
 8006632:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006634:	2b47      	cmp	r3, #71	@ 0x47
 8006636:	4680      	mov	r8, r0
 8006638:	d129      	bne.n	800668e <_printf_float+0x172>
 800663a:	1cc8      	adds	r0, r1, #3
 800663c:	db02      	blt.n	8006644 <_printf_float+0x128>
 800663e:	6863      	ldr	r3, [r4, #4]
 8006640:	4299      	cmp	r1, r3
 8006642:	dd41      	ble.n	80066c8 <_printf_float+0x1ac>
 8006644:	f1aa 0a02 	sub.w	sl, sl, #2
 8006648:	fa5f fa8a 	uxtb.w	sl, sl
 800664c:	3901      	subs	r1, #1
 800664e:	4652      	mov	r2, sl
 8006650:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8006654:	9109      	str	r1, [sp, #36]	@ 0x24
 8006656:	f7ff ff26 	bl	80064a6 <__exponent>
 800665a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800665c:	1813      	adds	r3, r2, r0
 800665e:	2a01      	cmp	r2, #1
 8006660:	4681      	mov	r9, r0
 8006662:	6123      	str	r3, [r4, #16]
 8006664:	dc02      	bgt.n	800666c <_printf_float+0x150>
 8006666:	6822      	ldr	r2, [r4, #0]
 8006668:	07d2      	lsls	r2, r2, #31
 800666a:	d501      	bpl.n	8006670 <_printf_float+0x154>
 800666c:	3301      	adds	r3, #1
 800666e:	6123      	str	r3, [r4, #16]
 8006670:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8006674:	2b00      	cmp	r3, #0
 8006676:	d0a2      	beq.n	80065be <_printf_float+0xa2>
 8006678:	232d      	movs	r3, #45	@ 0x2d
 800667a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800667e:	e79e      	b.n	80065be <_printf_float+0xa2>
 8006680:	9a06      	ldr	r2, [sp, #24]
 8006682:	2a47      	cmp	r2, #71	@ 0x47
 8006684:	d1c2      	bne.n	800660c <_printf_float+0xf0>
 8006686:	2b00      	cmp	r3, #0
 8006688:	d1c0      	bne.n	800660c <_printf_float+0xf0>
 800668a:	2301      	movs	r3, #1
 800668c:	e7bd      	b.n	800660a <_printf_float+0xee>
 800668e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006692:	d9db      	bls.n	800664c <_printf_float+0x130>
 8006694:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8006698:	d118      	bne.n	80066cc <_printf_float+0x1b0>
 800669a:	2900      	cmp	r1, #0
 800669c:	6863      	ldr	r3, [r4, #4]
 800669e:	dd0b      	ble.n	80066b8 <_printf_float+0x19c>
 80066a0:	6121      	str	r1, [r4, #16]
 80066a2:	b913      	cbnz	r3, 80066aa <_printf_float+0x18e>
 80066a4:	6822      	ldr	r2, [r4, #0]
 80066a6:	07d0      	lsls	r0, r2, #31
 80066a8:	d502      	bpl.n	80066b0 <_printf_float+0x194>
 80066aa:	3301      	adds	r3, #1
 80066ac:	440b      	add	r3, r1
 80066ae:	6123      	str	r3, [r4, #16]
 80066b0:	65a1      	str	r1, [r4, #88]	@ 0x58
 80066b2:	f04f 0900 	mov.w	r9, #0
 80066b6:	e7db      	b.n	8006670 <_printf_float+0x154>
 80066b8:	b913      	cbnz	r3, 80066c0 <_printf_float+0x1a4>
 80066ba:	6822      	ldr	r2, [r4, #0]
 80066bc:	07d2      	lsls	r2, r2, #31
 80066be:	d501      	bpl.n	80066c4 <_printf_float+0x1a8>
 80066c0:	3302      	adds	r3, #2
 80066c2:	e7f4      	b.n	80066ae <_printf_float+0x192>
 80066c4:	2301      	movs	r3, #1
 80066c6:	e7f2      	b.n	80066ae <_printf_float+0x192>
 80066c8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80066cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80066ce:	4299      	cmp	r1, r3
 80066d0:	db05      	blt.n	80066de <_printf_float+0x1c2>
 80066d2:	6823      	ldr	r3, [r4, #0]
 80066d4:	6121      	str	r1, [r4, #16]
 80066d6:	07d8      	lsls	r0, r3, #31
 80066d8:	d5ea      	bpl.n	80066b0 <_printf_float+0x194>
 80066da:	1c4b      	adds	r3, r1, #1
 80066dc:	e7e7      	b.n	80066ae <_printf_float+0x192>
 80066de:	2900      	cmp	r1, #0
 80066e0:	bfd4      	ite	le
 80066e2:	f1c1 0202 	rsble	r2, r1, #2
 80066e6:	2201      	movgt	r2, #1
 80066e8:	4413      	add	r3, r2
 80066ea:	e7e0      	b.n	80066ae <_printf_float+0x192>
 80066ec:	6823      	ldr	r3, [r4, #0]
 80066ee:	055a      	lsls	r2, r3, #21
 80066f0:	d407      	bmi.n	8006702 <_printf_float+0x1e6>
 80066f2:	6923      	ldr	r3, [r4, #16]
 80066f4:	4642      	mov	r2, r8
 80066f6:	4631      	mov	r1, r6
 80066f8:	4628      	mov	r0, r5
 80066fa:	47b8      	blx	r7
 80066fc:	3001      	adds	r0, #1
 80066fe:	d12b      	bne.n	8006758 <_printf_float+0x23c>
 8006700:	e767      	b.n	80065d2 <_printf_float+0xb6>
 8006702:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006706:	f240 80dd 	bls.w	80068c4 <_printf_float+0x3a8>
 800670a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800670e:	2200      	movs	r2, #0
 8006710:	2300      	movs	r3, #0
 8006712:	f7fa f9e1 	bl	8000ad8 <__aeabi_dcmpeq>
 8006716:	2800      	cmp	r0, #0
 8006718:	d033      	beq.n	8006782 <_printf_float+0x266>
 800671a:	4a37      	ldr	r2, [pc, #220]	@ (80067f8 <_printf_float+0x2dc>)
 800671c:	2301      	movs	r3, #1
 800671e:	4631      	mov	r1, r6
 8006720:	4628      	mov	r0, r5
 8006722:	47b8      	blx	r7
 8006724:	3001      	adds	r0, #1
 8006726:	f43f af54 	beq.w	80065d2 <_printf_float+0xb6>
 800672a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800672e:	4543      	cmp	r3, r8
 8006730:	db02      	blt.n	8006738 <_printf_float+0x21c>
 8006732:	6823      	ldr	r3, [r4, #0]
 8006734:	07d8      	lsls	r0, r3, #31
 8006736:	d50f      	bpl.n	8006758 <_printf_float+0x23c>
 8006738:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800673c:	4631      	mov	r1, r6
 800673e:	4628      	mov	r0, r5
 8006740:	47b8      	blx	r7
 8006742:	3001      	adds	r0, #1
 8006744:	f43f af45 	beq.w	80065d2 <_printf_float+0xb6>
 8006748:	f04f 0900 	mov.w	r9, #0
 800674c:	f108 38ff 	add.w	r8, r8, #4294967295
 8006750:	f104 0a1a 	add.w	sl, r4, #26
 8006754:	45c8      	cmp	r8, r9
 8006756:	dc09      	bgt.n	800676c <_printf_float+0x250>
 8006758:	6823      	ldr	r3, [r4, #0]
 800675a:	079b      	lsls	r3, r3, #30
 800675c:	f100 8103 	bmi.w	8006966 <_printf_float+0x44a>
 8006760:	68e0      	ldr	r0, [r4, #12]
 8006762:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006764:	4298      	cmp	r0, r3
 8006766:	bfb8      	it	lt
 8006768:	4618      	movlt	r0, r3
 800676a:	e734      	b.n	80065d6 <_printf_float+0xba>
 800676c:	2301      	movs	r3, #1
 800676e:	4652      	mov	r2, sl
 8006770:	4631      	mov	r1, r6
 8006772:	4628      	mov	r0, r5
 8006774:	47b8      	blx	r7
 8006776:	3001      	adds	r0, #1
 8006778:	f43f af2b 	beq.w	80065d2 <_printf_float+0xb6>
 800677c:	f109 0901 	add.w	r9, r9, #1
 8006780:	e7e8      	b.n	8006754 <_printf_float+0x238>
 8006782:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006784:	2b00      	cmp	r3, #0
 8006786:	dc39      	bgt.n	80067fc <_printf_float+0x2e0>
 8006788:	4a1b      	ldr	r2, [pc, #108]	@ (80067f8 <_printf_float+0x2dc>)
 800678a:	2301      	movs	r3, #1
 800678c:	4631      	mov	r1, r6
 800678e:	4628      	mov	r0, r5
 8006790:	47b8      	blx	r7
 8006792:	3001      	adds	r0, #1
 8006794:	f43f af1d 	beq.w	80065d2 <_printf_float+0xb6>
 8006798:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800679c:	ea59 0303 	orrs.w	r3, r9, r3
 80067a0:	d102      	bne.n	80067a8 <_printf_float+0x28c>
 80067a2:	6823      	ldr	r3, [r4, #0]
 80067a4:	07d9      	lsls	r1, r3, #31
 80067a6:	d5d7      	bpl.n	8006758 <_printf_float+0x23c>
 80067a8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067ac:	4631      	mov	r1, r6
 80067ae:	4628      	mov	r0, r5
 80067b0:	47b8      	blx	r7
 80067b2:	3001      	adds	r0, #1
 80067b4:	f43f af0d 	beq.w	80065d2 <_printf_float+0xb6>
 80067b8:	f04f 0a00 	mov.w	sl, #0
 80067bc:	f104 0b1a 	add.w	fp, r4, #26
 80067c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80067c2:	425b      	negs	r3, r3
 80067c4:	4553      	cmp	r3, sl
 80067c6:	dc01      	bgt.n	80067cc <_printf_float+0x2b0>
 80067c8:	464b      	mov	r3, r9
 80067ca:	e793      	b.n	80066f4 <_printf_float+0x1d8>
 80067cc:	2301      	movs	r3, #1
 80067ce:	465a      	mov	r2, fp
 80067d0:	4631      	mov	r1, r6
 80067d2:	4628      	mov	r0, r5
 80067d4:	47b8      	blx	r7
 80067d6:	3001      	adds	r0, #1
 80067d8:	f43f aefb 	beq.w	80065d2 <_printf_float+0xb6>
 80067dc:	f10a 0a01 	add.w	sl, sl, #1
 80067e0:	e7ee      	b.n	80067c0 <_printf_float+0x2a4>
 80067e2:	bf00      	nop
 80067e4:	7fefffff 	.word	0x7fefffff
 80067e8:	08009238 	.word	0x08009238
 80067ec:	0800923c 	.word	0x0800923c
 80067f0:	08009240 	.word	0x08009240
 80067f4:	08009244 	.word	0x08009244
 80067f8:	08009248 	.word	0x08009248
 80067fc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80067fe:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8006802:	4553      	cmp	r3, sl
 8006804:	bfa8      	it	ge
 8006806:	4653      	movge	r3, sl
 8006808:	2b00      	cmp	r3, #0
 800680a:	4699      	mov	r9, r3
 800680c:	dc36      	bgt.n	800687c <_printf_float+0x360>
 800680e:	f04f 0b00 	mov.w	fp, #0
 8006812:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006816:	f104 021a 	add.w	r2, r4, #26
 800681a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800681c:	9306      	str	r3, [sp, #24]
 800681e:	eba3 0309 	sub.w	r3, r3, r9
 8006822:	455b      	cmp	r3, fp
 8006824:	dc31      	bgt.n	800688a <_printf_float+0x36e>
 8006826:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006828:	459a      	cmp	sl, r3
 800682a:	dc3a      	bgt.n	80068a2 <_printf_float+0x386>
 800682c:	6823      	ldr	r3, [r4, #0]
 800682e:	07da      	lsls	r2, r3, #31
 8006830:	d437      	bmi.n	80068a2 <_printf_float+0x386>
 8006832:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006834:	ebaa 0903 	sub.w	r9, sl, r3
 8006838:	9b06      	ldr	r3, [sp, #24]
 800683a:	ebaa 0303 	sub.w	r3, sl, r3
 800683e:	4599      	cmp	r9, r3
 8006840:	bfa8      	it	ge
 8006842:	4699      	movge	r9, r3
 8006844:	f1b9 0f00 	cmp.w	r9, #0
 8006848:	dc33      	bgt.n	80068b2 <_printf_float+0x396>
 800684a:	f04f 0800 	mov.w	r8, #0
 800684e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006852:	f104 0b1a 	add.w	fp, r4, #26
 8006856:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006858:	ebaa 0303 	sub.w	r3, sl, r3
 800685c:	eba3 0309 	sub.w	r3, r3, r9
 8006860:	4543      	cmp	r3, r8
 8006862:	f77f af79 	ble.w	8006758 <_printf_float+0x23c>
 8006866:	2301      	movs	r3, #1
 8006868:	465a      	mov	r2, fp
 800686a:	4631      	mov	r1, r6
 800686c:	4628      	mov	r0, r5
 800686e:	47b8      	blx	r7
 8006870:	3001      	adds	r0, #1
 8006872:	f43f aeae 	beq.w	80065d2 <_printf_float+0xb6>
 8006876:	f108 0801 	add.w	r8, r8, #1
 800687a:	e7ec      	b.n	8006856 <_printf_float+0x33a>
 800687c:	4642      	mov	r2, r8
 800687e:	4631      	mov	r1, r6
 8006880:	4628      	mov	r0, r5
 8006882:	47b8      	blx	r7
 8006884:	3001      	adds	r0, #1
 8006886:	d1c2      	bne.n	800680e <_printf_float+0x2f2>
 8006888:	e6a3      	b.n	80065d2 <_printf_float+0xb6>
 800688a:	2301      	movs	r3, #1
 800688c:	4631      	mov	r1, r6
 800688e:	4628      	mov	r0, r5
 8006890:	9206      	str	r2, [sp, #24]
 8006892:	47b8      	blx	r7
 8006894:	3001      	adds	r0, #1
 8006896:	f43f ae9c 	beq.w	80065d2 <_printf_float+0xb6>
 800689a:	9a06      	ldr	r2, [sp, #24]
 800689c:	f10b 0b01 	add.w	fp, fp, #1
 80068a0:	e7bb      	b.n	800681a <_printf_float+0x2fe>
 80068a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80068a6:	4631      	mov	r1, r6
 80068a8:	4628      	mov	r0, r5
 80068aa:	47b8      	blx	r7
 80068ac:	3001      	adds	r0, #1
 80068ae:	d1c0      	bne.n	8006832 <_printf_float+0x316>
 80068b0:	e68f      	b.n	80065d2 <_printf_float+0xb6>
 80068b2:	9a06      	ldr	r2, [sp, #24]
 80068b4:	464b      	mov	r3, r9
 80068b6:	4442      	add	r2, r8
 80068b8:	4631      	mov	r1, r6
 80068ba:	4628      	mov	r0, r5
 80068bc:	47b8      	blx	r7
 80068be:	3001      	adds	r0, #1
 80068c0:	d1c3      	bne.n	800684a <_printf_float+0x32e>
 80068c2:	e686      	b.n	80065d2 <_printf_float+0xb6>
 80068c4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80068c8:	f1ba 0f01 	cmp.w	sl, #1
 80068cc:	dc01      	bgt.n	80068d2 <_printf_float+0x3b6>
 80068ce:	07db      	lsls	r3, r3, #31
 80068d0:	d536      	bpl.n	8006940 <_printf_float+0x424>
 80068d2:	2301      	movs	r3, #1
 80068d4:	4642      	mov	r2, r8
 80068d6:	4631      	mov	r1, r6
 80068d8:	4628      	mov	r0, r5
 80068da:	47b8      	blx	r7
 80068dc:	3001      	adds	r0, #1
 80068de:	f43f ae78 	beq.w	80065d2 <_printf_float+0xb6>
 80068e2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80068e6:	4631      	mov	r1, r6
 80068e8:	4628      	mov	r0, r5
 80068ea:	47b8      	blx	r7
 80068ec:	3001      	adds	r0, #1
 80068ee:	f43f ae70 	beq.w	80065d2 <_printf_float+0xb6>
 80068f2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80068f6:	2200      	movs	r2, #0
 80068f8:	2300      	movs	r3, #0
 80068fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80068fe:	f7fa f8eb 	bl	8000ad8 <__aeabi_dcmpeq>
 8006902:	b9c0      	cbnz	r0, 8006936 <_printf_float+0x41a>
 8006904:	4653      	mov	r3, sl
 8006906:	f108 0201 	add.w	r2, r8, #1
 800690a:	4631      	mov	r1, r6
 800690c:	4628      	mov	r0, r5
 800690e:	47b8      	blx	r7
 8006910:	3001      	adds	r0, #1
 8006912:	d10c      	bne.n	800692e <_printf_float+0x412>
 8006914:	e65d      	b.n	80065d2 <_printf_float+0xb6>
 8006916:	2301      	movs	r3, #1
 8006918:	465a      	mov	r2, fp
 800691a:	4631      	mov	r1, r6
 800691c:	4628      	mov	r0, r5
 800691e:	47b8      	blx	r7
 8006920:	3001      	adds	r0, #1
 8006922:	f43f ae56 	beq.w	80065d2 <_printf_float+0xb6>
 8006926:	f108 0801 	add.w	r8, r8, #1
 800692a:	45d0      	cmp	r8, sl
 800692c:	dbf3      	blt.n	8006916 <_printf_float+0x3fa>
 800692e:	464b      	mov	r3, r9
 8006930:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8006934:	e6df      	b.n	80066f6 <_printf_float+0x1da>
 8006936:	f04f 0800 	mov.w	r8, #0
 800693a:	f104 0b1a 	add.w	fp, r4, #26
 800693e:	e7f4      	b.n	800692a <_printf_float+0x40e>
 8006940:	2301      	movs	r3, #1
 8006942:	4642      	mov	r2, r8
 8006944:	e7e1      	b.n	800690a <_printf_float+0x3ee>
 8006946:	2301      	movs	r3, #1
 8006948:	464a      	mov	r2, r9
 800694a:	4631      	mov	r1, r6
 800694c:	4628      	mov	r0, r5
 800694e:	47b8      	blx	r7
 8006950:	3001      	adds	r0, #1
 8006952:	f43f ae3e 	beq.w	80065d2 <_printf_float+0xb6>
 8006956:	f108 0801 	add.w	r8, r8, #1
 800695a:	68e3      	ldr	r3, [r4, #12]
 800695c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800695e:	1a5b      	subs	r3, r3, r1
 8006960:	4543      	cmp	r3, r8
 8006962:	dcf0      	bgt.n	8006946 <_printf_float+0x42a>
 8006964:	e6fc      	b.n	8006760 <_printf_float+0x244>
 8006966:	f04f 0800 	mov.w	r8, #0
 800696a:	f104 0919 	add.w	r9, r4, #25
 800696e:	e7f4      	b.n	800695a <_printf_float+0x43e>

08006970 <_printf_common>:
 8006970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006974:	4616      	mov	r6, r2
 8006976:	4698      	mov	r8, r3
 8006978:	688a      	ldr	r2, [r1, #8]
 800697a:	690b      	ldr	r3, [r1, #16]
 800697c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006980:	4293      	cmp	r3, r2
 8006982:	bfb8      	it	lt
 8006984:	4613      	movlt	r3, r2
 8006986:	6033      	str	r3, [r6, #0]
 8006988:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800698c:	4607      	mov	r7, r0
 800698e:	460c      	mov	r4, r1
 8006990:	b10a      	cbz	r2, 8006996 <_printf_common+0x26>
 8006992:	3301      	adds	r3, #1
 8006994:	6033      	str	r3, [r6, #0]
 8006996:	6823      	ldr	r3, [r4, #0]
 8006998:	0699      	lsls	r1, r3, #26
 800699a:	bf42      	ittt	mi
 800699c:	6833      	ldrmi	r3, [r6, #0]
 800699e:	3302      	addmi	r3, #2
 80069a0:	6033      	strmi	r3, [r6, #0]
 80069a2:	6825      	ldr	r5, [r4, #0]
 80069a4:	f015 0506 	ands.w	r5, r5, #6
 80069a8:	d106      	bne.n	80069b8 <_printf_common+0x48>
 80069aa:	f104 0a19 	add.w	sl, r4, #25
 80069ae:	68e3      	ldr	r3, [r4, #12]
 80069b0:	6832      	ldr	r2, [r6, #0]
 80069b2:	1a9b      	subs	r3, r3, r2
 80069b4:	42ab      	cmp	r3, r5
 80069b6:	dc26      	bgt.n	8006a06 <_printf_common+0x96>
 80069b8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80069bc:	6822      	ldr	r2, [r4, #0]
 80069be:	3b00      	subs	r3, #0
 80069c0:	bf18      	it	ne
 80069c2:	2301      	movne	r3, #1
 80069c4:	0692      	lsls	r2, r2, #26
 80069c6:	d42b      	bmi.n	8006a20 <_printf_common+0xb0>
 80069c8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80069cc:	4641      	mov	r1, r8
 80069ce:	4638      	mov	r0, r7
 80069d0:	47c8      	blx	r9
 80069d2:	3001      	adds	r0, #1
 80069d4:	d01e      	beq.n	8006a14 <_printf_common+0xa4>
 80069d6:	6823      	ldr	r3, [r4, #0]
 80069d8:	6922      	ldr	r2, [r4, #16]
 80069da:	f003 0306 	and.w	r3, r3, #6
 80069de:	2b04      	cmp	r3, #4
 80069e0:	bf02      	ittt	eq
 80069e2:	68e5      	ldreq	r5, [r4, #12]
 80069e4:	6833      	ldreq	r3, [r6, #0]
 80069e6:	1aed      	subeq	r5, r5, r3
 80069e8:	68a3      	ldr	r3, [r4, #8]
 80069ea:	bf0c      	ite	eq
 80069ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80069f0:	2500      	movne	r5, #0
 80069f2:	4293      	cmp	r3, r2
 80069f4:	bfc4      	itt	gt
 80069f6:	1a9b      	subgt	r3, r3, r2
 80069f8:	18ed      	addgt	r5, r5, r3
 80069fa:	2600      	movs	r6, #0
 80069fc:	341a      	adds	r4, #26
 80069fe:	42b5      	cmp	r5, r6
 8006a00:	d11a      	bne.n	8006a38 <_printf_common+0xc8>
 8006a02:	2000      	movs	r0, #0
 8006a04:	e008      	b.n	8006a18 <_printf_common+0xa8>
 8006a06:	2301      	movs	r3, #1
 8006a08:	4652      	mov	r2, sl
 8006a0a:	4641      	mov	r1, r8
 8006a0c:	4638      	mov	r0, r7
 8006a0e:	47c8      	blx	r9
 8006a10:	3001      	adds	r0, #1
 8006a12:	d103      	bne.n	8006a1c <_printf_common+0xac>
 8006a14:	f04f 30ff 	mov.w	r0, #4294967295
 8006a18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006a1c:	3501      	adds	r5, #1
 8006a1e:	e7c6      	b.n	80069ae <_printf_common+0x3e>
 8006a20:	18e1      	adds	r1, r4, r3
 8006a22:	1c5a      	adds	r2, r3, #1
 8006a24:	2030      	movs	r0, #48	@ 0x30
 8006a26:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8006a2a:	4422      	add	r2, r4
 8006a2c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006a30:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006a34:	3302      	adds	r3, #2
 8006a36:	e7c7      	b.n	80069c8 <_printf_common+0x58>
 8006a38:	2301      	movs	r3, #1
 8006a3a:	4622      	mov	r2, r4
 8006a3c:	4641      	mov	r1, r8
 8006a3e:	4638      	mov	r0, r7
 8006a40:	47c8      	blx	r9
 8006a42:	3001      	adds	r0, #1
 8006a44:	d0e6      	beq.n	8006a14 <_printf_common+0xa4>
 8006a46:	3601      	adds	r6, #1
 8006a48:	e7d9      	b.n	80069fe <_printf_common+0x8e>
	...

08006a4c <_printf_i>:
 8006a4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006a50:	7e0f      	ldrb	r7, [r1, #24]
 8006a52:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006a54:	2f78      	cmp	r7, #120	@ 0x78
 8006a56:	4691      	mov	r9, r2
 8006a58:	4680      	mov	r8, r0
 8006a5a:	460c      	mov	r4, r1
 8006a5c:	469a      	mov	sl, r3
 8006a5e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006a62:	d807      	bhi.n	8006a74 <_printf_i+0x28>
 8006a64:	2f62      	cmp	r7, #98	@ 0x62
 8006a66:	d80a      	bhi.n	8006a7e <_printf_i+0x32>
 8006a68:	2f00      	cmp	r7, #0
 8006a6a:	f000 80d2 	beq.w	8006c12 <_printf_i+0x1c6>
 8006a6e:	2f58      	cmp	r7, #88	@ 0x58
 8006a70:	f000 80b9 	beq.w	8006be6 <_printf_i+0x19a>
 8006a74:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006a78:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8006a7c:	e03a      	b.n	8006af4 <_printf_i+0xa8>
 8006a7e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006a82:	2b15      	cmp	r3, #21
 8006a84:	d8f6      	bhi.n	8006a74 <_printf_i+0x28>
 8006a86:	a101      	add	r1, pc, #4	@ (adr r1, 8006a8c <_printf_i+0x40>)
 8006a88:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006a8c:	08006ae5 	.word	0x08006ae5
 8006a90:	08006af9 	.word	0x08006af9
 8006a94:	08006a75 	.word	0x08006a75
 8006a98:	08006a75 	.word	0x08006a75
 8006a9c:	08006a75 	.word	0x08006a75
 8006aa0:	08006a75 	.word	0x08006a75
 8006aa4:	08006af9 	.word	0x08006af9
 8006aa8:	08006a75 	.word	0x08006a75
 8006aac:	08006a75 	.word	0x08006a75
 8006ab0:	08006a75 	.word	0x08006a75
 8006ab4:	08006a75 	.word	0x08006a75
 8006ab8:	08006bf9 	.word	0x08006bf9
 8006abc:	08006b23 	.word	0x08006b23
 8006ac0:	08006bb3 	.word	0x08006bb3
 8006ac4:	08006a75 	.word	0x08006a75
 8006ac8:	08006a75 	.word	0x08006a75
 8006acc:	08006c1b 	.word	0x08006c1b
 8006ad0:	08006a75 	.word	0x08006a75
 8006ad4:	08006b23 	.word	0x08006b23
 8006ad8:	08006a75 	.word	0x08006a75
 8006adc:	08006a75 	.word	0x08006a75
 8006ae0:	08006bbb 	.word	0x08006bbb
 8006ae4:	6833      	ldr	r3, [r6, #0]
 8006ae6:	1d1a      	adds	r2, r3, #4
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	6032      	str	r2, [r6, #0]
 8006aec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006af0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006af4:	2301      	movs	r3, #1
 8006af6:	e09d      	b.n	8006c34 <_printf_i+0x1e8>
 8006af8:	6833      	ldr	r3, [r6, #0]
 8006afa:	6820      	ldr	r0, [r4, #0]
 8006afc:	1d19      	adds	r1, r3, #4
 8006afe:	6031      	str	r1, [r6, #0]
 8006b00:	0606      	lsls	r6, r0, #24
 8006b02:	d501      	bpl.n	8006b08 <_printf_i+0xbc>
 8006b04:	681d      	ldr	r5, [r3, #0]
 8006b06:	e003      	b.n	8006b10 <_printf_i+0xc4>
 8006b08:	0645      	lsls	r5, r0, #25
 8006b0a:	d5fb      	bpl.n	8006b04 <_printf_i+0xb8>
 8006b0c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006b10:	2d00      	cmp	r5, #0
 8006b12:	da03      	bge.n	8006b1c <_printf_i+0xd0>
 8006b14:	232d      	movs	r3, #45	@ 0x2d
 8006b16:	426d      	negs	r5, r5
 8006b18:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006b1c:	4859      	ldr	r0, [pc, #356]	@ (8006c84 <_printf_i+0x238>)
 8006b1e:	230a      	movs	r3, #10
 8006b20:	e011      	b.n	8006b46 <_printf_i+0xfa>
 8006b22:	6821      	ldr	r1, [r4, #0]
 8006b24:	6833      	ldr	r3, [r6, #0]
 8006b26:	0608      	lsls	r0, r1, #24
 8006b28:	f853 5b04 	ldr.w	r5, [r3], #4
 8006b2c:	d402      	bmi.n	8006b34 <_printf_i+0xe8>
 8006b2e:	0649      	lsls	r1, r1, #25
 8006b30:	bf48      	it	mi
 8006b32:	b2ad      	uxthmi	r5, r5
 8006b34:	2f6f      	cmp	r7, #111	@ 0x6f
 8006b36:	4853      	ldr	r0, [pc, #332]	@ (8006c84 <_printf_i+0x238>)
 8006b38:	6033      	str	r3, [r6, #0]
 8006b3a:	bf14      	ite	ne
 8006b3c:	230a      	movne	r3, #10
 8006b3e:	2308      	moveq	r3, #8
 8006b40:	2100      	movs	r1, #0
 8006b42:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8006b46:	6866      	ldr	r6, [r4, #4]
 8006b48:	60a6      	str	r6, [r4, #8]
 8006b4a:	2e00      	cmp	r6, #0
 8006b4c:	bfa2      	ittt	ge
 8006b4e:	6821      	ldrge	r1, [r4, #0]
 8006b50:	f021 0104 	bicge.w	r1, r1, #4
 8006b54:	6021      	strge	r1, [r4, #0]
 8006b56:	b90d      	cbnz	r5, 8006b5c <_printf_i+0x110>
 8006b58:	2e00      	cmp	r6, #0
 8006b5a:	d04b      	beq.n	8006bf4 <_printf_i+0x1a8>
 8006b5c:	4616      	mov	r6, r2
 8006b5e:	fbb5 f1f3 	udiv	r1, r5, r3
 8006b62:	fb03 5711 	mls	r7, r3, r1, r5
 8006b66:	5dc7      	ldrb	r7, [r0, r7]
 8006b68:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8006b6c:	462f      	mov	r7, r5
 8006b6e:	42bb      	cmp	r3, r7
 8006b70:	460d      	mov	r5, r1
 8006b72:	d9f4      	bls.n	8006b5e <_printf_i+0x112>
 8006b74:	2b08      	cmp	r3, #8
 8006b76:	d10b      	bne.n	8006b90 <_printf_i+0x144>
 8006b78:	6823      	ldr	r3, [r4, #0]
 8006b7a:	07df      	lsls	r7, r3, #31
 8006b7c:	d508      	bpl.n	8006b90 <_printf_i+0x144>
 8006b7e:	6923      	ldr	r3, [r4, #16]
 8006b80:	6861      	ldr	r1, [r4, #4]
 8006b82:	4299      	cmp	r1, r3
 8006b84:	bfde      	ittt	le
 8006b86:	2330      	movle	r3, #48	@ 0x30
 8006b88:	f806 3c01 	strble.w	r3, [r6, #-1]
 8006b8c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8006b90:	1b92      	subs	r2, r2, r6
 8006b92:	6122      	str	r2, [r4, #16]
 8006b94:	f8cd a000 	str.w	sl, [sp]
 8006b98:	464b      	mov	r3, r9
 8006b9a:	aa03      	add	r2, sp, #12
 8006b9c:	4621      	mov	r1, r4
 8006b9e:	4640      	mov	r0, r8
 8006ba0:	f7ff fee6 	bl	8006970 <_printf_common>
 8006ba4:	3001      	adds	r0, #1
 8006ba6:	d14a      	bne.n	8006c3e <_printf_i+0x1f2>
 8006ba8:	f04f 30ff 	mov.w	r0, #4294967295
 8006bac:	b004      	add	sp, #16
 8006bae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006bb2:	6823      	ldr	r3, [r4, #0]
 8006bb4:	f043 0320 	orr.w	r3, r3, #32
 8006bb8:	6023      	str	r3, [r4, #0]
 8006bba:	4833      	ldr	r0, [pc, #204]	@ (8006c88 <_printf_i+0x23c>)
 8006bbc:	2778      	movs	r7, #120	@ 0x78
 8006bbe:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8006bc2:	6823      	ldr	r3, [r4, #0]
 8006bc4:	6831      	ldr	r1, [r6, #0]
 8006bc6:	061f      	lsls	r7, r3, #24
 8006bc8:	f851 5b04 	ldr.w	r5, [r1], #4
 8006bcc:	d402      	bmi.n	8006bd4 <_printf_i+0x188>
 8006bce:	065f      	lsls	r7, r3, #25
 8006bd0:	bf48      	it	mi
 8006bd2:	b2ad      	uxthmi	r5, r5
 8006bd4:	6031      	str	r1, [r6, #0]
 8006bd6:	07d9      	lsls	r1, r3, #31
 8006bd8:	bf44      	itt	mi
 8006bda:	f043 0320 	orrmi.w	r3, r3, #32
 8006bde:	6023      	strmi	r3, [r4, #0]
 8006be0:	b11d      	cbz	r5, 8006bea <_printf_i+0x19e>
 8006be2:	2310      	movs	r3, #16
 8006be4:	e7ac      	b.n	8006b40 <_printf_i+0xf4>
 8006be6:	4827      	ldr	r0, [pc, #156]	@ (8006c84 <_printf_i+0x238>)
 8006be8:	e7e9      	b.n	8006bbe <_printf_i+0x172>
 8006bea:	6823      	ldr	r3, [r4, #0]
 8006bec:	f023 0320 	bic.w	r3, r3, #32
 8006bf0:	6023      	str	r3, [r4, #0]
 8006bf2:	e7f6      	b.n	8006be2 <_printf_i+0x196>
 8006bf4:	4616      	mov	r6, r2
 8006bf6:	e7bd      	b.n	8006b74 <_printf_i+0x128>
 8006bf8:	6833      	ldr	r3, [r6, #0]
 8006bfa:	6825      	ldr	r5, [r4, #0]
 8006bfc:	6961      	ldr	r1, [r4, #20]
 8006bfe:	1d18      	adds	r0, r3, #4
 8006c00:	6030      	str	r0, [r6, #0]
 8006c02:	062e      	lsls	r6, r5, #24
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	d501      	bpl.n	8006c0c <_printf_i+0x1c0>
 8006c08:	6019      	str	r1, [r3, #0]
 8006c0a:	e002      	b.n	8006c12 <_printf_i+0x1c6>
 8006c0c:	0668      	lsls	r0, r5, #25
 8006c0e:	d5fb      	bpl.n	8006c08 <_printf_i+0x1bc>
 8006c10:	8019      	strh	r1, [r3, #0]
 8006c12:	2300      	movs	r3, #0
 8006c14:	6123      	str	r3, [r4, #16]
 8006c16:	4616      	mov	r6, r2
 8006c18:	e7bc      	b.n	8006b94 <_printf_i+0x148>
 8006c1a:	6833      	ldr	r3, [r6, #0]
 8006c1c:	1d1a      	adds	r2, r3, #4
 8006c1e:	6032      	str	r2, [r6, #0]
 8006c20:	681e      	ldr	r6, [r3, #0]
 8006c22:	6862      	ldr	r2, [r4, #4]
 8006c24:	2100      	movs	r1, #0
 8006c26:	4630      	mov	r0, r6
 8006c28:	f7f9 fada 	bl	80001e0 <memchr>
 8006c2c:	b108      	cbz	r0, 8006c32 <_printf_i+0x1e6>
 8006c2e:	1b80      	subs	r0, r0, r6
 8006c30:	6060      	str	r0, [r4, #4]
 8006c32:	6863      	ldr	r3, [r4, #4]
 8006c34:	6123      	str	r3, [r4, #16]
 8006c36:	2300      	movs	r3, #0
 8006c38:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006c3c:	e7aa      	b.n	8006b94 <_printf_i+0x148>
 8006c3e:	6923      	ldr	r3, [r4, #16]
 8006c40:	4632      	mov	r2, r6
 8006c42:	4649      	mov	r1, r9
 8006c44:	4640      	mov	r0, r8
 8006c46:	47d0      	blx	sl
 8006c48:	3001      	adds	r0, #1
 8006c4a:	d0ad      	beq.n	8006ba8 <_printf_i+0x15c>
 8006c4c:	6823      	ldr	r3, [r4, #0]
 8006c4e:	079b      	lsls	r3, r3, #30
 8006c50:	d413      	bmi.n	8006c7a <_printf_i+0x22e>
 8006c52:	68e0      	ldr	r0, [r4, #12]
 8006c54:	9b03      	ldr	r3, [sp, #12]
 8006c56:	4298      	cmp	r0, r3
 8006c58:	bfb8      	it	lt
 8006c5a:	4618      	movlt	r0, r3
 8006c5c:	e7a6      	b.n	8006bac <_printf_i+0x160>
 8006c5e:	2301      	movs	r3, #1
 8006c60:	4632      	mov	r2, r6
 8006c62:	4649      	mov	r1, r9
 8006c64:	4640      	mov	r0, r8
 8006c66:	47d0      	blx	sl
 8006c68:	3001      	adds	r0, #1
 8006c6a:	d09d      	beq.n	8006ba8 <_printf_i+0x15c>
 8006c6c:	3501      	adds	r5, #1
 8006c6e:	68e3      	ldr	r3, [r4, #12]
 8006c70:	9903      	ldr	r1, [sp, #12]
 8006c72:	1a5b      	subs	r3, r3, r1
 8006c74:	42ab      	cmp	r3, r5
 8006c76:	dcf2      	bgt.n	8006c5e <_printf_i+0x212>
 8006c78:	e7eb      	b.n	8006c52 <_printf_i+0x206>
 8006c7a:	2500      	movs	r5, #0
 8006c7c:	f104 0619 	add.w	r6, r4, #25
 8006c80:	e7f5      	b.n	8006c6e <_printf_i+0x222>
 8006c82:	bf00      	nop
 8006c84:	0800924a 	.word	0x0800924a
 8006c88:	0800925b 	.word	0x0800925b

08006c8c <std>:
 8006c8c:	2300      	movs	r3, #0
 8006c8e:	b510      	push	{r4, lr}
 8006c90:	4604      	mov	r4, r0
 8006c92:	e9c0 3300 	strd	r3, r3, [r0]
 8006c96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006c9a:	6083      	str	r3, [r0, #8]
 8006c9c:	8181      	strh	r1, [r0, #12]
 8006c9e:	6643      	str	r3, [r0, #100]	@ 0x64
 8006ca0:	81c2      	strh	r2, [r0, #14]
 8006ca2:	6183      	str	r3, [r0, #24]
 8006ca4:	4619      	mov	r1, r3
 8006ca6:	2208      	movs	r2, #8
 8006ca8:	305c      	adds	r0, #92	@ 0x5c
 8006caa:	f000 f914 	bl	8006ed6 <memset>
 8006cae:	4b0d      	ldr	r3, [pc, #52]	@ (8006ce4 <std+0x58>)
 8006cb0:	6263      	str	r3, [r4, #36]	@ 0x24
 8006cb2:	4b0d      	ldr	r3, [pc, #52]	@ (8006ce8 <std+0x5c>)
 8006cb4:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006cb6:	4b0d      	ldr	r3, [pc, #52]	@ (8006cec <std+0x60>)
 8006cb8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006cba:	4b0d      	ldr	r3, [pc, #52]	@ (8006cf0 <std+0x64>)
 8006cbc:	6323      	str	r3, [r4, #48]	@ 0x30
 8006cbe:	4b0d      	ldr	r3, [pc, #52]	@ (8006cf4 <std+0x68>)
 8006cc0:	6224      	str	r4, [r4, #32]
 8006cc2:	429c      	cmp	r4, r3
 8006cc4:	d006      	beq.n	8006cd4 <std+0x48>
 8006cc6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006cca:	4294      	cmp	r4, r2
 8006ccc:	d002      	beq.n	8006cd4 <std+0x48>
 8006cce:	33d0      	adds	r3, #208	@ 0xd0
 8006cd0:	429c      	cmp	r4, r3
 8006cd2:	d105      	bne.n	8006ce0 <std+0x54>
 8006cd4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006cd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006cdc:	f000 b9f0 	b.w	80070c0 <__retarget_lock_init_recursive>
 8006ce0:	bd10      	pop	{r4, pc}
 8006ce2:	bf00      	nop
 8006ce4:	08006e51 	.word	0x08006e51
 8006ce8:	08006e73 	.word	0x08006e73
 8006cec:	08006eab 	.word	0x08006eab
 8006cf0:	08006ecf 	.word	0x08006ecf
 8006cf4:	200004d8 	.word	0x200004d8

08006cf8 <stdio_exit_handler>:
 8006cf8:	4a02      	ldr	r2, [pc, #8]	@ (8006d04 <stdio_exit_handler+0xc>)
 8006cfa:	4903      	ldr	r1, [pc, #12]	@ (8006d08 <stdio_exit_handler+0x10>)
 8006cfc:	4803      	ldr	r0, [pc, #12]	@ (8006d0c <stdio_exit_handler+0x14>)
 8006cfe:	f000 b869 	b.w	8006dd4 <_fwalk_sglue>
 8006d02:	bf00      	nop
 8006d04:	2000000c 	.word	0x2000000c
 8006d08:	08008901 	.word	0x08008901
 8006d0c:	2000001c 	.word	0x2000001c

08006d10 <cleanup_stdio>:
 8006d10:	6841      	ldr	r1, [r0, #4]
 8006d12:	4b0c      	ldr	r3, [pc, #48]	@ (8006d44 <cleanup_stdio+0x34>)
 8006d14:	4299      	cmp	r1, r3
 8006d16:	b510      	push	{r4, lr}
 8006d18:	4604      	mov	r4, r0
 8006d1a:	d001      	beq.n	8006d20 <cleanup_stdio+0x10>
 8006d1c:	f001 fdf0 	bl	8008900 <_fflush_r>
 8006d20:	68a1      	ldr	r1, [r4, #8]
 8006d22:	4b09      	ldr	r3, [pc, #36]	@ (8006d48 <cleanup_stdio+0x38>)
 8006d24:	4299      	cmp	r1, r3
 8006d26:	d002      	beq.n	8006d2e <cleanup_stdio+0x1e>
 8006d28:	4620      	mov	r0, r4
 8006d2a:	f001 fde9 	bl	8008900 <_fflush_r>
 8006d2e:	68e1      	ldr	r1, [r4, #12]
 8006d30:	4b06      	ldr	r3, [pc, #24]	@ (8006d4c <cleanup_stdio+0x3c>)
 8006d32:	4299      	cmp	r1, r3
 8006d34:	d004      	beq.n	8006d40 <cleanup_stdio+0x30>
 8006d36:	4620      	mov	r0, r4
 8006d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d3c:	f001 bde0 	b.w	8008900 <_fflush_r>
 8006d40:	bd10      	pop	{r4, pc}
 8006d42:	bf00      	nop
 8006d44:	200004d8 	.word	0x200004d8
 8006d48:	20000540 	.word	0x20000540
 8006d4c:	200005a8 	.word	0x200005a8

08006d50 <global_stdio_init.part.0>:
 8006d50:	b510      	push	{r4, lr}
 8006d52:	4b0b      	ldr	r3, [pc, #44]	@ (8006d80 <global_stdio_init.part.0+0x30>)
 8006d54:	4c0b      	ldr	r4, [pc, #44]	@ (8006d84 <global_stdio_init.part.0+0x34>)
 8006d56:	4a0c      	ldr	r2, [pc, #48]	@ (8006d88 <global_stdio_init.part.0+0x38>)
 8006d58:	601a      	str	r2, [r3, #0]
 8006d5a:	4620      	mov	r0, r4
 8006d5c:	2200      	movs	r2, #0
 8006d5e:	2104      	movs	r1, #4
 8006d60:	f7ff ff94 	bl	8006c8c <std>
 8006d64:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8006d68:	2201      	movs	r2, #1
 8006d6a:	2109      	movs	r1, #9
 8006d6c:	f7ff ff8e 	bl	8006c8c <std>
 8006d70:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8006d74:	2202      	movs	r2, #2
 8006d76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d7a:	2112      	movs	r1, #18
 8006d7c:	f7ff bf86 	b.w	8006c8c <std>
 8006d80:	20000610 	.word	0x20000610
 8006d84:	200004d8 	.word	0x200004d8
 8006d88:	08006cf9 	.word	0x08006cf9

08006d8c <__sfp_lock_acquire>:
 8006d8c:	4801      	ldr	r0, [pc, #4]	@ (8006d94 <__sfp_lock_acquire+0x8>)
 8006d8e:	f000 b998 	b.w	80070c2 <__retarget_lock_acquire_recursive>
 8006d92:	bf00      	nop
 8006d94:	20000619 	.word	0x20000619

08006d98 <__sfp_lock_release>:
 8006d98:	4801      	ldr	r0, [pc, #4]	@ (8006da0 <__sfp_lock_release+0x8>)
 8006d9a:	f000 b993 	b.w	80070c4 <__retarget_lock_release_recursive>
 8006d9e:	bf00      	nop
 8006da0:	20000619 	.word	0x20000619

08006da4 <__sinit>:
 8006da4:	b510      	push	{r4, lr}
 8006da6:	4604      	mov	r4, r0
 8006da8:	f7ff fff0 	bl	8006d8c <__sfp_lock_acquire>
 8006dac:	6a23      	ldr	r3, [r4, #32]
 8006dae:	b11b      	cbz	r3, 8006db8 <__sinit+0x14>
 8006db0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006db4:	f7ff bff0 	b.w	8006d98 <__sfp_lock_release>
 8006db8:	4b04      	ldr	r3, [pc, #16]	@ (8006dcc <__sinit+0x28>)
 8006dba:	6223      	str	r3, [r4, #32]
 8006dbc:	4b04      	ldr	r3, [pc, #16]	@ (8006dd0 <__sinit+0x2c>)
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d1f5      	bne.n	8006db0 <__sinit+0xc>
 8006dc4:	f7ff ffc4 	bl	8006d50 <global_stdio_init.part.0>
 8006dc8:	e7f2      	b.n	8006db0 <__sinit+0xc>
 8006dca:	bf00      	nop
 8006dcc:	08006d11 	.word	0x08006d11
 8006dd0:	20000610 	.word	0x20000610

08006dd4 <_fwalk_sglue>:
 8006dd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006dd8:	4607      	mov	r7, r0
 8006dda:	4688      	mov	r8, r1
 8006ddc:	4614      	mov	r4, r2
 8006dde:	2600      	movs	r6, #0
 8006de0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006de4:	f1b9 0901 	subs.w	r9, r9, #1
 8006de8:	d505      	bpl.n	8006df6 <_fwalk_sglue+0x22>
 8006dea:	6824      	ldr	r4, [r4, #0]
 8006dec:	2c00      	cmp	r4, #0
 8006dee:	d1f7      	bne.n	8006de0 <_fwalk_sglue+0xc>
 8006df0:	4630      	mov	r0, r6
 8006df2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006df6:	89ab      	ldrh	r3, [r5, #12]
 8006df8:	2b01      	cmp	r3, #1
 8006dfa:	d907      	bls.n	8006e0c <_fwalk_sglue+0x38>
 8006dfc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006e00:	3301      	adds	r3, #1
 8006e02:	d003      	beq.n	8006e0c <_fwalk_sglue+0x38>
 8006e04:	4629      	mov	r1, r5
 8006e06:	4638      	mov	r0, r7
 8006e08:	47c0      	blx	r8
 8006e0a:	4306      	orrs	r6, r0
 8006e0c:	3568      	adds	r5, #104	@ 0x68
 8006e0e:	e7e9      	b.n	8006de4 <_fwalk_sglue+0x10>

08006e10 <siprintf>:
 8006e10:	b40e      	push	{r1, r2, r3}
 8006e12:	b500      	push	{lr}
 8006e14:	b09c      	sub	sp, #112	@ 0x70
 8006e16:	ab1d      	add	r3, sp, #116	@ 0x74
 8006e18:	9002      	str	r0, [sp, #8]
 8006e1a:	9006      	str	r0, [sp, #24]
 8006e1c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8006e20:	4809      	ldr	r0, [pc, #36]	@ (8006e48 <siprintf+0x38>)
 8006e22:	9107      	str	r1, [sp, #28]
 8006e24:	9104      	str	r1, [sp, #16]
 8006e26:	4909      	ldr	r1, [pc, #36]	@ (8006e4c <siprintf+0x3c>)
 8006e28:	f853 2b04 	ldr.w	r2, [r3], #4
 8006e2c:	9105      	str	r1, [sp, #20]
 8006e2e:	6800      	ldr	r0, [r0, #0]
 8006e30:	9301      	str	r3, [sp, #4]
 8006e32:	a902      	add	r1, sp, #8
 8006e34:	f001 fbe4 	bl	8008600 <_svfiprintf_r>
 8006e38:	9b02      	ldr	r3, [sp, #8]
 8006e3a:	2200      	movs	r2, #0
 8006e3c:	701a      	strb	r2, [r3, #0]
 8006e3e:	b01c      	add	sp, #112	@ 0x70
 8006e40:	f85d eb04 	ldr.w	lr, [sp], #4
 8006e44:	b003      	add	sp, #12
 8006e46:	4770      	bx	lr
 8006e48:	20000018 	.word	0x20000018
 8006e4c:	ffff0208 	.word	0xffff0208

08006e50 <__sread>:
 8006e50:	b510      	push	{r4, lr}
 8006e52:	460c      	mov	r4, r1
 8006e54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006e58:	f000 f8d4 	bl	8007004 <_read_r>
 8006e5c:	2800      	cmp	r0, #0
 8006e5e:	bfab      	itete	ge
 8006e60:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8006e62:	89a3      	ldrhlt	r3, [r4, #12]
 8006e64:	181b      	addge	r3, r3, r0
 8006e66:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006e6a:	bfac      	ite	ge
 8006e6c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8006e6e:	81a3      	strhlt	r3, [r4, #12]
 8006e70:	bd10      	pop	{r4, pc}

08006e72 <__swrite>:
 8006e72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e76:	461f      	mov	r7, r3
 8006e78:	898b      	ldrh	r3, [r1, #12]
 8006e7a:	05db      	lsls	r3, r3, #23
 8006e7c:	4605      	mov	r5, r0
 8006e7e:	460c      	mov	r4, r1
 8006e80:	4616      	mov	r6, r2
 8006e82:	d505      	bpl.n	8006e90 <__swrite+0x1e>
 8006e84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006e88:	2302      	movs	r3, #2
 8006e8a:	2200      	movs	r2, #0
 8006e8c:	f000 f8a8 	bl	8006fe0 <_lseek_r>
 8006e90:	89a3      	ldrh	r3, [r4, #12]
 8006e92:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006e96:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006e9a:	81a3      	strh	r3, [r4, #12]
 8006e9c:	4632      	mov	r2, r6
 8006e9e:	463b      	mov	r3, r7
 8006ea0:	4628      	mov	r0, r5
 8006ea2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006ea6:	f000 b8cf 	b.w	8007048 <_write_r>

08006eaa <__sseek>:
 8006eaa:	b510      	push	{r4, lr}
 8006eac:	460c      	mov	r4, r1
 8006eae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006eb2:	f000 f895 	bl	8006fe0 <_lseek_r>
 8006eb6:	1c43      	adds	r3, r0, #1
 8006eb8:	89a3      	ldrh	r3, [r4, #12]
 8006eba:	bf15      	itete	ne
 8006ebc:	6560      	strne	r0, [r4, #84]	@ 0x54
 8006ebe:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8006ec2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8006ec6:	81a3      	strheq	r3, [r4, #12]
 8006ec8:	bf18      	it	ne
 8006eca:	81a3      	strhne	r3, [r4, #12]
 8006ecc:	bd10      	pop	{r4, pc}

08006ece <__sclose>:
 8006ece:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ed2:	f000 b875 	b.w	8006fc0 <_close_r>

08006ed6 <memset>:
 8006ed6:	4402      	add	r2, r0
 8006ed8:	4603      	mov	r3, r0
 8006eda:	4293      	cmp	r3, r2
 8006edc:	d100      	bne.n	8006ee0 <memset+0xa>
 8006ede:	4770      	bx	lr
 8006ee0:	f803 1b01 	strb.w	r1, [r3], #1
 8006ee4:	e7f9      	b.n	8006eda <memset+0x4>

08006ee6 <strchr>:
 8006ee6:	b2c9      	uxtb	r1, r1
 8006ee8:	4603      	mov	r3, r0
 8006eea:	4618      	mov	r0, r3
 8006eec:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006ef0:	b112      	cbz	r2, 8006ef8 <strchr+0x12>
 8006ef2:	428a      	cmp	r2, r1
 8006ef4:	d1f9      	bne.n	8006eea <strchr+0x4>
 8006ef6:	4770      	bx	lr
 8006ef8:	2900      	cmp	r1, #0
 8006efa:	bf18      	it	ne
 8006efc:	2000      	movne	r0, #0
 8006efe:	4770      	bx	lr

08006f00 <strtok>:
 8006f00:	4b16      	ldr	r3, [pc, #88]	@ (8006f5c <strtok+0x5c>)
 8006f02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f06:	681f      	ldr	r7, [r3, #0]
 8006f08:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 8006f0a:	4605      	mov	r5, r0
 8006f0c:	460e      	mov	r6, r1
 8006f0e:	b9ec      	cbnz	r4, 8006f4c <strtok+0x4c>
 8006f10:	2050      	movs	r0, #80	@ 0x50
 8006f12:	f7ff f9a5 	bl	8006260 <malloc>
 8006f16:	4602      	mov	r2, r0
 8006f18:	6478      	str	r0, [r7, #68]	@ 0x44
 8006f1a:	b920      	cbnz	r0, 8006f26 <strtok+0x26>
 8006f1c:	4b10      	ldr	r3, [pc, #64]	@ (8006f60 <strtok+0x60>)
 8006f1e:	4811      	ldr	r0, [pc, #68]	@ (8006f64 <strtok+0x64>)
 8006f20:	215b      	movs	r1, #91	@ 0x5b
 8006f22:	f000 f8d9 	bl	80070d8 <__assert_func>
 8006f26:	e9c0 4400 	strd	r4, r4, [r0]
 8006f2a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8006f2e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8006f32:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 8006f36:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 8006f3a:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 8006f3e:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 8006f42:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 8006f46:	6184      	str	r4, [r0, #24]
 8006f48:	7704      	strb	r4, [r0, #28]
 8006f4a:	6244      	str	r4, [r0, #36]	@ 0x24
 8006f4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006f4e:	4631      	mov	r1, r6
 8006f50:	4628      	mov	r0, r5
 8006f52:	2301      	movs	r3, #1
 8006f54:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006f58:	f000 b806 	b.w	8006f68 <__strtok_r>
 8006f5c:	20000018 	.word	0x20000018
 8006f60:	0800926c 	.word	0x0800926c
 8006f64:	08009283 	.word	0x08009283

08006f68 <__strtok_r>:
 8006f68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f6a:	4604      	mov	r4, r0
 8006f6c:	b908      	cbnz	r0, 8006f72 <__strtok_r+0xa>
 8006f6e:	6814      	ldr	r4, [r2, #0]
 8006f70:	b144      	cbz	r4, 8006f84 <__strtok_r+0x1c>
 8006f72:	4620      	mov	r0, r4
 8006f74:	f814 5b01 	ldrb.w	r5, [r4], #1
 8006f78:	460f      	mov	r7, r1
 8006f7a:	f817 6b01 	ldrb.w	r6, [r7], #1
 8006f7e:	b91e      	cbnz	r6, 8006f88 <__strtok_r+0x20>
 8006f80:	b965      	cbnz	r5, 8006f9c <__strtok_r+0x34>
 8006f82:	6015      	str	r5, [r2, #0]
 8006f84:	2000      	movs	r0, #0
 8006f86:	e005      	b.n	8006f94 <__strtok_r+0x2c>
 8006f88:	42b5      	cmp	r5, r6
 8006f8a:	d1f6      	bne.n	8006f7a <__strtok_r+0x12>
 8006f8c:	2b00      	cmp	r3, #0
 8006f8e:	d1f0      	bne.n	8006f72 <__strtok_r+0xa>
 8006f90:	6014      	str	r4, [r2, #0]
 8006f92:	7003      	strb	r3, [r0, #0]
 8006f94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006f96:	461c      	mov	r4, r3
 8006f98:	e00c      	b.n	8006fb4 <__strtok_r+0x4c>
 8006f9a:	b915      	cbnz	r5, 8006fa2 <__strtok_r+0x3a>
 8006f9c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006fa0:	460e      	mov	r6, r1
 8006fa2:	f816 5b01 	ldrb.w	r5, [r6], #1
 8006fa6:	42ab      	cmp	r3, r5
 8006fa8:	d1f7      	bne.n	8006f9a <__strtok_r+0x32>
 8006faa:	2b00      	cmp	r3, #0
 8006fac:	d0f3      	beq.n	8006f96 <__strtok_r+0x2e>
 8006fae:	2300      	movs	r3, #0
 8006fb0:	f804 3c01 	strb.w	r3, [r4, #-1]
 8006fb4:	6014      	str	r4, [r2, #0]
 8006fb6:	e7ed      	b.n	8006f94 <__strtok_r+0x2c>

08006fb8 <_localeconv_r>:
 8006fb8:	4800      	ldr	r0, [pc, #0]	@ (8006fbc <_localeconv_r+0x4>)
 8006fba:	4770      	bx	lr
 8006fbc:	20000158 	.word	0x20000158

08006fc0 <_close_r>:
 8006fc0:	b538      	push	{r3, r4, r5, lr}
 8006fc2:	4d06      	ldr	r5, [pc, #24]	@ (8006fdc <_close_r+0x1c>)
 8006fc4:	2300      	movs	r3, #0
 8006fc6:	4604      	mov	r4, r0
 8006fc8:	4608      	mov	r0, r1
 8006fca:	602b      	str	r3, [r5, #0]
 8006fcc:	f7fb f8c4 	bl	8002158 <_close>
 8006fd0:	1c43      	adds	r3, r0, #1
 8006fd2:	d102      	bne.n	8006fda <_close_r+0x1a>
 8006fd4:	682b      	ldr	r3, [r5, #0]
 8006fd6:	b103      	cbz	r3, 8006fda <_close_r+0x1a>
 8006fd8:	6023      	str	r3, [r4, #0]
 8006fda:	bd38      	pop	{r3, r4, r5, pc}
 8006fdc:	20000614 	.word	0x20000614

08006fe0 <_lseek_r>:
 8006fe0:	b538      	push	{r3, r4, r5, lr}
 8006fe2:	4d07      	ldr	r5, [pc, #28]	@ (8007000 <_lseek_r+0x20>)
 8006fe4:	4604      	mov	r4, r0
 8006fe6:	4608      	mov	r0, r1
 8006fe8:	4611      	mov	r1, r2
 8006fea:	2200      	movs	r2, #0
 8006fec:	602a      	str	r2, [r5, #0]
 8006fee:	461a      	mov	r2, r3
 8006ff0:	f7fb f8d9 	bl	80021a6 <_lseek>
 8006ff4:	1c43      	adds	r3, r0, #1
 8006ff6:	d102      	bne.n	8006ffe <_lseek_r+0x1e>
 8006ff8:	682b      	ldr	r3, [r5, #0]
 8006ffa:	b103      	cbz	r3, 8006ffe <_lseek_r+0x1e>
 8006ffc:	6023      	str	r3, [r4, #0]
 8006ffe:	bd38      	pop	{r3, r4, r5, pc}
 8007000:	20000614 	.word	0x20000614

08007004 <_read_r>:
 8007004:	b538      	push	{r3, r4, r5, lr}
 8007006:	4d07      	ldr	r5, [pc, #28]	@ (8007024 <_read_r+0x20>)
 8007008:	4604      	mov	r4, r0
 800700a:	4608      	mov	r0, r1
 800700c:	4611      	mov	r1, r2
 800700e:	2200      	movs	r2, #0
 8007010:	602a      	str	r2, [r5, #0]
 8007012:	461a      	mov	r2, r3
 8007014:	f7fb f867 	bl	80020e6 <_read>
 8007018:	1c43      	adds	r3, r0, #1
 800701a:	d102      	bne.n	8007022 <_read_r+0x1e>
 800701c:	682b      	ldr	r3, [r5, #0]
 800701e:	b103      	cbz	r3, 8007022 <_read_r+0x1e>
 8007020:	6023      	str	r3, [r4, #0]
 8007022:	bd38      	pop	{r3, r4, r5, pc}
 8007024:	20000614 	.word	0x20000614

08007028 <_sbrk_r>:
 8007028:	b538      	push	{r3, r4, r5, lr}
 800702a:	4d06      	ldr	r5, [pc, #24]	@ (8007044 <_sbrk_r+0x1c>)
 800702c:	2300      	movs	r3, #0
 800702e:	4604      	mov	r4, r0
 8007030:	4608      	mov	r0, r1
 8007032:	602b      	str	r3, [r5, #0]
 8007034:	f7fb f8c4 	bl	80021c0 <_sbrk>
 8007038:	1c43      	adds	r3, r0, #1
 800703a:	d102      	bne.n	8007042 <_sbrk_r+0x1a>
 800703c:	682b      	ldr	r3, [r5, #0]
 800703e:	b103      	cbz	r3, 8007042 <_sbrk_r+0x1a>
 8007040:	6023      	str	r3, [r4, #0]
 8007042:	bd38      	pop	{r3, r4, r5, pc}
 8007044:	20000614 	.word	0x20000614

08007048 <_write_r>:
 8007048:	b538      	push	{r3, r4, r5, lr}
 800704a:	4d07      	ldr	r5, [pc, #28]	@ (8007068 <_write_r+0x20>)
 800704c:	4604      	mov	r4, r0
 800704e:	4608      	mov	r0, r1
 8007050:	4611      	mov	r1, r2
 8007052:	2200      	movs	r2, #0
 8007054:	602a      	str	r2, [r5, #0]
 8007056:	461a      	mov	r2, r3
 8007058:	f7fb f862 	bl	8002120 <_write>
 800705c:	1c43      	adds	r3, r0, #1
 800705e:	d102      	bne.n	8007066 <_write_r+0x1e>
 8007060:	682b      	ldr	r3, [r5, #0]
 8007062:	b103      	cbz	r3, 8007066 <_write_r+0x1e>
 8007064:	6023      	str	r3, [r4, #0]
 8007066:	bd38      	pop	{r3, r4, r5, pc}
 8007068:	20000614 	.word	0x20000614

0800706c <__errno>:
 800706c:	4b01      	ldr	r3, [pc, #4]	@ (8007074 <__errno+0x8>)
 800706e:	6818      	ldr	r0, [r3, #0]
 8007070:	4770      	bx	lr
 8007072:	bf00      	nop
 8007074:	20000018 	.word	0x20000018

08007078 <__libc_init_array>:
 8007078:	b570      	push	{r4, r5, r6, lr}
 800707a:	4d0d      	ldr	r5, [pc, #52]	@ (80070b0 <__libc_init_array+0x38>)
 800707c:	4c0d      	ldr	r4, [pc, #52]	@ (80070b4 <__libc_init_array+0x3c>)
 800707e:	1b64      	subs	r4, r4, r5
 8007080:	10a4      	asrs	r4, r4, #2
 8007082:	2600      	movs	r6, #0
 8007084:	42a6      	cmp	r6, r4
 8007086:	d109      	bne.n	800709c <__libc_init_array+0x24>
 8007088:	4d0b      	ldr	r5, [pc, #44]	@ (80070b8 <__libc_init_array+0x40>)
 800708a:	4c0c      	ldr	r4, [pc, #48]	@ (80070bc <__libc_init_array+0x44>)
 800708c:	f001 ff94 	bl	8008fb8 <_init>
 8007090:	1b64      	subs	r4, r4, r5
 8007092:	10a4      	asrs	r4, r4, #2
 8007094:	2600      	movs	r6, #0
 8007096:	42a6      	cmp	r6, r4
 8007098:	d105      	bne.n	80070a6 <__libc_init_array+0x2e>
 800709a:	bd70      	pop	{r4, r5, r6, pc}
 800709c:	f855 3b04 	ldr.w	r3, [r5], #4
 80070a0:	4798      	blx	r3
 80070a2:	3601      	adds	r6, #1
 80070a4:	e7ee      	b.n	8007084 <__libc_init_array+0xc>
 80070a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80070aa:	4798      	blx	r3
 80070ac:	3601      	adds	r6, #1
 80070ae:	e7f2      	b.n	8007096 <__libc_init_array+0x1e>
 80070b0:	0800960c 	.word	0x0800960c
 80070b4:	0800960c 	.word	0x0800960c
 80070b8:	0800960c 	.word	0x0800960c
 80070bc:	08009610 	.word	0x08009610

080070c0 <__retarget_lock_init_recursive>:
 80070c0:	4770      	bx	lr

080070c2 <__retarget_lock_acquire_recursive>:
 80070c2:	4770      	bx	lr

080070c4 <__retarget_lock_release_recursive>:
 80070c4:	4770      	bx	lr

080070c6 <strcpy>:
 80070c6:	4603      	mov	r3, r0
 80070c8:	f811 2b01 	ldrb.w	r2, [r1], #1
 80070cc:	f803 2b01 	strb.w	r2, [r3], #1
 80070d0:	2a00      	cmp	r2, #0
 80070d2:	d1f9      	bne.n	80070c8 <strcpy+0x2>
 80070d4:	4770      	bx	lr
	...

080070d8 <__assert_func>:
 80070d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80070da:	4614      	mov	r4, r2
 80070dc:	461a      	mov	r2, r3
 80070de:	4b09      	ldr	r3, [pc, #36]	@ (8007104 <__assert_func+0x2c>)
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	4605      	mov	r5, r0
 80070e4:	68d8      	ldr	r0, [r3, #12]
 80070e6:	b954      	cbnz	r4, 80070fe <__assert_func+0x26>
 80070e8:	4b07      	ldr	r3, [pc, #28]	@ (8007108 <__assert_func+0x30>)
 80070ea:	461c      	mov	r4, r3
 80070ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80070f0:	9100      	str	r1, [sp, #0]
 80070f2:	462b      	mov	r3, r5
 80070f4:	4905      	ldr	r1, [pc, #20]	@ (800710c <__assert_func+0x34>)
 80070f6:	f001 fc2b 	bl	8008950 <fiprintf>
 80070fa:	f001 fc63 	bl	80089c4 <abort>
 80070fe:	4b04      	ldr	r3, [pc, #16]	@ (8007110 <__assert_func+0x38>)
 8007100:	e7f4      	b.n	80070ec <__assert_func+0x14>
 8007102:	bf00      	nop
 8007104:	20000018 	.word	0x20000018
 8007108:	08009318 	.word	0x08009318
 800710c:	080092ea 	.word	0x080092ea
 8007110:	080092dd 	.word	0x080092dd

08007114 <quorem>:
 8007114:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007118:	6903      	ldr	r3, [r0, #16]
 800711a:	690c      	ldr	r4, [r1, #16]
 800711c:	42a3      	cmp	r3, r4
 800711e:	4607      	mov	r7, r0
 8007120:	db7e      	blt.n	8007220 <quorem+0x10c>
 8007122:	3c01      	subs	r4, #1
 8007124:	f101 0814 	add.w	r8, r1, #20
 8007128:	00a3      	lsls	r3, r4, #2
 800712a:	f100 0514 	add.w	r5, r0, #20
 800712e:	9300      	str	r3, [sp, #0]
 8007130:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8007134:	9301      	str	r3, [sp, #4]
 8007136:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800713a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800713e:	3301      	adds	r3, #1
 8007140:	429a      	cmp	r2, r3
 8007142:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8007146:	fbb2 f6f3 	udiv	r6, r2, r3
 800714a:	d32e      	bcc.n	80071aa <quorem+0x96>
 800714c:	f04f 0a00 	mov.w	sl, #0
 8007150:	46c4      	mov	ip, r8
 8007152:	46ae      	mov	lr, r5
 8007154:	46d3      	mov	fp, sl
 8007156:	f85c 3b04 	ldr.w	r3, [ip], #4
 800715a:	b298      	uxth	r0, r3
 800715c:	fb06 a000 	mla	r0, r6, r0, sl
 8007160:	0c02      	lsrs	r2, r0, #16
 8007162:	0c1b      	lsrs	r3, r3, #16
 8007164:	fb06 2303 	mla	r3, r6, r3, r2
 8007168:	f8de 2000 	ldr.w	r2, [lr]
 800716c:	b280      	uxth	r0, r0
 800716e:	b292      	uxth	r2, r2
 8007170:	1a12      	subs	r2, r2, r0
 8007172:	445a      	add	r2, fp
 8007174:	f8de 0000 	ldr.w	r0, [lr]
 8007178:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800717c:	b29b      	uxth	r3, r3
 800717e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8007182:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8007186:	b292      	uxth	r2, r2
 8007188:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800718c:	45e1      	cmp	r9, ip
 800718e:	f84e 2b04 	str.w	r2, [lr], #4
 8007192:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8007196:	d2de      	bcs.n	8007156 <quorem+0x42>
 8007198:	9b00      	ldr	r3, [sp, #0]
 800719a:	58eb      	ldr	r3, [r5, r3]
 800719c:	b92b      	cbnz	r3, 80071aa <quorem+0x96>
 800719e:	9b01      	ldr	r3, [sp, #4]
 80071a0:	3b04      	subs	r3, #4
 80071a2:	429d      	cmp	r5, r3
 80071a4:	461a      	mov	r2, r3
 80071a6:	d32f      	bcc.n	8007208 <quorem+0xf4>
 80071a8:	613c      	str	r4, [r7, #16]
 80071aa:	4638      	mov	r0, r7
 80071ac:	f001 f8c4 	bl	8008338 <__mcmp>
 80071b0:	2800      	cmp	r0, #0
 80071b2:	db25      	blt.n	8007200 <quorem+0xec>
 80071b4:	4629      	mov	r1, r5
 80071b6:	2000      	movs	r0, #0
 80071b8:	f858 2b04 	ldr.w	r2, [r8], #4
 80071bc:	f8d1 c000 	ldr.w	ip, [r1]
 80071c0:	fa1f fe82 	uxth.w	lr, r2
 80071c4:	fa1f f38c 	uxth.w	r3, ip
 80071c8:	eba3 030e 	sub.w	r3, r3, lr
 80071cc:	4403      	add	r3, r0
 80071ce:	0c12      	lsrs	r2, r2, #16
 80071d0:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80071d4:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80071d8:	b29b      	uxth	r3, r3
 80071da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80071de:	45c1      	cmp	r9, r8
 80071e0:	f841 3b04 	str.w	r3, [r1], #4
 80071e4:	ea4f 4022 	mov.w	r0, r2, asr #16
 80071e8:	d2e6      	bcs.n	80071b8 <quorem+0xa4>
 80071ea:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80071ee:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80071f2:	b922      	cbnz	r2, 80071fe <quorem+0xea>
 80071f4:	3b04      	subs	r3, #4
 80071f6:	429d      	cmp	r5, r3
 80071f8:	461a      	mov	r2, r3
 80071fa:	d30b      	bcc.n	8007214 <quorem+0x100>
 80071fc:	613c      	str	r4, [r7, #16]
 80071fe:	3601      	adds	r6, #1
 8007200:	4630      	mov	r0, r6
 8007202:	b003      	add	sp, #12
 8007204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007208:	6812      	ldr	r2, [r2, #0]
 800720a:	3b04      	subs	r3, #4
 800720c:	2a00      	cmp	r2, #0
 800720e:	d1cb      	bne.n	80071a8 <quorem+0x94>
 8007210:	3c01      	subs	r4, #1
 8007212:	e7c6      	b.n	80071a2 <quorem+0x8e>
 8007214:	6812      	ldr	r2, [r2, #0]
 8007216:	3b04      	subs	r3, #4
 8007218:	2a00      	cmp	r2, #0
 800721a:	d1ef      	bne.n	80071fc <quorem+0xe8>
 800721c:	3c01      	subs	r4, #1
 800721e:	e7ea      	b.n	80071f6 <quorem+0xe2>
 8007220:	2000      	movs	r0, #0
 8007222:	e7ee      	b.n	8007202 <quorem+0xee>
 8007224:	0000      	movs	r0, r0
	...

08007228 <_dtoa_r>:
 8007228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800722c:	69c7      	ldr	r7, [r0, #28]
 800722e:	b099      	sub	sp, #100	@ 0x64
 8007230:	ed8d 0b02 	vstr	d0, [sp, #8]
 8007234:	ec55 4b10 	vmov	r4, r5, d0
 8007238:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800723a:	9109      	str	r1, [sp, #36]	@ 0x24
 800723c:	4683      	mov	fp, r0
 800723e:	920e      	str	r2, [sp, #56]	@ 0x38
 8007240:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007242:	b97f      	cbnz	r7, 8007264 <_dtoa_r+0x3c>
 8007244:	2010      	movs	r0, #16
 8007246:	f7ff f80b 	bl	8006260 <malloc>
 800724a:	4602      	mov	r2, r0
 800724c:	f8cb 001c 	str.w	r0, [fp, #28]
 8007250:	b920      	cbnz	r0, 800725c <_dtoa_r+0x34>
 8007252:	4ba7      	ldr	r3, [pc, #668]	@ (80074f0 <_dtoa_r+0x2c8>)
 8007254:	21ef      	movs	r1, #239	@ 0xef
 8007256:	48a7      	ldr	r0, [pc, #668]	@ (80074f4 <_dtoa_r+0x2cc>)
 8007258:	f7ff ff3e 	bl	80070d8 <__assert_func>
 800725c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8007260:	6007      	str	r7, [r0, #0]
 8007262:	60c7      	str	r7, [r0, #12]
 8007264:	f8db 301c 	ldr.w	r3, [fp, #28]
 8007268:	6819      	ldr	r1, [r3, #0]
 800726a:	b159      	cbz	r1, 8007284 <_dtoa_r+0x5c>
 800726c:	685a      	ldr	r2, [r3, #4]
 800726e:	604a      	str	r2, [r1, #4]
 8007270:	2301      	movs	r3, #1
 8007272:	4093      	lsls	r3, r2
 8007274:	608b      	str	r3, [r1, #8]
 8007276:	4658      	mov	r0, fp
 8007278:	f000 fe24 	bl	8007ec4 <_Bfree>
 800727c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8007280:	2200      	movs	r2, #0
 8007282:	601a      	str	r2, [r3, #0]
 8007284:	1e2b      	subs	r3, r5, #0
 8007286:	bfb9      	ittee	lt
 8007288:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800728c:	9303      	strlt	r3, [sp, #12]
 800728e:	2300      	movge	r3, #0
 8007290:	6033      	strge	r3, [r6, #0]
 8007292:	9f03      	ldr	r7, [sp, #12]
 8007294:	4b98      	ldr	r3, [pc, #608]	@ (80074f8 <_dtoa_r+0x2d0>)
 8007296:	bfbc      	itt	lt
 8007298:	2201      	movlt	r2, #1
 800729a:	6032      	strlt	r2, [r6, #0]
 800729c:	43bb      	bics	r3, r7
 800729e:	d112      	bne.n	80072c6 <_dtoa_r+0x9e>
 80072a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80072a2:	f242 730f 	movw	r3, #9999	@ 0x270f
 80072a6:	6013      	str	r3, [r2, #0]
 80072a8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80072ac:	4323      	orrs	r3, r4
 80072ae:	f000 854d 	beq.w	8007d4c <_dtoa_r+0xb24>
 80072b2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80072b4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800750c <_dtoa_r+0x2e4>
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	f000 854f 	beq.w	8007d5c <_dtoa_r+0xb34>
 80072be:	f10a 0303 	add.w	r3, sl, #3
 80072c2:	f000 bd49 	b.w	8007d58 <_dtoa_r+0xb30>
 80072c6:	ed9d 7b02 	vldr	d7, [sp, #8]
 80072ca:	2200      	movs	r2, #0
 80072cc:	ec51 0b17 	vmov	r0, r1, d7
 80072d0:	2300      	movs	r3, #0
 80072d2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80072d6:	f7f9 fbff 	bl	8000ad8 <__aeabi_dcmpeq>
 80072da:	4680      	mov	r8, r0
 80072dc:	b158      	cbz	r0, 80072f6 <_dtoa_r+0xce>
 80072de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80072e0:	2301      	movs	r3, #1
 80072e2:	6013      	str	r3, [r2, #0]
 80072e4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80072e6:	b113      	cbz	r3, 80072ee <_dtoa_r+0xc6>
 80072e8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80072ea:	4b84      	ldr	r3, [pc, #528]	@ (80074fc <_dtoa_r+0x2d4>)
 80072ec:	6013      	str	r3, [r2, #0]
 80072ee:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8007510 <_dtoa_r+0x2e8>
 80072f2:	f000 bd33 	b.w	8007d5c <_dtoa_r+0xb34>
 80072f6:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80072fa:	aa16      	add	r2, sp, #88	@ 0x58
 80072fc:	a917      	add	r1, sp, #92	@ 0x5c
 80072fe:	4658      	mov	r0, fp
 8007300:	f001 f8ca 	bl	8008498 <__d2b>
 8007304:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8007308:	4681      	mov	r9, r0
 800730a:	2e00      	cmp	r6, #0
 800730c:	d077      	beq.n	80073fe <_dtoa_r+0x1d6>
 800730e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007310:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8007314:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007318:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800731c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8007320:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8007324:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8007328:	4619      	mov	r1, r3
 800732a:	2200      	movs	r2, #0
 800732c:	4b74      	ldr	r3, [pc, #464]	@ (8007500 <_dtoa_r+0x2d8>)
 800732e:	f7f8 ffb3 	bl	8000298 <__aeabi_dsub>
 8007332:	a369      	add	r3, pc, #420	@ (adr r3, 80074d8 <_dtoa_r+0x2b0>)
 8007334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007338:	f7f9 f966 	bl	8000608 <__aeabi_dmul>
 800733c:	a368      	add	r3, pc, #416	@ (adr r3, 80074e0 <_dtoa_r+0x2b8>)
 800733e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007342:	f7f8 ffab 	bl	800029c <__adddf3>
 8007346:	4604      	mov	r4, r0
 8007348:	4630      	mov	r0, r6
 800734a:	460d      	mov	r5, r1
 800734c:	f7f9 f8f2 	bl	8000534 <__aeabi_i2d>
 8007350:	a365      	add	r3, pc, #404	@ (adr r3, 80074e8 <_dtoa_r+0x2c0>)
 8007352:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007356:	f7f9 f957 	bl	8000608 <__aeabi_dmul>
 800735a:	4602      	mov	r2, r0
 800735c:	460b      	mov	r3, r1
 800735e:	4620      	mov	r0, r4
 8007360:	4629      	mov	r1, r5
 8007362:	f7f8 ff9b 	bl	800029c <__adddf3>
 8007366:	4604      	mov	r4, r0
 8007368:	460d      	mov	r5, r1
 800736a:	f7f9 fbfd 	bl	8000b68 <__aeabi_d2iz>
 800736e:	2200      	movs	r2, #0
 8007370:	4607      	mov	r7, r0
 8007372:	2300      	movs	r3, #0
 8007374:	4620      	mov	r0, r4
 8007376:	4629      	mov	r1, r5
 8007378:	f7f9 fbb8 	bl	8000aec <__aeabi_dcmplt>
 800737c:	b140      	cbz	r0, 8007390 <_dtoa_r+0x168>
 800737e:	4638      	mov	r0, r7
 8007380:	f7f9 f8d8 	bl	8000534 <__aeabi_i2d>
 8007384:	4622      	mov	r2, r4
 8007386:	462b      	mov	r3, r5
 8007388:	f7f9 fba6 	bl	8000ad8 <__aeabi_dcmpeq>
 800738c:	b900      	cbnz	r0, 8007390 <_dtoa_r+0x168>
 800738e:	3f01      	subs	r7, #1
 8007390:	2f16      	cmp	r7, #22
 8007392:	d851      	bhi.n	8007438 <_dtoa_r+0x210>
 8007394:	4b5b      	ldr	r3, [pc, #364]	@ (8007504 <_dtoa_r+0x2dc>)
 8007396:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800739a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800739e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80073a2:	f7f9 fba3 	bl	8000aec <__aeabi_dcmplt>
 80073a6:	2800      	cmp	r0, #0
 80073a8:	d048      	beq.n	800743c <_dtoa_r+0x214>
 80073aa:	3f01      	subs	r7, #1
 80073ac:	2300      	movs	r3, #0
 80073ae:	9312      	str	r3, [sp, #72]	@ 0x48
 80073b0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80073b2:	1b9b      	subs	r3, r3, r6
 80073b4:	1e5a      	subs	r2, r3, #1
 80073b6:	bf44      	itt	mi
 80073b8:	f1c3 0801 	rsbmi	r8, r3, #1
 80073bc:	2300      	movmi	r3, #0
 80073be:	9208      	str	r2, [sp, #32]
 80073c0:	bf54      	ite	pl
 80073c2:	f04f 0800 	movpl.w	r8, #0
 80073c6:	9308      	strmi	r3, [sp, #32]
 80073c8:	2f00      	cmp	r7, #0
 80073ca:	db39      	blt.n	8007440 <_dtoa_r+0x218>
 80073cc:	9b08      	ldr	r3, [sp, #32]
 80073ce:	970f      	str	r7, [sp, #60]	@ 0x3c
 80073d0:	443b      	add	r3, r7
 80073d2:	9308      	str	r3, [sp, #32]
 80073d4:	2300      	movs	r3, #0
 80073d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80073d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80073da:	2b09      	cmp	r3, #9
 80073dc:	d864      	bhi.n	80074a8 <_dtoa_r+0x280>
 80073de:	2b05      	cmp	r3, #5
 80073e0:	bfc4      	itt	gt
 80073e2:	3b04      	subgt	r3, #4
 80073e4:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80073e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80073e8:	f1a3 0302 	sub.w	r3, r3, #2
 80073ec:	bfcc      	ite	gt
 80073ee:	2400      	movgt	r4, #0
 80073f0:	2401      	movle	r4, #1
 80073f2:	2b03      	cmp	r3, #3
 80073f4:	d863      	bhi.n	80074be <_dtoa_r+0x296>
 80073f6:	e8df f003 	tbb	[pc, r3]
 80073fa:	372a      	.short	0x372a
 80073fc:	5535      	.short	0x5535
 80073fe:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8007402:	441e      	add	r6, r3
 8007404:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8007408:	2b20      	cmp	r3, #32
 800740a:	bfc1      	itttt	gt
 800740c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8007410:	409f      	lslgt	r7, r3
 8007412:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8007416:	fa24 f303 	lsrgt.w	r3, r4, r3
 800741a:	bfd6      	itet	le
 800741c:	f1c3 0320 	rsble	r3, r3, #32
 8007420:	ea47 0003 	orrgt.w	r0, r7, r3
 8007424:	fa04 f003 	lslle.w	r0, r4, r3
 8007428:	f7f9 f874 	bl	8000514 <__aeabi_ui2d>
 800742c:	2201      	movs	r2, #1
 800742e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8007432:	3e01      	subs	r6, #1
 8007434:	9214      	str	r2, [sp, #80]	@ 0x50
 8007436:	e777      	b.n	8007328 <_dtoa_r+0x100>
 8007438:	2301      	movs	r3, #1
 800743a:	e7b8      	b.n	80073ae <_dtoa_r+0x186>
 800743c:	9012      	str	r0, [sp, #72]	@ 0x48
 800743e:	e7b7      	b.n	80073b0 <_dtoa_r+0x188>
 8007440:	427b      	negs	r3, r7
 8007442:	930a      	str	r3, [sp, #40]	@ 0x28
 8007444:	2300      	movs	r3, #0
 8007446:	eba8 0807 	sub.w	r8, r8, r7
 800744a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800744c:	e7c4      	b.n	80073d8 <_dtoa_r+0x1b0>
 800744e:	2300      	movs	r3, #0
 8007450:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007452:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007454:	2b00      	cmp	r3, #0
 8007456:	dc35      	bgt.n	80074c4 <_dtoa_r+0x29c>
 8007458:	2301      	movs	r3, #1
 800745a:	9300      	str	r3, [sp, #0]
 800745c:	9307      	str	r3, [sp, #28]
 800745e:	461a      	mov	r2, r3
 8007460:	920e      	str	r2, [sp, #56]	@ 0x38
 8007462:	e00b      	b.n	800747c <_dtoa_r+0x254>
 8007464:	2301      	movs	r3, #1
 8007466:	e7f3      	b.n	8007450 <_dtoa_r+0x228>
 8007468:	2300      	movs	r3, #0
 800746a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800746c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800746e:	18fb      	adds	r3, r7, r3
 8007470:	9300      	str	r3, [sp, #0]
 8007472:	3301      	adds	r3, #1
 8007474:	2b01      	cmp	r3, #1
 8007476:	9307      	str	r3, [sp, #28]
 8007478:	bfb8      	it	lt
 800747a:	2301      	movlt	r3, #1
 800747c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8007480:	2100      	movs	r1, #0
 8007482:	2204      	movs	r2, #4
 8007484:	f102 0514 	add.w	r5, r2, #20
 8007488:	429d      	cmp	r5, r3
 800748a:	d91f      	bls.n	80074cc <_dtoa_r+0x2a4>
 800748c:	6041      	str	r1, [r0, #4]
 800748e:	4658      	mov	r0, fp
 8007490:	f000 fcd8 	bl	8007e44 <_Balloc>
 8007494:	4682      	mov	sl, r0
 8007496:	2800      	cmp	r0, #0
 8007498:	d13c      	bne.n	8007514 <_dtoa_r+0x2ec>
 800749a:	4b1b      	ldr	r3, [pc, #108]	@ (8007508 <_dtoa_r+0x2e0>)
 800749c:	4602      	mov	r2, r0
 800749e:	f240 11af 	movw	r1, #431	@ 0x1af
 80074a2:	e6d8      	b.n	8007256 <_dtoa_r+0x2e>
 80074a4:	2301      	movs	r3, #1
 80074a6:	e7e0      	b.n	800746a <_dtoa_r+0x242>
 80074a8:	2401      	movs	r4, #1
 80074aa:	2300      	movs	r3, #0
 80074ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80074ae:	940b      	str	r4, [sp, #44]	@ 0x2c
 80074b0:	f04f 33ff 	mov.w	r3, #4294967295
 80074b4:	9300      	str	r3, [sp, #0]
 80074b6:	9307      	str	r3, [sp, #28]
 80074b8:	2200      	movs	r2, #0
 80074ba:	2312      	movs	r3, #18
 80074bc:	e7d0      	b.n	8007460 <_dtoa_r+0x238>
 80074be:	2301      	movs	r3, #1
 80074c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80074c2:	e7f5      	b.n	80074b0 <_dtoa_r+0x288>
 80074c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80074c6:	9300      	str	r3, [sp, #0]
 80074c8:	9307      	str	r3, [sp, #28]
 80074ca:	e7d7      	b.n	800747c <_dtoa_r+0x254>
 80074cc:	3101      	adds	r1, #1
 80074ce:	0052      	lsls	r2, r2, #1
 80074d0:	e7d8      	b.n	8007484 <_dtoa_r+0x25c>
 80074d2:	bf00      	nop
 80074d4:	f3af 8000 	nop.w
 80074d8:	636f4361 	.word	0x636f4361
 80074dc:	3fd287a7 	.word	0x3fd287a7
 80074e0:	8b60c8b3 	.word	0x8b60c8b3
 80074e4:	3fc68a28 	.word	0x3fc68a28
 80074e8:	509f79fb 	.word	0x509f79fb
 80074ec:	3fd34413 	.word	0x3fd34413
 80074f0:	0800926c 	.word	0x0800926c
 80074f4:	08009326 	.word	0x08009326
 80074f8:	7ff00000 	.word	0x7ff00000
 80074fc:	08009249 	.word	0x08009249
 8007500:	3ff80000 	.word	0x3ff80000
 8007504:	08009420 	.word	0x08009420
 8007508:	0800937e 	.word	0x0800937e
 800750c:	08009322 	.word	0x08009322
 8007510:	08009248 	.word	0x08009248
 8007514:	f8db 301c 	ldr.w	r3, [fp, #28]
 8007518:	6018      	str	r0, [r3, #0]
 800751a:	9b07      	ldr	r3, [sp, #28]
 800751c:	2b0e      	cmp	r3, #14
 800751e:	f200 80a4 	bhi.w	800766a <_dtoa_r+0x442>
 8007522:	2c00      	cmp	r4, #0
 8007524:	f000 80a1 	beq.w	800766a <_dtoa_r+0x442>
 8007528:	2f00      	cmp	r7, #0
 800752a:	dd33      	ble.n	8007594 <_dtoa_r+0x36c>
 800752c:	4bad      	ldr	r3, [pc, #692]	@ (80077e4 <_dtoa_r+0x5bc>)
 800752e:	f007 020f 	and.w	r2, r7, #15
 8007532:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007536:	ed93 7b00 	vldr	d7, [r3]
 800753a:	05f8      	lsls	r0, r7, #23
 800753c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8007540:	ea4f 1427 	mov.w	r4, r7, asr #4
 8007544:	d516      	bpl.n	8007574 <_dtoa_r+0x34c>
 8007546:	4ba8      	ldr	r3, [pc, #672]	@ (80077e8 <_dtoa_r+0x5c0>)
 8007548:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800754c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007550:	f7f9 f984 	bl	800085c <__aeabi_ddiv>
 8007554:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007558:	f004 040f 	and.w	r4, r4, #15
 800755c:	2603      	movs	r6, #3
 800755e:	4da2      	ldr	r5, [pc, #648]	@ (80077e8 <_dtoa_r+0x5c0>)
 8007560:	b954      	cbnz	r4, 8007578 <_dtoa_r+0x350>
 8007562:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007566:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800756a:	f7f9 f977 	bl	800085c <__aeabi_ddiv>
 800756e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007572:	e028      	b.n	80075c6 <_dtoa_r+0x39e>
 8007574:	2602      	movs	r6, #2
 8007576:	e7f2      	b.n	800755e <_dtoa_r+0x336>
 8007578:	07e1      	lsls	r1, r4, #31
 800757a:	d508      	bpl.n	800758e <_dtoa_r+0x366>
 800757c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007580:	e9d5 2300 	ldrd	r2, r3, [r5]
 8007584:	f7f9 f840 	bl	8000608 <__aeabi_dmul>
 8007588:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800758c:	3601      	adds	r6, #1
 800758e:	1064      	asrs	r4, r4, #1
 8007590:	3508      	adds	r5, #8
 8007592:	e7e5      	b.n	8007560 <_dtoa_r+0x338>
 8007594:	f000 80d2 	beq.w	800773c <_dtoa_r+0x514>
 8007598:	427c      	negs	r4, r7
 800759a:	4b92      	ldr	r3, [pc, #584]	@ (80077e4 <_dtoa_r+0x5bc>)
 800759c:	4d92      	ldr	r5, [pc, #584]	@ (80077e8 <_dtoa_r+0x5c0>)
 800759e:	f004 020f 	and.w	r2, r4, #15
 80075a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80075a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075aa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80075ae:	f7f9 f82b 	bl	8000608 <__aeabi_dmul>
 80075b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80075b6:	1124      	asrs	r4, r4, #4
 80075b8:	2300      	movs	r3, #0
 80075ba:	2602      	movs	r6, #2
 80075bc:	2c00      	cmp	r4, #0
 80075be:	f040 80b2 	bne.w	8007726 <_dtoa_r+0x4fe>
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	d1d3      	bne.n	800756e <_dtoa_r+0x346>
 80075c6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80075c8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80075cc:	2b00      	cmp	r3, #0
 80075ce:	f000 80b7 	beq.w	8007740 <_dtoa_r+0x518>
 80075d2:	4b86      	ldr	r3, [pc, #536]	@ (80077ec <_dtoa_r+0x5c4>)
 80075d4:	2200      	movs	r2, #0
 80075d6:	4620      	mov	r0, r4
 80075d8:	4629      	mov	r1, r5
 80075da:	f7f9 fa87 	bl	8000aec <__aeabi_dcmplt>
 80075de:	2800      	cmp	r0, #0
 80075e0:	f000 80ae 	beq.w	8007740 <_dtoa_r+0x518>
 80075e4:	9b07      	ldr	r3, [sp, #28]
 80075e6:	2b00      	cmp	r3, #0
 80075e8:	f000 80aa 	beq.w	8007740 <_dtoa_r+0x518>
 80075ec:	9b00      	ldr	r3, [sp, #0]
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	dd37      	ble.n	8007662 <_dtoa_r+0x43a>
 80075f2:	1e7b      	subs	r3, r7, #1
 80075f4:	9304      	str	r3, [sp, #16]
 80075f6:	4620      	mov	r0, r4
 80075f8:	4b7d      	ldr	r3, [pc, #500]	@ (80077f0 <_dtoa_r+0x5c8>)
 80075fa:	2200      	movs	r2, #0
 80075fc:	4629      	mov	r1, r5
 80075fe:	f7f9 f803 	bl	8000608 <__aeabi_dmul>
 8007602:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007606:	9c00      	ldr	r4, [sp, #0]
 8007608:	3601      	adds	r6, #1
 800760a:	4630      	mov	r0, r6
 800760c:	f7f8 ff92 	bl	8000534 <__aeabi_i2d>
 8007610:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007614:	f7f8 fff8 	bl	8000608 <__aeabi_dmul>
 8007618:	4b76      	ldr	r3, [pc, #472]	@ (80077f4 <_dtoa_r+0x5cc>)
 800761a:	2200      	movs	r2, #0
 800761c:	f7f8 fe3e 	bl	800029c <__adddf3>
 8007620:	4605      	mov	r5, r0
 8007622:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8007626:	2c00      	cmp	r4, #0
 8007628:	f040 808d 	bne.w	8007746 <_dtoa_r+0x51e>
 800762c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007630:	4b71      	ldr	r3, [pc, #452]	@ (80077f8 <_dtoa_r+0x5d0>)
 8007632:	2200      	movs	r2, #0
 8007634:	f7f8 fe30 	bl	8000298 <__aeabi_dsub>
 8007638:	4602      	mov	r2, r0
 800763a:	460b      	mov	r3, r1
 800763c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007640:	462a      	mov	r2, r5
 8007642:	4633      	mov	r3, r6
 8007644:	f7f9 fa70 	bl	8000b28 <__aeabi_dcmpgt>
 8007648:	2800      	cmp	r0, #0
 800764a:	f040 828b 	bne.w	8007b64 <_dtoa_r+0x93c>
 800764e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007652:	462a      	mov	r2, r5
 8007654:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8007658:	f7f9 fa48 	bl	8000aec <__aeabi_dcmplt>
 800765c:	2800      	cmp	r0, #0
 800765e:	f040 8128 	bne.w	80078b2 <_dtoa_r+0x68a>
 8007662:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8007666:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800766a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800766c:	2b00      	cmp	r3, #0
 800766e:	f2c0 815a 	blt.w	8007926 <_dtoa_r+0x6fe>
 8007672:	2f0e      	cmp	r7, #14
 8007674:	f300 8157 	bgt.w	8007926 <_dtoa_r+0x6fe>
 8007678:	4b5a      	ldr	r3, [pc, #360]	@ (80077e4 <_dtoa_r+0x5bc>)
 800767a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800767e:	ed93 7b00 	vldr	d7, [r3]
 8007682:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007684:	2b00      	cmp	r3, #0
 8007686:	ed8d 7b00 	vstr	d7, [sp]
 800768a:	da03      	bge.n	8007694 <_dtoa_r+0x46c>
 800768c:	9b07      	ldr	r3, [sp, #28]
 800768e:	2b00      	cmp	r3, #0
 8007690:	f340 8101 	ble.w	8007896 <_dtoa_r+0x66e>
 8007694:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8007698:	4656      	mov	r6, sl
 800769a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800769e:	4620      	mov	r0, r4
 80076a0:	4629      	mov	r1, r5
 80076a2:	f7f9 f8db 	bl	800085c <__aeabi_ddiv>
 80076a6:	f7f9 fa5f 	bl	8000b68 <__aeabi_d2iz>
 80076aa:	4680      	mov	r8, r0
 80076ac:	f7f8 ff42 	bl	8000534 <__aeabi_i2d>
 80076b0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80076b4:	f7f8 ffa8 	bl	8000608 <__aeabi_dmul>
 80076b8:	4602      	mov	r2, r0
 80076ba:	460b      	mov	r3, r1
 80076bc:	4620      	mov	r0, r4
 80076be:	4629      	mov	r1, r5
 80076c0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80076c4:	f7f8 fde8 	bl	8000298 <__aeabi_dsub>
 80076c8:	f806 4b01 	strb.w	r4, [r6], #1
 80076cc:	9d07      	ldr	r5, [sp, #28]
 80076ce:	eba6 040a 	sub.w	r4, r6, sl
 80076d2:	42a5      	cmp	r5, r4
 80076d4:	4602      	mov	r2, r0
 80076d6:	460b      	mov	r3, r1
 80076d8:	f040 8117 	bne.w	800790a <_dtoa_r+0x6e2>
 80076dc:	f7f8 fdde 	bl	800029c <__adddf3>
 80076e0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80076e4:	4604      	mov	r4, r0
 80076e6:	460d      	mov	r5, r1
 80076e8:	f7f9 fa1e 	bl	8000b28 <__aeabi_dcmpgt>
 80076ec:	2800      	cmp	r0, #0
 80076ee:	f040 80f9 	bne.w	80078e4 <_dtoa_r+0x6bc>
 80076f2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80076f6:	4620      	mov	r0, r4
 80076f8:	4629      	mov	r1, r5
 80076fa:	f7f9 f9ed 	bl	8000ad8 <__aeabi_dcmpeq>
 80076fe:	b118      	cbz	r0, 8007708 <_dtoa_r+0x4e0>
 8007700:	f018 0f01 	tst.w	r8, #1
 8007704:	f040 80ee 	bne.w	80078e4 <_dtoa_r+0x6bc>
 8007708:	4649      	mov	r1, r9
 800770a:	4658      	mov	r0, fp
 800770c:	f000 fbda 	bl	8007ec4 <_Bfree>
 8007710:	2300      	movs	r3, #0
 8007712:	7033      	strb	r3, [r6, #0]
 8007714:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8007716:	3701      	adds	r7, #1
 8007718:	601f      	str	r7, [r3, #0]
 800771a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800771c:	2b00      	cmp	r3, #0
 800771e:	f000 831d 	beq.w	8007d5c <_dtoa_r+0xb34>
 8007722:	601e      	str	r6, [r3, #0]
 8007724:	e31a      	b.n	8007d5c <_dtoa_r+0xb34>
 8007726:	07e2      	lsls	r2, r4, #31
 8007728:	d505      	bpl.n	8007736 <_dtoa_r+0x50e>
 800772a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800772e:	f7f8 ff6b 	bl	8000608 <__aeabi_dmul>
 8007732:	3601      	adds	r6, #1
 8007734:	2301      	movs	r3, #1
 8007736:	1064      	asrs	r4, r4, #1
 8007738:	3508      	adds	r5, #8
 800773a:	e73f      	b.n	80075bc <_dtoa_r+0x394>
 800773c:	2602      	movs	r6, #2
 800773e:	e742      	b.n	80075c6 <_dtoa_r+0x39e>
 8007740:	9c07      	ldr	r4, [sp, #28]
 8007742:	9704      	str	r7, [sp, #16]
 8007744:	e761      	b.n	800760a <_dtoa_r+0x3e2>
 8007746:	4b27      	ldr	r3, [pc, #156]	@ (80077e4 <_dtoa_r+0x5bc>)
 8007748:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800774a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800774e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8007752:	4454      	add	r4, sl
 8007754:	2900      	cmp	r1, #0
 8007756:	d053      	beq.n	8007800 <_dtoa_r+0x5d8>
 8007758:	4928      	ldr	r1, [pc, #160]	@ (80077fc <_dtoa_r+0x5d4>)
 800775a:	2000      	movs	r0, #0
 800775c:	f7f9 f87e 	bl	800085c <__aeabi_ddiv>
 8007760:	4633      	mov	r3, r6
 8007762:	462a      	mov	r2, r5
 8007764:	f7f8 fd98 	bl	8000298 <__aeabi_dsub>
 8007768:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800776c:	4656      	mov	r6, sl
 800776e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007772:	f7f9 f9f9 	bl	8000b68 <__aeabi_d2iz>
 8007776:	4605      	mov	r5, r0
 8007778:	f7f8 fedc 	bl	8000534 <__aeabi_i2d>
 800777c:	4602      	mov	r2, r0
 800777e:	460b      	mov	r3, r1
 8007780:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007784:	f7f8 fd88 	bl	8000298 <__aeabi_dsub>
 8007788:	3530      	adds	r5, #48	@ 0x30
 800778a:	4602      	mov	r2, r0
 800778c:	460b      	mov	r3, r1
 800778e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007792:	f806 5b01 	strb.w	r5, [r6], #1
 8007796:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800779a:	f7f9 f9a7 	bl	8000aec <__aeabi_dcmplt>
 800779e:	2800      	cmp	r0, #0
 80077a0:	d171      	bne.n	8007886 <_dtoa_r+0x65e>
 80077a2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80077a6:	4911      	ldr	r1, [pc, #68]	@ (80077ec <_dtoa_r+0x5c4>)
 80077a8:	2000      	movs	r0, #0
 80077aa:	f7f8 fd75 	bl	8000298 <__aeabi_dsub>
 80077ae:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80077b2:	f7f9 f99b 	bl	8000aec <__aeabi_dcmplt>
 80077b6:	2800      	cmp	r0, #0
 80077b8:	f040 8095 	bne.w	80078e6 <_dtoa_r+0x6be>
 80077bc:	42a6      	cmp	r6, r4
 80077be:	f43f af50 	beq.w	8007662 <_dtoa_r+0x43a>
 80077c2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80077c6:	4b0a      	ldr	r3, [pc, #40]	@ (80077f0 <_dtoa_r+0x5c8>)
 80077c8:	2200      	movs	r2, #0
 80077ca:	f7f8 ff1d 	bl	8000608 <__aeabi_dmul>
 80077ce:	4b08      	ldr	r3, [pc, #32]	@ (80077f0 <_dtoa_r+0x5c8>)
 80077d0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80077d4:	2200      	movs	r2, #0
 80077d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80077da:	f7f8 ff15 	bl	8000608 <__aeabi_dmul>
 80077de:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80077e2:	e7c4      	b.n	800776e <_dtoa_r+0x546>
 80077e4:	08009420 	.word	0x08009420
 80077e8:	080093f8 	.word	0x080093f8
 80077ec:	3ff00000 	.word	0x3ff00000
 80077f0:	40240000 	.word	0x40240000
 80077f4:	401c0000 	.word	0x401c0000
 80077f8:	40140000 	.word	0x40140000
 80077fc:	3fe00000 	.word	0x3fe00000
 8007800:	4631      	mov	r1, r6
 8007802:	4628      	mov	r0, r5
 8007804:	f7f8 ff00 	bl	8000608 <__aeabi_dmul>
 8007808:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800780c:	9415      	str	r4, [sp, #84]	@ 0x54
 800780e:	4656      	mov	r6, sl
 8007810:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007814:	f7f9 f9a8 	bl	8000b68 <__aeabi_d2iz>
 8007818:	4605      	mov	r5, r0
 800781a:	f7f8 fe8b 	bl	8000534 <__aeabi_i2d>
 800781e:	4602      	mov	r2, r0
 8007820:	460b      	mov	r3, r1
 8007822:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007826:	f7f8 fd37 	bl	8000298 <__aeabi_dsub>
 800782a:	3530      	adds	r5, #48	@ 0x30
 800782c:	f806 5b01 	strb.w	r5, [r6], #1
 8007830:	4602      	mov	r2, r0
 8007832:	460b      	mov	r3, r1
 8007834:	42a6      	cmp	r6, r4
 8007836:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800783a:	f04f 0200 	mov.w	r2, #0
 800783e:	d124      	bne.n	800788a <_dtoa_r+0x662>
 8007840:	4bac      	ldr	r3, [pc, #688]	@ (8007af4 <_dtoa_r+0x8cc>)
 8007842:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8007846:	f7f8 fd29 	bl	800029c <__adddf3>
 800784a:	4602      	mov	r2, r0
 800784c:	460b      	mov	r3, r1
 800784e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007852:	f7f9 f969 	bl	8000b28 <__aeabi_dcmpgt>
 8007856:	2800      	cmp	r0, #0
 8007858:	d145      	bne.n	80078e6 <_dtoa_r+0x6be>
 800785a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800785e:	49a5      	ldr	r1, [pc, #660]	@ (8007af4 <_dtoa_r+0x8cc>)
 8007860:	2000      	movs	r0, #0
 8007862:	f7f8 fd19 	bl	8000298 <__aeabi_dsub>
 8007866:	4602      	mov	r2, r0
 8007868:	460b      	mov	r3, r1
 800786a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800786e:	f7f9 f93d 	bl	8000aec <__aeabi_dcmplt>
 8007872:	2800      	cmp	r0, #0
 8007874:	f43f aef5 	beq.w	8007662 <_dtoa_r+0x43a>
 8007878:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800787a:	1e73      	subs	r3, r6, #1
 800787c:	9315      	str	r3, [sp, #84]	@ 0x54
 800787e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8007882:	2b30      	cmp	r3, #48	@ 0x30
 8007884:	d0f8      	beq.n	8007878 <_dtoa_r+0x650>
 8007886:	9f04      	ldr	r7, [sp, #16]
 8007888:	e73e      	b.n	8007708 <_dtoa_r+0x4e0>
 800788a:	4b9b      	ldr	r3, [pc, #620]	@ (8007af8 <_dtoa_r+0x8d0>)
 800788c:	f7f8 febc 	bl	8000608 <__aeabi_dmul>
 8007890:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007894:	e7bc      	b.n	8007810 <_dtoa_r+0x5e8>
 8007896:	d10c      	bne.n	80078b2 <_dtoa_r+0x68a>
 8007898:	4b98      	ldr	r3, [pc, #608]	@ (8007afc <_dtoa_r+0x8d4>)
 800789a:	2200      	movs	r2, #0
 800789c:	e9dd 0100 	ldrd	r0, r1, [sp]
 80078a0:	f7f8 feb2 	bl	8000608 <__aeabi_dmul>
 80078a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80078a8:	f7f9 f934 	bl	8000b14 <__aeabi_dcmpge>
 80078ac:	2800      	cmp	r0, #0
 80078ae:	f000 8157 	beq.w	8007b60 <_dtoa_r+0x938>
 80078b2:	2400      	movs	r4, #0
 80078b4:	4625      	mov	r5, r4
 80078b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80078b8:	43db      	mvns	r3, r3
 80078ba:	9304      	str	r3, [sp, #16]
 80078bc:	4656      	mov	r6, sl
 80078be:	2700      	movs	r7, #0
 80078c0:	4621      	mov	r1, r4
 80078c2:	4658      	mov	r0, fp
 80078c4:	f000 fafe 	bl	8007ec4 <_Bfree>
 80078c8:	2d00      	cmp	r5, #0
 80078ca:	d0dc      	beq.n	8007886 <_dtoa_r+0x65e>
 80078cc:	b12f      	cbz	r7, 80078da <_dtoa_r+0x6b2>
 80078ce:	42af      	cmp	r7, r5
 80078d0:	d003      	beq.n	80078da <_dtoa_r+0x6b2>
 80078d2:	4639      	mov	r1, r7
 80078d4:	4658      	mov	r0, fp
 80078d6:	f000 faf5 	bl	8007ec4 <_Bfree>
 80078da:	4629      	mov	r1, r5
 80078dc:	4658      	mov	r0, fp
 80078de:	f000 faf1 	bl	8007ec4 <_Bfree>
 80078e2:	e7d0      	b.n	8007886 <_dtoa_r+0x65e>
 80078e4:	9704      	str	r7, [sp, #16]
 80078e6:	4633      	mov	r3, r6
 80078e8:	461e      	mov	r6, r3
 80078ea:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80078ee:	2a39      	cmp	r2, #57	@ 0x39
 80078f0:	d107      	bne.n	8007902 <_dtoa_r+0x6da>
 80078f2:	459a      	cmp	sl, r3
 80078f4:	d1f8      	bne.n	80078e8 <_dtoa_r+0x6c0>
 80078f6:	9a04      	ldr	r2, [sp, #16]
 80078f8:	3201      	adds	r2, #1
 80078fa:	9204      	str	r2, [sp, #16]
 80078fc:	2230      	movs	r2, #48	@ 0x30
 80078fe:	f88a 2000 	strb.w	r2, [sl]
 8007902:	781a      	ldrb	r2, [r3, #0]
 8007904:	3201      	adds	r2, #1
 8007906:	701a      	strb	r2, [r3, #0]
 8007908:	e7bd      	b.n	8007886 <_dtoa_r+0x65e>
 800790a:	4b7b      	ldr	r3, [pc, #492]	@ (8007af8 <_dtoa_r+0x8d0>)
 800790c:	2200      	movs	r2, #0
 800790e:	f7f8 fe7b 	bl	8000608 <__aeabi_dmul>
 8007912:	2200      	movs	r2, #0
 8007914:	2300      	movs	r3, #0
 8007916:	4604      	mov	r4, r0
 8007918:	460d      	mov	r5, r1
 800791a:	f7f9 f8dd 	bl	8000ad8 <__aeabi_dcmpeq>
 800791e:	2800      	cmp	r0, #0
 8007920:	f43f aebb 	beq.w	800769a <_dtoa_r+0x472>
 8007924:	e6f0      	b.n	8007708 <_dtoa_r+0x4e0>
 8007926:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8007928:	2a00      	cmp	r2, #0
 800792a:	f000 80db 	beq.w	8007ae4 <_dtoa_r+0x8bc>
 800792e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007930:	2a01      	cmp	r2, #1
 8007932:	f300 80bf 	bgt.w	8007ab4 <_dtoa_r+0x88c>
 8007936:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8007938:	2a00      	cmp	r2, #0
 800793a:	f000 80b7 	beq.w	8007aac <_dtoa_r+0x884>
 800793e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8007942:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007944:	4646      	mov	r6, r8
 8007946:	9a08      	ldr	r2, [sp, #32]
 8007948:	2101      	movs	r1, #1
 800794a:	441a      	add	r2, r3
 800794c:	4658      	mov	r0, fp
 800794e:	4498      	add	r8, r3
 8007950:	9208      	str	r2, [sp, #32]
 8007952:	f000 fb6b 	bl	800802c <__i2b>
 8007956:	4605      	mov	r5, r0
 8007958:	b15e      	cbz	r6, 8007972 <_dtoa_r+0x74a>
 800795a:	9b08      	ldr	r3, [sp, #32]
 800795c:	2b00      	cmp	r3, #0
 800795e:	dd08      	ble.n	8007972 <_dtoa_r+0x74a>
 8007960:	42b3      	cmp	r3, r6
 8007962:	9a08      	ldr	r2, [sp, #32]
 8007964:	bfa8      	it	ge
 8007966:	4633      	movge	r3, r6
 8007968:	eba8 0803 	sub.w	r8, r8, r3
 800796c:	1af6      	subs	r6, r6, r3
 800796e:	1ad3      	subs	r3, r2, r3
 8007970:	9308      	str	r3, [sp, #32]
 8007972:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007974:	b1f3      	cbz	r3, 80079b4 <_dtoa_r+0x78c>
 8007976:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007978:	2b00      	cmp	r3, #0
 800797a:	f000 80b7 	beq.w	8007aec <_dtoa_r+0x8c4>
 800797e:	b18c      	cbz	r4, 80079a4 <_dtoa_r+0x77c>
 8007980:	4629      	mov	r1, r5
 8007982:	4622      	mov	r2, r4
 8007984:	4658      	mov	r0, fp
 8007986:	f000 fc11 	bl	80081ac <__pow5mult>
 800798a:	464a      	mov	r2, r9
 800798c:	4601      	mov	r1, r0
 800798e:	4605      	mov	r5, r0
 8007990:	4658      	mov	r0, fp
 8007992:	f000 fb61 	bl	8008058 <__multiply>
 8007996:	4649      	mov	r1, r9
 8007998:	9004      	str	r0, [sp, #16]
 800799a:	4658      	mov	r0, fp
 800799c:	f000 fa92 	bl	8007ec4 <_Bfree>
 80079a0:	9b04      	ldr	r3, [sp, #16]
 80079a2:	4699      	mov	r9, r3
 80079a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80079a6:	1b1a      	subs	r2, r3, r4
 80079a8:	d004      	beq.n	80079b4 <_dtoa_r+0x78c>
 80079aa:	4649      	mov	r1, r9
 80079ac:	4658      	mov	r0, fp
 80079ae:	f000 fbfd 	bl	80081ac <__pow5mult>
 80079b2:	4681      	mov	r9, r0
 80079b4:	2101      	movs	r1, #1
 80079b6:	4658      	mov	r0, fp
 80079b8:	f000 fb38 	bl	800802c <__i2b>
 80079bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80079be:	4604      	mov	r4, r0
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	f000 81cf 	beq.w	8007d64 <_dtoa_r+0xb3c>
 80079c6:	461a      	mov	r2, r3
 80079c8:	4601      	mov	r1, r0
 80079ca:	4658      	mov	r0, fp
 80079cc:	f000 fbee 	bl	80081ac <__pow5mult>
 80079d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079d2:	2b01      	cmp	r3, #1
 80079d4:	4604      	mov	r4, r0
 80079d6:	f300 8095 	bgt.w	8007b04 <_dtoa_r+0x8dc>
 80079da:	9b02      	ldr	r3, [sp, #8]
 80079dc:	2b00      	cmp	r3, #0
 80079de:	f040 8087 	bne.w	8007af0 <_dtoa_r+0x8c8>
 80079e2:	9b03      	ldr	r3, [sp, #12]
 80079e4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	f040 8089 	bne.w	8007b00 <_dtoa_r+0x8d8>
 80079ee:	9b03      	ldr	r3, [sp, #12]
 80079f0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80079f4:	0d1b      	lsrs	r3, r3, #20
 80079f6:	051b      	lsls	r3, r3, #20
 80079f8:	b12b      	cbz	r3, 8007a06 <_dtoa_r+0x7de>
 80079fa:	9b08      	ldr	r3, [sp, #32]
 80079fc:	3301      	adds	r3, #1
 80079fe:	9308      	str	r3, [sp, #32]
 8007a00:	f108 0801 	add.w	r8, r8, #1
 8007a04:	2301      	movs	r3, #1
 8007a06:	930a      	str	r3, [sp, #40]	@ 0x28
 8007a08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007a0a:	2b00      	cmp	r3, #0
 8007a0c:	f000 81b0 	beq.w	8007d70 <_dtoa_r+0xb48>
 8007a10:	6923      	ldr	r3, [r4, #16]
 8007a12:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8007a16:	6918      	ldr	r0, [r3, #16]
 8007a18:	f000 fabc 	bl	8007f94 <__hi0bits>
 8007a1c:	f1c0 0020 	rsb	r0, r0, #32
 8007a20:	9b08      	ldr	r3, [sp, #32]
 8007a22:	4418      	add	r0, r3
 8007a24:	f010 001f 	ands.w	r0, r0, #31
 8007a28:	d077      	beq.n	8007b1a <_dtoa_r+0x8f2>
 8007a2a:	f1c0 0320 	rsb	r3, r0, #32
 8007a2e:	2b04      	cmp	r3, #4
 8007a30:	dd6b      	ble.n	8007b0a <_dtoa_r+0x8e2>
 8007a32:	9b08      	ldr	r3, [sp, #32]
 8007a34:	f1c0 001c 	rsb	r0, r0, #28
 8007a38:	4403      	add	r3, r0
 8007a3a:	4480      	add	r8, r0
 8007a3c:	4406      	add	r6, r0
 8007a3e:	9308      	str	r3, [sp, #32]
 8007a40:	f1b8 0f00 	cmp.w	r8, #0
 8007a44:	dd05      	ble.n	8007a52 <_dtoa_r+0x82a>
 8007a46:	4649      	mov	r1, r9
 8007a48:	4642      	mov	r2, r8
 8007a4a:	4658      	mov	r0, fp
 8007a4c:	f000 fc08 	bl	8008260 <__lshift>
 8007a50:	4681      	mov	r9, r0
 8007a52:	9b08      	ldr	r3, [sp, #32]
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	dd05      	ble.n	8007a64 <_dtoa_r+0x83c>
 8007a58:	4621      	mov	r1, r4
 8007a5a:	461a      	mov	r2, r3
 8007a5c:	4658      	mov	r0, fp
 8007a5e:	f000 fbff 	bl	8008260 <__lshift>
 8007a62:	4604      	mov	r4, r0
 8007a64:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8007a66:	2b00      	cmp	r3, #0
 8007a68:	d059      	beq.n	8007b1e <_dtoa_r+0x8f6>
 8007a6a:	4621      	mov	r1, r4
 8007a6c:	4648      	mov	r0, r9
 8007a6e:	f000 fc63 	bl	8008338 <__mcmp>
 8007a72:	2800      	cmp	r0, #0
 8007a74:	da53      	bge.n	8007b1e <_dtoa_r+0x8f6>
 8007a76:	1e7b      	subs	r3, r7, #1
 8007a78:	9304      	str	r3, [sp, #16]
 8007a7a:	4649      	mov	r1, r9
 8007a7c:	2300      	movs	r3, #0
 8007a7e:	220a      	movs	r2, #10
 8007a80:	4658      	mov	r0, fp
 8007a82:	f000 fa41 	bl	8007f08 <__multadd>
 8007a86:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007a88:	4681      	mov	r9, r0
 8007a8a:	2b00      	cmp	r3, #0
 8007a8c:	f000 8172 	beq.w	8007d74 <_dtoa_r+0xb4c>
 8007a90:	2300      	movs	r3, #0
 8007a92:	4629      	mov	r1, r5
 8007a94:	220a      	movs	r2, #10
 8007a96:	4658      	mov	r0, fp
 8007a98:	f000 fa36 	bl	8007f08 <__multadd>
 8007a9c:	9b00      	ldr	r3, [sp, #0]
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	4605      	mov	r5, r0
 8007aa2:	dc67      	bgt.n	8007b74 <_dtoa_r+0x94c>
 8007aa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007aa6:	2b02      	cmp	r3, #2
 8007aa8:	dc41      	bgt.n	8007b2e <_dtoa_r+0x906>
 8007aaa:	e063      	b.n	8007b74 <_dtoa_r+0x94c>
 8007aac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8007aae:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8007ab2:	e746      	b.n	8007942 <_dtoa_r+0x71a>
 8007ab4:	9b07      	ldr	r3, [sp, #28]
 8007ab6:	1e5c      	subs	r4, r3, #1
 8007ab8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007aba:	42a3      	cmp	r3, r4
 8007abc:	bfbf      	itttt	lt
 8007abe:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8007ac0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8007ac2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8007ac4:	1ae3      	sublt	r3, r4, r3
 8007ac6:	bfb4      	ite	lt
 8007ac8:	18d2      	addlt	r2, r2, r3
 8007aca:	1b1c      	subge	r4, r3, r4
 8007acc:	9b07      	ldr	r3, [sp, #28]
 8007ace:	bfbc      	itt	lt
 8007ad0:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8007ad2:	2400      	movlt	r4, #0
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	bfb5      	itete	lt
 8007ad8:	eba8 0603 	sublt.w	r6, r8, r3
 8007adc:	9b07      	ldrge	r3, [sp, #28]
 8007ade:	2300      	movlt	r3, #0
 8007ae0:	4646      	movge	r6, r8
 8007ae2:	e730      	b.n	8007946 <_dtoa_r+0x71e>
 8007ae4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007ae6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8007ae8:	4646      	mov	r6, r8
 8007aea:	e735      	b.n	8007958 <_dtoa_r+0x730>
 8007aec:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007aee:	e75c      	b.n	80079aa <_dtoa_r+0x782>
 8007af0:	2300      	movs	r3, #0
 8007af2:	e788      	b.n	8007a06 <_dtoa_r+0x7de>
 8007af4:	3fe00000 	.word	0x3fe00000
 8007af8:	40240000 	.word	0x40240000
 8007afc:	40140000 	.word	0x40140000
 8007b00:	9b02      	ldr	r3, [sp, #8]
 8007b02:	e780      	b.n	8007a06 <_dtoa_r+0x7de>
 8007b04:	2300      	movs	r3, #0
 8007b06:	930a      	str	r3, [sp, #40]	@ 0x28
 8007b08:	e782      	b.n	8007a10 <_dtoa_r+0x7e8>
 8007b0a:	d099      	beq.n	8007a40 <_dtoa_r+0x818>
 8007b0c:	9a08      	ldr	r2, [sp, #32]
 8007b0e:	331c      	adds	r3, #28
 8007b10:	441a      	add	r2, r3
 8007b12:	4498      	add	r8, r3
 8007b14:	441e      	add	r6, r3
 8007b16:	9208      	str	r2, [sp, #32]
 8007b18:	e792      	b.n	8007a40 <_dtoa_r+0x818>
 8007b1a:	4603      	mov	r3, r0
 8007b1c:	e7f6      	b.n	8007b0c <_dtoa_r+0x8e4>
 8007b1e:	9b07      	ldr	r3, [sp, #28]
 8007b20:	9704      	str	r7, [sp, #16]
 8007b22:	2b00      	cmp	r3, #0
 8007b24:	dc20      	bgt.n	8007b68 <_dtoa_r+0x940>
 8007b26:	9300      	str	r3, [sp, #0]
 8007b28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007b2a:	2b02      	cmp	r3, #2
 8007b2c:	dd1e      	ble.n	8007b6c <_dtoa_r+0x944>
 8007b2e:	9b00      	ldr	r3, [sp, #0]
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	f47f aec0 	bne.w	80078b6 <_dtoa_r+0x68e>
 8007b36:	4621      	mov	r1, r4
 8007b38:	2205      	movs	r2, #5
 8007b3a:	4658      	mov	r0, fp
 8007b3c:	f000 f9e4 	bl	8007f08 <__multadd>
 8007b40:	4601      	mov	r1, r0
 8007b42:	4604      	mov	r4, r0
 8007b44:	4648      	mov	r0, r9
 8007b46:	f000 fbf7 	bl	8008338 <__mcmp>
 8007b4a:	2800      	cmp	r0, #0
 8007b4c:	f77f aeb3 	ble.w	80078b6 <_dtoa_r+0x68e>
 8007b50:	4656      	mov	r6, sl
 8007b52:	2331      	movs	r3, #49	@ 0x31
 8007b54:	f806 3b01 	strb.w	r3, [r6], #1
 8007b58:	9b04      	ldr	r3, [sp, #16]
 8007b5a:	3301      	adds	r3, #1
 8007b5c:	9304      	str	r3, [sp, #16]
 8007b5e:	e6ae      	b.n	80078be <_dtoa_r+0x696>
 8007b60:	9c07      	ldr	r4, [sp, #28]
 8007b62:	9704      	str	r7, [sp, #16]
 8007b64:	4625      	mov	r5, r4
 8007b66:	e7f3      	b.n	8007b50 <_dtoa_r+0x928>
 8007b68:	9b07      	ldr	r3, [sp, #28]
 8007b6a:	9300      	str	r3, [sp, #0]
 8007b6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	f000 8104 	beq.w	8007d7c <_dtoa_r+0xb54>
 8007b74:	2e00      	cmp	r6, #0
 8007b76:	dd05      	ble.n	8007b84 <_dtoa_r+0x95c>
 8007b78:	4629      	mov	r1, r5
 8007b7a:	4632      	mov	r2, r6
 8007b7c:	4658      	mov	r0, fp
 8007b7e:	f000 fb6f 	bl	8008260 <__lshift>
 8007b82:	4605      	mov	r5, r0
 8007b84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007b86:	2b00      	cmp	r3, #0
 8007b88:	d05a      	beq.n	8007c40 <_dtoa_r+0xa18>
 8007b8a:	6869      	ldr	r1, [r5, #4]
 8007b8c:	4658      	mov	r0, fp
 8007b8e:	f000 f959 	bl	8007e44 <_Balloc>
 8007b92:	4606      	mov	r6, r0
 8007b94:	b928      	cbnz	r0, 8007ba2 <_dtoa_r+0x97a>
 8007b96:	4b84      	ldr	r3, [pc, #528]	@ (8007da8 <_dtoa_r+0xb80>)
 8007b98:	4602      	mov	r2, r0
 8007b9a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8007b9e:	f7ff bb5a 	b.w	8007256 <_dtoa_r+0x2e>
 8007ba2:	692a      	ldr	r2, [r5, #16]
 8007ba4:	3202      	adds	r2, #2
 8007ba6:	0092      	lsls	r2, r2, #2
 8007ba8:	f105 010c 	add.w	r1, r5, #12
 8007bac:	300c      	adds	r0, #12
 8007bae:	f000 fefb 	bl	80089a8 <memcpy>
 8007bb2:	2201      	movs	r2, #1
 8007bb4:	4631      	mov	r1, r6
 8007bb6:	4658      	mov	r0, fp
 8007bb8:	f000 fb52 	bl	8008260 <__lshift>
 8007bbc:	f10a 0301 	add.w	r3, sl, #1
 8007bc0:	9307      	str	r3, [sp, #28]
 8007bc2:	9b00      	ldr	r3, [sp, #0]
 8007bc4:	4453      	add	r3, sl
 8007bc6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007bc8:	9b02      	ldr	r3, [sp, #8]
 8007bca:	f003 0301 	and.w	r3, r3, #1
 8007bce:	462f      	mov	r7, r5
 8007bd0:	930a      	str	r3, [sp, #40]	@ 0x28
 8007bd2:	4605      	mov	r5, r0
 8007bd4:	9b07      	ldr	r3, [sp, #28]
 8007bd6:	4621      	mov	r1, r4
 8007bd8:	3b01      	subs	r3, #1
 8007bda:	4648      	mov	r0, r9
 8007bdc:	9300      	str	r3, [sp, #0]
 8007bde:	f7ff fa99 	bl	8007114 <quorem>
 8007be2:	4639      	mov	r1, r7
 8007be4:	9002      	str	r0, [sp, #8]
 8007be6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007bea:	4648      	mov	r0, r9
 8007bec:	f000 fba4 	bl	8008338 <__mcmp>
 8007bf0:	462a      	mov	r2, r5
 8007bf2:	9008      	str	r0, [sp, #32]
 8007bf4:	4621      	mov	r1, r4
 8007bf6:	4658      	mov	r0, fp
 8007bf8:	f000 fbba 	bl	8008370 <__mdiff>
 8007bfc:	68c2      	ldr	r2, [r0, #12]
 8007bfe:	4606      	mov	r6, r0
 8007c00:	bb02      	cbnz	r2, 8007c44 <_dtoa_r+0xa1c>
 8007c02:	4601      	mov	r1, r0
 8007c04:	4648      	mov	r0, r9
 8007c06:	f000 fb97 	bl	8008338 <__mcmp>
 8007c0a:	4602      	mov	r2, r0
 8007c0c:	4631      	mov	r1, r6
 8007c0e:	4658      	mov	r0, fp
 8007c10:	920e      	str	r2, [sp, #56]	@ 0x38
 8007c12:	f000 f957 	bl	8007ec4 <_Bfree>
 8007c16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007c18:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007c1a:	9e07      	ldr	r6, [sp, #28]
 8007c1c:	ea43 0102 	orr.w	r1, r3, r2
 8007c20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007c22:	4319      	orrs	r1, r3
 8007c24:	d110      	bne.n	8007c48 <_dtoa_r+0xa20>
 8007c26:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007c2a:	d029      	beq.n	8007c80 <_dtoa_r+0xa58>
 8007c2c:	9b08      	ldr	r3, [sp, #32]
 8007c2e:	2b00      	cmp	r3, #0
 8007c30:	dd02      	ble.n	8007c38 <_dtoa_r+0xa10>
 8007c32:	9b02      	ldr	r3, [sp, #8]
 8007c34:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8007c38:	9b00      	ldr	r3, [sp, #0]
 8007c3a:	f883 8000 	strb.w	r8, [r3]
 8007c3e:	e63f      	b.n	80078c0 <_dtoa_r+0x698>
 8007c40:	4628      	mov	r0, r5
 8007c42:	e7bb      	b.n	8007bbc <_dtoa_r+0x994>
 8007c44:	2201      	movs	r2, #1
 8007c46:	e7e1      	b.n	8007c0c <_dtoa_r+0x9e4>
 8007c48:	9b08      	ldr	r3, [sp, #32]
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	db04      	blt.n	8007c58 <_dtoa_r+0xa30>
 8007c4e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007c50:	430b      	orrs	r3, r1
 8007c52:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007c54:	430b      	orrs	r3, r1
 8007c56:	d120      	bne.n	8007c9a <_dtoa_r+0xa72>
 8007c58:	2a00      	cmp	r2, #0
 8007c5a:	dded      	ble.n	8007c38 <_dtoa_r+0xa10>
 8007c5c:	4649      	mov	r1, r9
 8007c5e:	2201      	movs	r2, #1
 8007c60:	4658      	mov	r0, fp
 8007c62:	f000 fafd 	bl	8008260 <__lshift>
 8007c66:	4621      	mov	r1, r4
 8007c68:	4681      	mov	r9, r0
 8007c6a:	f000 fb65 	bl	8008338 <__mcmp>
 8007c6e:	2800      	cmp	r0, #0
 8007c70:	dc03      	bgt.n	8007c7a <_dtoa_r+0xa52>
 8007c72:	d1e1      	bne.n	8007c38 <_dtoa_r+0xa10>
 8007c74:	f018 0f01 	tst.w	r8, #1
 8007c78:	d0de      	beq.n	8007c38 <_dtoa_r+0xa10>
 8007c7a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007c7e:	d1d8      	bne.n	8007c32 <_dtoa_r+0xa0a>
 8007c80:	9a00      	ldr	r2, [sp, #0]
 8007c82:	2339      	movs	r3, #57	@ 0x39
 8007c84:	7013      	strb	r3, [r2, #0]
 8007c86:	4633      	mov	r3, r6
 8007c88:	461e      	mov	r6, r3
 8007c8a:	3b01      	subs	r3, #1
 8007c8c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8007c90:	2a39      	cmp	r2, #57	@ 0x39
 8007c92:	d052      	beq.n	8007d3a <_dtoa_r+0xb12>
 8007c94:	3201      	adds	r2, #1
 8007c96:	701a      	strb	r2, [r3, #0]
 8007c98:	e612      	b.n	80078c0 <_dtoa_r+0x698>
 8007c9a:	2a00      	cmp	r2, #0
 8007c9c:	dd07      	ble.n	8007cae <_dtoa_r+0xa86>
 8007c9e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007ca2:	d0ed      	beq.n	8007c80 <_dtoa_r+0xa58>
 8007ca4:	9a00      	ldr	r2, [sp, #0]
 8007ca6:	f108 0301 	add.w	r3, r8, #1
 8007caa:	7013      	strb	r3, [r2, #0]
 8007cac:	e608      	b.n	80078c0 <_dtoa_r+0x698>
 8007cae:	9b07      	ldr	r3, [sp, #28]
 8007cb0:	9a07      	ldr	r2, [sp, #28]
 8007cb2:	f803 8c01 	strb.w	r8, [r3, #-1]
 8007cb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007cb8:	4293      	cmp	r3, r2
 8007cba:	d028      	beq.n	8007d0e <_dtoa_r+0xae6>
 8007cbc:	4649      	mov	r1, r9
 8007cbe:	2300      	movs	r3, #0
 8007cc0:	220a      	movs	r2, #10
 8007cc2:	4658      	mov	r0, fp
 8007cc4:	f000 f920 	bl	8007f08 <__multadd>
 8007cc8:	42af      	cmp	r7, r5
 8007cca:	4681      	mov	r9, r0
 8007ccc:	f04f 0300 	mov.w	r3, #0
 8007cd0:	f04f 020a 	mov.w	r2, #10
 8007cd4:	4639      	mov	r1, r7
 8007cd6:	4658      	mov	r0, fp
 8007cd8:	d107      	bne.n	8007cea <_dtoa_r+0xac2>
 8007cda:	f000 f915 	bl	8007f08 <__multadd>
 8007cde:	4607      	mov	r7, r0
 8007ce0:	4605      	mov	r5, r0
 8007ce2:	9b07      	ldr	r3, [sp, #28]
 8007ce4:	3301      	adds	r3, #1
 8007ce6:	9307      	str	r3, [sp, #28]
 8007ce8:	e774      	b.n	8007bd4 <_dtoa_r+0x9ac>
 8007cea:	f000 f90d 	bl	8007f08 <__multadd>
 8007cee:	4629      	mov	r1, r5
 8007cf0:	4607      	mov	r7, r0
 8007cf2:	2300      	movs	r3, #0
 8007cf4:	220a      	movs	r2, #10
 8007cf6:	4658      	mov	r0, fp
 8007cf8:	f000 f906 	bl	8007f08 <__multadd>
 8007cfc:	4605      	mov	r5, r0
 8007cfe:	e7f0      	b.n	8007ce2 <_dtoa_r+0xaba>
 8007d00:	9b00      	ldr	r3, [sp, #0]
 8007d02:	2b00      	cmp	r3, #0
 8007d04:	bfcc      	ite	gt
 8007d06:	461e      	movgt	r6, r3
 8007d08:	2601      	movle	r6, #1
 8007d0a:	4456      	add	r6, sl
 8007d0c:	2700      	movs	r7, #0
 8007d0e:	4649      	mov	r1, r9
 8007d10:	2201      	movs	r2, #1
 8007d12:	4658      	mov	r0, fp
 8007d14:	f000 faa4 	bl	8008260 <__lshift>
 8007d18:	4621      	mov	r1, r4
 8007d1a:	4681      	mov	r9, r0
 8007d1c:	f000 fb0c 	bl	8008338 <__mcmp>
 8007d20:	2800      	cmp	r0, #0
 8007d22:	dcb0      	bgt.n	8007c86 <_dtoa_r+0xa5e>
 8007d24:	d102      	bne.n	8007d2c <_dtoa_r+0xb04>
 8007d26:	f018 0f01 	tst.w	r8, #1
 8007d2a:	d1ac      	bne.n	8007c86 <_dtoa_r+0xa5e>
 8007d2c:	4633      	mov	r3, r6
 8007d2e:	461e      	mov	r6, r3
 8007d30:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007d34:	2a30      	cmp	r2, #48	@ 0x30
 8007d36:	d0fa      	beq.n	8007d2e <_dtoa_r+0xb06>
 8007d38:	e5c2      	b.n	80078c0 <_dtoa_r+0x698>
 8007d3a:	459a      	cmp	sl, r3
 8007d3c:	d1a4      	bne.n	8007c88 <_dtoa_r+0xa60>
 8007d3e:	9b04      	ldr	r3, [sp, #16]
 8007d40:	3301      	adds	r3, #1
 8007d42:	9304      	str	r3, [sp, #16]
 8007d44:	2331      	movs	r3, #49	@ 0x31
 8007d46:	f88a 3000 	strb.w	r3, [sl]
 8007d4a:	e5b9      	b.n	80078c0 <_dtoa_r+0x698>
 8007d4c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8007d4e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8007dac <_dtoa_r+0xb84>
 8007d52:	b11b      	cbz	r3, 8007d5c <_dtoa_r+0xb34>
 8007d54:	f10a 0308 	add.w	r3, sl, #8
 8007d58:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8007d5a:	6013      	str	r3, [r2, #0]
 8007d5c:	4650      	mov	r0, sl
 8007d5e:	b019      	add	sp, #100	@ 0x64
 8007d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007d66:	2b01      	cmp	r3, #1
 8007d68:	f77f ae37 	ble.w	80079da <_dtoa_r+0x7b2>
 8007d6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007d6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8007d70:	2001      	movs	r0, #1
 8007d72:	e655      	b.n	8007a20 <_dtoa_r+0x7f8>
 8007d74:	9b00      	ldr	r3, [sp, #0]
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	f77f aed6 	ble.w	8007b28 <_dtoa_r+0x900>
 8007d7c:	4656      	mov	r6, sl
 8007d7e:	4621      	mov	r1, r4
 8007d80:	4648      	mov	r0, r9
 8007d82:	f7ff f9c7 	bl	8007114 <quorem>
 8007d86:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007d8a:	f806 8b01 	strb.w	r8, [r6], #1
 8007d8e:	9b00      	ldr	r3, [sp, #0]
 8007d90:	eba6 020a 	sub.w	r2, r6, sl
 8007d94:	4293      	cmp	r3, r2
 8007d96:	ddb3      	ble.n	8007d00 <_dtoa_r+0xad8>
 8007d98:	4649      	mov	r1, r9
 8007d9a:	2300      	movs	r3, #0
 8007d9c:	220a      	movs	r2, #10
 8007d9e:	4658      	mov	r0, fp
 8007da0:	f000 f8b2 	bl	8007f08 <__multadd>
 8007da4:	4681      	mov	r9, r0
 8007da6:	e7ea      	b.n	8007d7e <_dtoa_r+0xb56>
 8007da8:	0800937e 	.word	0x0800937e
 8007dac:	08009319 	.word	0x08009319

08007db0 <_free_r>:
 8007db0:	b538      	push	{r3, r4, r5, lr}
 8007db2:	4605      	mov	r5, r0
 8007db4:	2900      	cmp	r1, #0
 8007db6:	d041      	beq.n	8007e3c <_free_r+0x8c>
 8007db8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007dbc:	1f0c      	subs	r4, r1, #4
 8007dbe:	2b00      	cmp	r3, #0
 8007dc0:	bfb8      	it	lt
 8007dc2:	18e4      	addlt	r4, r4, r3
 8007dc4:	f7fe fafe 	bl	80063c4 <__malloc_lock>
 8007dc8:	4a1d      	ldr	r2, [pc, #116]	@ (8007e40 <_free_r+0x90>)
 8007dca:	6813      	ldr	r3, [r2, #0]
 8007dcc:	b933      	cbnz	r3, 8007ddc <_free_r+0x2c>
 8007dce:	6063      	str	r3, [r4, #4]
 8007dd0:	6014      	str	r4, [r2, #0]
 8007dd2:	4628      	mov	r0, r5
 8007dd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007dd8:	f7fe bafa 	b.w	80063d0 <__malloc_unlock>
 8007ddc:	42a3      	cmp	r3, r4
 8007dde:	d908      	bls.n	8007df2 <_free_r+0x42>
 8007de0:	6820      	ldr	r0, [r4, #0]
 8007de2:	1821      	adds	r1, r4, r0
 8007de4:	428b      	cmp	r3, r1
 8007de6:	bf01      	itttt	eq
 8007de8:	6819      	ldreq	r1, [r3, #0]
 8007dea:	685b      	ldreq	r3, [r3, #4]
 8007dec:	1809      	addeq	r1, r1, r0
 8007dee:	6021      	streq	r1, [r4, #0]
 8007df0:	e7ed      	b.n	8007dce <_free_r+0x1e>
 8007df2:	461a      	mov	r2, r3
 8007df4:	685b      	ldr	r3, [r3, #4]
 8007df6:	b10b      	cbz	r3, 8007dfc <_free_r+0x4c>
 8007df8:	42a3      	cmp	r3, r4
 8007dfa:	d9fa      	bls.n	8007df2 <_free_r+0x42>
 8007dfc:	6811      	ldr	r1, [r2, #0]
 8007dfe:	1850      	adds	r0, r2, r1
 8007e00:	42a0      	cmp	r0, r4
 8007e02:	d10b      	bne.n	8007e1c <_free_r+0x6c>
 8007e04:	6820      	ldr	r0, [r4, #0]
 8007e06:	4401      	add	r1, r0
 8007e08:	1850      	adds	r0, r2, r1
 8007e0a:	4283      	cmp	r3, r0
 8007e0c:	6011      	str	r1, [r2, #0]
 8007e0e:	d1e0      	bne.n	8007dd2 <_free_r+0x22>
 8007e10:	6818      	ldr	r0, [r3, #0]
 8007e12:	685b      	ldr	r3, [r3, #4]
 8007e14:	6053      	str	r3, [r2, #4]
 8007e16:	4408      	add	r0, r1
 8007e18:	6010      	str	r0, [r2, #0]
 8007e1a:	e7da      	b.n	8007dd2 <_free_r+0x22>
 8007e1c:	d902      	bls.n	8007e24 <_free_r+0x74>
 8007e1e:	230c      	movs	r3, #12
 8007e20:	602b      	str	r3, [r5, #0]
 8007e22:	e7d6      	b.n	8007dd2 <_free_r+0x22>
 8007e24:	6820      	ldr	r0, [r4, #0]
 8007e26:	1821      	adds	r1, r4, r0
 8007e28:	428b      	cmp	r3, r1
 8007e2a:	bf04      	itt	eq
 8007e2c:	6819      	ldreq	r1, [r3, #0]
 8007e2e:	685b      	ldreq	r3, [r3, #4]
 8007e30:	6063      	str	r3, [r4, #4]
 8007e32:	bf04      	itt	eq
 8007e34:	1809      	addeq	r1, r1, r0
 8007e36:	6021      	streq	r1, [r4, #0]
 8007e38:	6054      	str	r4, [r2, #4]
 8007e3a:	e7ca      	b.n	8007dd2 <_free_r+0x22>
 8007e3c:	bd38      	pop	{r3, r4, r5, pc}
 8007e3e:	bf00      	nop
 8007e40:	200004d4 	.word	0x200004d4

08007e44 <_Balloc>:
 8007e44:	b570      	push	{r4, r5, r6, lr}
 8007e46:	69c6      	ldr	r6, [r0, #28]
 8007e48:	4604      	mov	r4, r0
 8007e4a:	460d      	mov	r5, r1
 8007e4c:	b976      	cbnz	r6, 8007e6c <_Balloc+0x28>
 8007e4e:	2010      	movs	r0, #16
 8007e50:	f7fe fa06 	bl	8006260 <malloc>
 8007e54:	4602      	mov	r2, r0
 8007e56:	61e0      	str	r0, [r4, #28]
 8007e58:	b920      	cbnz	r0, 8007e64 <_Balloc+0x20>
 8007e5a:	4b18      	ldr	r3, [pc, #96]	@ (8007ebc <_Balloc+0x78>)
 8007e5c:	4818      	ldr	r0, [pc, #96]	@ (8007ec0 <_Balloc+0x7c>)
 8007e5e:	216b      	movs	r1, #107	@ 0x6b
 8007e60:	f7ff f93a 	bl	80070d8 <__assert_func>
 8007e64:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007e68:	6006      	str	r6, [r0, #0]
 8007e6a:	60c6      	str	r6, [r0, #12]
 8007e6c:	69e6      	ldr	r6, [r4, #28]
 8007e6e:	68f3      	ldr	r3, [r6, #12]
 8007e70:	b183      	cbz	r3, 8007e94 <_Balloc+0x50>
 8007e72:	69e3      	ldr	r3, [r4, #28]
 8007e74:	68db      	ldr	r3, [r3, #12]
 8007e76:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8007e7a:	b9b8      	cbnz	r0, 8007eac <_Balloc+0x68>
 8007e7c:	2101      	movs	r1, #1
 8007e7e:	fa01 f605 	lsl.w	r6, r1, r5
 8007e82:	1d72      	adds	r2, r6, #5
 8007e84:	0092      	lsls	r2, r2, #2
 8007e86:	4620      	mov	r0, r4
 8007e88:	f7fe f9d6 	bl	8006238 <_calloc_r>
 8007e8c:	b160      	cbz	r0, 8007ea8 <_Balloc+0x64>
 8007e8e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007e92:	e00e      	b.n	8007eb2 <_Balloc+0x6e>
 8007e94:	2221      	movs	r2, #33	@ 0x21
 8007e96:	2104      	movs	r1, #4
 8007e98:	4620      	mov	r0, r4
 8007e9a:	f7fe f9cd 	bl	8006238 <_calloc_r>
 8007e9e:	69e3      	ldr	r3, [r4, #28]
 8007ea0:	60f0      	str	r0, [r6, #12]
 8007ea2:	68db      	ldr	r3, [r3, #12]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d1e4      	bne.n	8007e72 <_Balloc+0x2e>
 8007ea8:	2000      	movs	r0, #0
 8007eaa:	bd70      	pop	{r4, r5, r6, pc}
 8007eac:	6802      	ldr	r2, [r0, #0]
 8007eae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007eb2:	2300      	movs	r3, #0
 8007eb4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007eb8:	e7f7      	b.n	8007eaa <_Balloc+0x66>
 8007eba:	bf00      	nop
 8007ebc:	0800926c 	.word	0x0800926c
 8007ec0:	0800938f 	.word	0x0800938f

08007ec4 <_Bfree>:
 8007ec4:	b570      	push	{r4, r5, r6, lr}
 8007ec6:	69c6      	ldr	r6, [r0, #28]
 8007ec8:	4605      	mov	r5, r0
 8007eca:	460c      	mov	r4, r1
 8007ecc:	b976      	cbnz	r6, 8007eec <_Bfree+0x28>
 8007ece:	2010      	movs	r0, #16
 8007ed0:	f7fe f9c6 	bl	8006260 <malloc>
 8007ed4:	4602      	mov	r2, r0
 8007ed6:	61e8      	str	r0, [r5, #28]
 8007ed8:	b920      	cbnz	r0, 8007ee4 <_Bfree+0x20>
 8007eda:	4b09      	ldr	r3, [pc, #36]	@ (8007f00 <_Bfree+0x3c>)
 8007edc:	4809      	ldr	r0, [pc, #36]	@ (8007f04 <_Bfree+0x40>)
 8007ede:	218f      	movs	r1, #143	@ 0x8f
 8007ee0:	f7ff f8fa 	bl	80070d8 <__assert_func>
 8007ee4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007ee8:	6006      	str	r6, [r0, #0]
 8007eea:	60c6      	str	r6, [r0, #12]
 8007eec:	b13c      	cbz	r4, 8007efe <_Bfree+0x3a>
 8007eee:	69eb      	ldr	r3, [r5, #28]
 8007ef0:	6862      	ldr	r2, [r4, #4]
 8007ef2:	68db      	ldr	r3, [r3, #12]
 8007ef4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007ef8:	6021      	str	r1, [r4, #0]
 8007efa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8007efe:	bd70      	pop	{r4, r5, r6, pc}
 8007f00:	0800926c 	.word	0x0800926c
 8007f04:	0800938f 	.word	0x0800938f

08007f08 <__multadd>:
 8007f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f0c:	690d      	ldr	r5, [r1, #16]
 8007f0e:	4607      	mov	r7, r0
 8007f10:	460c      	mov	r4, r1
 8007f12:	461e      	mov	r6, r3
 8007f14:	f101 0c14 	add.w	ip, r1, #20
 8007f18:	2000      	movs	r0, #0
 8007f1a:	f8dc 3000 	ldr.w	r3, [ip]
 8007f1e:	b299      	uxth	r1, r3
 8007f20:	fb02 6101 	mla	r1, r2, r1, r6
 8007f24:	0c1e      	lsrs	r6, r3, #16
 8007f26:	0c0b      	lsrs	r3, r1, #16
 8007f28:	fb02 3306 	mla	r3, r2, r6, r3
 8007f2c:	b289      	uxth	r1, r1
 8007f2e:	3001      	adds	r0, #1
 8007f30:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007f34:	4285      	cmp	r5, r0
 8007f36:	f84c 1b04 	str.w	r1, [ip], #4
 8007f3a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007f3e:	dcec      	bgt.n	8007f1a <__multadd+0x12>
 8007f40:	b30e      	cbz	r6, 8007f86 <__multadd+0x7e>
 8007f42:	68a3      	ldr	r3, [r4, #8]
 8007f44:	42ab      	cmp	r3, r5
 8007f46:	dc19      	bgt.n	8007f7c <__multadd+0x74>
 8007f48:	6861      	ldr	r1, [r4, #4]
 8007f4a:	4638      	mov	r0, r7
 8007f4c:	3101      	adds	r1, #1
 8007f4e:	f7ff ff79 	bl	8007e44 <_Balloc>
 8007f52:	4680      	mov	r8, r0
 8007f54:	b928      	cbnz	r0, 8007f62 <__multadd+0x5a>
 8007f56:	4602      	mov	r2, r0
 8007f58:	4b0c      	ldr	r3, [pc, #48]	@ (8007f8c <__multadd+0x84>)
 8007f5a:	480d      	ldr	r0, [pc, #52]	@ (8007f90 <__multadd+0x88>)
 8007f5c:	21ba      	movs	r1, #186	@ 0xba
 8007f5e:	f7ff f8bb 	bl	80070d8 <__assert_func>
 8007f62:	6922      	ldr	r2, [r4, #16]
 8007f64:	3202      	adds	r2, #2
 8007f66:	f104 010c 	add.w	r1, r4, #12
 8007f6a:	0092      	lsls	r2, r2, #2
 8007f6c:	300c      	adds	r0, #12
 8007f6e:	f000 fd1b 	bl	80089a8 <memcpy>
 8007f72:	4621      	mov	r1, r4
 8007f74:	4638      	mov	r0, r7
 8007f76:	f7ff ffa5 	bl	8007ec4 <_Bfree>
 8007f7a:	4644      	mov	r4, r8
 8007f7c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007f80:	3501      	adds	r5, #1
 8007f82:	615e      	str	r6, [r3, #20]
 8007f84:	6125      	str	r5, [r4, #16]
 8007f86:	4620      	mov	r0, r4
 8007f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f8c:	0800937e 	.word	0x0800937e
 8007f90:	0800938f 	.word	0x0800938f

08007f94 <__hi0bits>:
 8007f94:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007f98:	4603      	mov	r3, r0
 8007f9a:	bf36      	itet	cc
 8007f9c:	0403      	lslcc	r3, r0, #16
 8007f9e:	2000      	movcs	r0, #0
 8007fa0:	2010      	movcc	r0, #16
 8007fa2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007fa6:	bf3c      	itt	cc
 8007fa8:	021b      	lslcc	r3, r3, #8
 8007faa:	3008      	addcc	r0, #8
 8007fac:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007fb0:	bf3c      	itt	cc
 8007fb2:	011b      	lslcc	r3, r3, #4
 8007fb4:	3004      	addcc	r0, #4
 8007fb6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007fba:	bf3c      	itt	cc
 8007fbc:	009b      	lslcc	r3, r3, #2
 8007fbe:	3002      	addcc	r0, #2
 8007fc0:	2b00      	cmp	r3, #0
 8007fc2:	db05      	blt.n	8007fd0 <__hi0bits+0x3c>
 8007fc4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007fc8:	f100 0001 	add.w	r0, r0, #1
 8007fcc:	bf08      	it	eq
 8007fce:	2020      	moveq	r0, #32
 8007fd0:	4770      	bx	lr

08007fd2 <__lo0bits>:
 8007fd2:	6803      	ldr	r3, [r0, #0]
 8007fd4:	4602      	mov	r2, r0
 8007fd6:	f013 0007 	ands.w	r0, r3, #7
 8007fda:	d00b      	beq.n	8007ff4 <__lo0bits+0x22>
 8007fdc:	07d9      	lsls	r1, r3, #31
 8007fde:	d421      	bmi.n	8008024 <__lo0bits+0x52>
 8007fe0:	0798      	lsls	r0, r3, #30
 8007fe2:	bf49      	itett	mi
 8007fe4:	085b      	lsrmi	r3, r3, #1
 8007fe6:	089b      	lsrpl	r3, r3, #2
 8007fe8:	2001      	movmi	r0, #1
 8007fea:	6013      	strmi	r3, [r2, #0]
 8007fec:	bf5c      	itt	pl
 8007fee:	6013      	strpl	r3, [r2, #0]
 8007ff0:	2002      	movpl	r0, #2
 8007ff2:	4770      	bx	lr
 8007ff4:	b299      	uxth	r1, r3
 8007ff6:	b909      	cbnz	r1, 8007ffc <__lo0bits+0x2a>
 8007ff8:	0c1b      	lsrs	r3, r3, #16
 8007ffa:	2010      	movs	r0, #16
 8007ffc:	b2d9      	uxtb	r1, r3
 8007ffe:	b909      	cbnz	r1, 8008004 <__lo0bits+0x32>
 8008000:	3008      	adds	r0, #8
 8008002:	0a1b      	lsrs	r3, r3, #8
 8008004:	0719      	lsls	r1, r3, #28
 8008006:	bf04      	itt	eq
 8008008:	091b      	lsreq	r3, r3, #4
 800800a:	3004      	addeq	r0, #4
 800800c:	0799      	lsls	r1, r3, #30
 800800e:	bf04      	itt	eq
 8008010:	089b      	lsreq	r3, r3, #2
 8008012:	3002      	addeq	r0, #2
 8008014:	07d9      	lsls	r1, r3, #31
 8008016:	d403      	bmi.n	8008020 <__lo0bits+0x4e>
 8008018:	085b      	lsrs	r3, r3, #1
 800801a:	f100 0001 	add.w	r0, r0, #1
 800801e:	d003      	beq.n	8008028 <__lo0bits+0x56>
 8008020:	6013      	str	r3, [r2, #0]
 8008022:	4770      	bx	lr
 8008024:	2000      	movs	r0, #0
 8008026:	4770      	bx	lr
 8008028:	2020      	movs	r0, #32
 800802a:	4770      	bx	lr

0800802c <__i2b>:
 800802c:	b510      	push	{r4, lr}
 800802e:	460c      	mov	r4, r1
 8008030:	2101      	movs	r1, #1
 8008032:	f7ff ff07 	bl	8007e44 <_Balloc>
 8008036:	4602      	mov	r2, r0
 8008038:	b928      	cbnz	r0, 8008046 <__i2b+0x1a>
 800803a:	4b05      	ldr	r3, [pc, #20]	@ (8008050 <__i2b+0x24>)
 800803c:	4805      	ldr	r0, [pc, #20]	@ (8008054 <__i2b+0x28>)
 800803e:	f240 1145 	movw	r1, #325	@ 0x145
 8008042:	f7ff f849 	bl	80070d8 <__assert_func>
 8008046:	2301      	movs	r3, #1
 8008048:	6144      	str	r4, [r0, #20]
 800804a:	6103      	str	r3, [r0, #16]
 800804c:	bd10      	pop	{r4, pc}
 800804e:	bf00      	nop
 8008050:	0800937e 	.word	0x0800937e
 8008054:	0800938f 	.word	0x0800938f

08008058 <__multiply>:
 8008058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800805c:	4614      	mov	r4, r2
 800805e:	690a      	ldr	r2, [r1, #16]
 8008060:	6923      	ldr	r3, [r4, #16]
 8008062:	429a      	cmp	r2, r3
 8008064:	bfa8      	it	ge
 8008066:	4623      	movge	r3, r4
 8008068:	460f      	mov	r7, r1
 800806a:	bfa4      	itt	ge
 800806c:	460c      	movge	r4, r1
 800806e:	461f      	movge	r7, r3
 8008070:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8008074:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8008078:	68a3      	ldr	r3, [r4, #8]
 800807a:	6861      	ldr	r1, [r4, #4]
 800807c:	eb0a 0609 	add.w	r6, sl, r9
 8008080:	42b3      	cmp	r3, r6
 8008082:	b085      	sub	sp, #20
 8008084:	bfb8      	it	lt
 8008086:	3101      	addlt	r1, #1
 8008088:	f7ff fedc 	bl	8007e44 <_Balloc>
 800808c:	b930      	cbnz	r0, 800809c <__multiply+0x44>
 800808e:	4602      	mov	r2, r0
 8008090:	4b44      	ldr	r3, [pc, #272]	@ (80081a4 <__multiply+0x14c>)
 8008092:	4845      	ldr	r0, [pc, #276]	@ (80081a8 <__multiply+0x150>)
 8008094:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8008098:	f7ff f81e 	bl	80070d8 <__assert_func>
 800809c:	f100 0514 	add.w	r5, r0, #20
 80080a0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80080a4:	462b      	mov	r3, r5
 80080a6:	2200      	movs	r2, #0
 80080a8:	4543      	cmp	r3, r8
 80080aa:	d321      	bcc.n	80080f0 <__multiply+0x98>
 80080ac:	f107 0114 	add.w	r1, r7, #20
 80080b0:	f104 0214 	add.w	r2, r4, #20
 80080b4:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80080b8:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80080bc:	9302      	str	r3, [sp, #8]
 80080be:	1b13      	subs	r3, r2, r4
 80080c0:	3b15      	subs	r3, #21
 80080c2:	f023 0303 	bic.w	r3, r3, #3
 80080c6:	3304      	adds	r3, #4
 80080c8:	f104 0715 	add.w	r7, r4, #21
 80080cc:	42ba      	cmp	r2, r7
 80080ce:	bf38      	it	cc
 80080d0:	2304      	movcc	r3, #4
 80080d2:	9301      	str	r3, [sp, #4]
 80080d4:	9b02      	ldr	r3, [sp, #8]
 80080d6:	9103      	str	r1, [sp, #12]
 80080d8:	428b      	cmp	r3, r1
 80080da:	d80c      	bhi.n	80080f6 <__multiply+0x9e>
 80080dc:	2e00      	cmp	r6, #0
 80080de:	dd03      	ble.n	80080e8 <__multiply+0x90>
 80080e0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80080e4:	2b00      	cmp	r3, #0
 80080e6:	d05b      	beq.n	80081a0 <__multiply+0x148>
 80080e8:	6106      	str	r6, [r0, #16]
 80080ea:	b005      	add	sp, #20
 80080ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080f0:	f843 2b04 	str.w	r2, [r3], #4
 80080f4:	e7d8      	b.n	80080a8 <__multiply+0x50>
 80080f6:	f8b1 a000 	ldrh.w	sl, [r1]
 80080fa:	f1ba 0f00 	cmp.w	sl, #0
 80080fe:	d024      	beq.n	800814a <__multiply+0xf2>
 8008100:	f104 0e14 	add.w	lr, r4, #20
 8008104:	46a9      	mov	r9, r5
 8008106:	f04f 0c00 	mov.w	ip, #0
 800810a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800810e:	f8d9 3000 	ldr.w	r3, [r9]
 8008112:	fa1f fb87 	uxth.w	fp, r7
 8008116:	b29b      	uxth	r3, r3
 8008118:	fb0a 330b 	mla	r3, sl, fp, r3
 800811c:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8008120:	f8d9 7000 	ldr.w	r7, [r9]
 8008124:	4463      	add	r3, ip
 8008126:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800812a:	fb0a c70b 	mla	r7, sl, fp, ip
 800812e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8008132:	b29b      	uxth	r3, r3
 8008134:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8008138:	4572      	cmp	r2, lr
 800813a:	f849 3b04 	str.w	r3, [r9], #4
 800813e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8008142:	d8e2      	bhi.n	800810a <__multiply+0xb2>
 8008144:	9b01      	ldr	r3, [sp, #4]
 8008146:	f845 c003 	str.w	ip, [r5, r3]
 800814a:	9b03      	ldr	r3, [sp, #12]
 800814c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8008150:	3104      	adds	r1, #4
 8008152:	f1b9 0f00 	cmp.w	r9, #0
 8008156:	d021      	beq.n	800819c <__multiply+0x144>
 8008158:	682b      	ldr	r3, [r5, #0]
 800815a:	f104 0c14 	add.w	ip, r4, #20
 800815e:	46ae      	mov	lr, r5
 8008160:	f04f 0a00 	mov.w	sl, #0
 8008164:	f8bc b000 	ldrh.w	fp, [ip]
 8008168:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800816c:	fb09 770b 	mla	r7, r9, fp, r7
 8008170:	4457      	add	r7, sl
 8008172:	b29b      	uxth	r3, r3
 8008174:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8008178:	f84e 3b04 	str.w	r3, [lr], #4
 800817c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8008180:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008184:	f8be 3000 	ldrh.w	r3, [lr]
 8008188:	fb09 330a 	mla	r3, r9, sl, r3
 800818c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8008190:	4562      	cmp	r2, ip
 8008192:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008196:	d8e5      	bhi.n	8008164 <__multiply+0x10c>
 8008198:	9f01      	ldr	r7, [sp, #4]
 800819a:	51eb      	str	r3, [r5, r7]
 800819c:	3504      	adds	r5, #4
 800819e:	e799      	b.n	80080d4 <__multiply+0x7c>
 80081a0:	3e01      	subs	r6, #1
 80081a2:	e79b      	b.n	80080dc <__multiply+0x84>
 80081a4:	0800937e 	.word	0x0800937e
 80081a8:	0800938f 	.word	0x0800938f

080081ac <__pow5mult>:
 80081ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80081b0:	4615      	mov	r5, r2
 80081b2:	f012 0203 	ands.w	r2, r2, #3
 80081b6:	4607      	mov	r7, r0
 80081b8:	460e      	mov	r6, r1
 80081ba:	d007      	beq.n	80081cc <__pow5mult+0x20>
 80081bc:	4c25      	ldr	r4, [pc, #148]	@ (8008254 <__pow5mult+0xa8>)
 80081be:	3a01      	subs	r2, #1
 80081c0:	2300      	movs	r3, #0
 80081c2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80081c6:	f7ff fe9f 	bl	8007f08 <__multadd>
 80081ca:	4606      	mov	r6, r0
 80081cc:	10ad      	asrs	r5, r5, #2
 80081ce:	d03d      	beq.n	800824c <__pow5mult+0xa0>
 80081d0:	69fc      	ldr	r4, [r7, #28]
 80081d2:	b97c      	cbnz	r4, 80081f4 <__pow5mult+0x48>
 80081d4:	2010      	movs	r0, #16
 80081d6:	f7fe f843 	bl	8006260 <malloc>
 80081da:	4602      	mov	r2, r0
 80081dc:	61f8      	str	r0, [r7, #28]
 80081de:	b928      	cbnz	r0, 80081ec <__pow5mult+0x40>
 80081e0:	4b1d      	ldr	r3, [pc, #116]	@ (8008258 <__pow5mult+0xac>)
 80081e2:	481e      	ldr	r0, [pc, #120]	@ (800825c <__pow5mult+0xb0>)
 80081e4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80081e8:	f7fe ff76 	bl	80070d8 <__assert_func>
 80081ec:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80081f0:	6004      	str	r4, [r0, #0]
 80081f2:	60c4      	str	r4, [r0, #12]
 80081f4:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80081f8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80081fc:	b94c      	cbnz	r4, 8008212 <__pow5mult+0x66>
 80081fe:	f240 2171 	movw	r1, #625	@ 0x271
 8008202:	4638      	mov	r0, r7
 8008204:	f7ff ff12 	bl	800802c <__i2b>
 8008208:	2300      	movs	r3, #0
 800820a:	f8c8 0008 	str.w	r0, [r8, #8]
 800820e:	4604      	mov	r4, r0
 8008210:	6003      	str	r3, [r0, #0]
 8008212:	f04f 0900 	mov.w	r9, #0
 8008216:	07eb      	lsls	r3, r5, #31
 8008218:	d50a      	bpl.n	8008230 <__pow5mult+0x84>
 800821a:	4631      	mov	r1, r6
 800821c:	4622      	mov	r2, r4
 800821e:	4638      	mov	r0, r7
 8008220:	f7ff ff1a 	bl	8008058 <__multiply>
 8008224:	4631      	mov	r1, r6
 8008226:	4680      	mov	r8, r0
 8008228:	4638      	mov	r0, r7
 800822a:	f7ff fe4b 	bl	8007ec4 <_Bfree>
 800822e:	4646      	mov	r6, r8
 8008230:	106d      	asrs	r5, r5, #1
 8008232:	d00b      	beq.n	800824c <__pow5mult+0xa0>
 8008234:	6820      	ldr	r0, [r4, #0]
 8008236:	b938      	cbnz	r0, 8008248 <__pow5mult+0x9c>
 8008238:	4622      	mov	r2, r4
 800823a:	4621      	mov	r1, r4
 800823c:	4638      	mov	r0, r7
 800823e:	f7ff ff0b 	bl	8008058 <__multiply>
 8008242:	6020      	str	r0, [r4, #0]
 8008244:	f8c0 9000 	str.w	r9, [r0]
 8008248:	4604      	mov	r4, r0
 800824a:	e7e4      	b.n	8008216 <__pow5mult+0x6a>
 800824c:	4630      	mov	r0, r6
 800824e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008252:	bf00      	nop
 8008254:	080093e8 	.word	0x080093e8
 8008258:	0800926c 	.word	0x0800926c
 800825c:	0800938f 	.word	0x0800938f

08008260 <__lshift>:
 8008260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008264:	460c      	mov	r4, r1
 8008266:	6849      	ldr	r1, [r1, #4]
 8008268:	6923      	ldr	r3, [r4, #16]
 800826a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800826e:	68a3      	ldr	r3, [r4, #8]
 8008270:	4607      	mov	r7, r0
 8008272:	4691      	mov	r9, r2
 8008274:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8008278:	f108 0601 	add.w	r6, r8, #1
 800827c:	42b3      	cmp	r3, r6
 800827e:	db0b      	blt.n	8008298 <__lshift+0x38>
 8008280:	4638      	mov	r0, r7
 8008282:	f7ff fddf 	bl	8007e44 <_Balloc>
 8008286:	4605      	mov	r5, r0
 8008288:	b948      	cbnz	r0, 800829e <__lshift+0x3e>
 800828a:	4602      	mov	r2, r0
 800828c:	4b28      	ldr	r3, [pc, #160]	@ (8008330 <__lshift+0xd0>)
 800828e:	4829      	ldr	r0, [pc, #164]	@ (8008334 <__lshift+0xd4>)
 8008290:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8008294:	f7fe ff20 	bl	80070d8 <__assert_func>
 8008298:	3101      	adds	r1, #1
 800829a:	005b      	lsls	r3, r3, #1
 800829c:	e7ee      	b.n	800827c <__lshift+0x1c>
 800829e:	2300      	movs	r3, #0
 80082a0:	f100 0114 	add.w	r1, r0, #20
 80082a4:	f100 0210 	add.w	r2, r0, #16
 80082a8:	4618      	mov	r0, r3
 80082aa:	4553      	cmp	r3, sl
 80082ac:	db33      	blt.n	8008316 <__lshift+0xb6>
 80082ae:	6920      	ldr	r0, [r4, #16]
 80082b0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80082b4:	f104 0314 	add.w	r3, r4, #20
 80082b8:	f019 091f 	ands.w	r9, r9, #31
 80082bc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80082c0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80082c4:	d02b      	beq.n	800831e <__lshift+0xbe>
 80082c6:	f1c9 0e20 	rsb	lr, r9, #32
 80082ca:	468a      	mov	sl, r1
 80082cc:	2200      	movs	r2, #0
 80082ce:	6818      	ldr	r0, [r3, #0]
 80082d0:	fa00 f009 	lsl.w	r0, r0, r9
 80082d4:	4310      	orrs	r0, r2
 80082d6:	f84a 0b04 	str.w	r0, [sl], #4
 80082da:	f853 2b04 	ldr.w	r2, [r3], #4
 80082de:	459c      	cmp	ip, r3
 80082e0:	fa22 f20e 	lsr.w	r2, r2, lr
 80082e4:	d8f3      	bhi.n	80082ce <__lshift+0x6e>
 80082e6:	ebac 0304 	sub.w	r3, ip, r4
 80082ea:	3b15      	subs	r3, #21
 80082ec:	f023 0303 	bic.w	r3, r3, #3
 80082f0:	3304      	adds	r3, #4
 80082f2:	f104 0015 	add.w	r0, r4, #21
 80082f6:	4584      	cmp	ip, r0
 80082f8:	bf38      	it	cc
 80082fa:	2304      	movcc	r3, #4
 80082fc:	50ca      	str	r2, [r1, r3]
 80082fe:	b10a      	cbz	r2, 8008304 <__lshift+0xa4>
 8008300:	f108 0602 	add.w	r6, r8, #2
 8008304:	3e01      	subs	r6, #1
 8008306:	4638      	mov	r0, r7
 8008308:	612e      	str	r6, [r5, #16]
 800830a:	4621      	mov	r1, r4
 800830c:	f7ff fdda 	bl	8007ec4 <_Bfree>
 8008310:	4628      	mov	r0, r5
 8008312:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008316:	f842 0f04 	str.w	r0, [r2, #4]!
 800831a:	3301      	adds	r3, #1
 800831c:	e7c5      	b.n	80082aa <__lshift+0x4a>
 800831e:	3904      	subs	r1, #4
 8008320:	f853 2b04 	ldr.w	r2, [r3], #4
 8008324:	f841 2f04 	str.w	r2, [r1, #4]!
 8008328:	459c      	cmp	ip, r3
 800832a:	d8f9      	bhi.n	8008320 <__lshift+0xc0>
 800832c:	e7ea      	b.n	8008304 <__lshift+0xa4>
 800832e:	bf00      	nop
 8008330:	0800937e 	.word	0x0800937e
 8008334:	0800938f 	.word	0x0800938f

08008338 <__mcmp>:
 8008338:	690a      	ldr	r2, [r1, #16]
 800833a:	4603      	mov	r3, r0
 800833c:	6900      	ldr	r0, [r0, #16]
 800833e:	1a80      	subs	r0, r0, r2
 8008340:	b530      	push	{r4, r5, lr}
 8008342:	d10e      	bne.n	8008362 <__mcmp+0x2a>
 8008344:	3314      	adds	r3, #20
 8008346:	3114      	adds	r1, #20
 8008348:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800834c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8008350:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8008354:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8008358:	4295      	cmp	r5, r2
 800835a:	d003      	beq.n	8008364 <__mcmp+0x2c>
 800835c:	d205      	bcs.n	800836a <__mcmp+0x32>
 800835e:	f04f 30ff 	mov.w	r0, #4294967295
 8008362:	bd30      	pop	{r4, r5, pc}
 8008364:	42a3      	cmp	r3, r4
 8008366:	d3f3      	bcc.n	8008350 <__mcmp+0x18>
 8008368:	e7fb      	b.n	8008362 <__mcmp+0x2a>
 800836a:	2001      	movs	r0, #1
 800836c:	e7f9      	b.n	8008362 <__mcmp+0x2a>
	...

08008370 <__mdiff>:
 8008370:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008374:	4689      	mov	r9, r1
 8008376:	4606      	mov	r6, r0
 8008378:	4611      	mov	r1, r2
 800837a:	4648      	mov	r0, r9
 800837c:	4614      	mov	r4, r2
 800837e:	f7ff ffdb 	bl	8008338 <__mcmp>
 8008382:	1e05      	subs	r5, r0, #0
 8008384:	d112      	bne.n	80083ac <__mdiff+0x3c>
 8008386:	4629      	mov	r1, r5
 8008388:	4630      	mov	r0, r6
 800838a:	f7ff fd5b 	bl	8007e44 <_Balloc>
 800838e:	4602      	mov	r2, r0
 8008390:	b928      	cbnz	r0, 800839e <__mdiff+0x2e>
 8008392:	4b3f      	ldr	r3, [pc, #252]	@ (8008490 <__mdiff+0x120>)
 8008394:	f240 2137 	movw	r1, #567	@ 0x237
 8008398:	483e      	ldr	r0, [pc, #248]	@ (8008494 <__mdiff+0x124>)
 800839a:	f7fe fe9d 	bl	80070d8 <__assert_func>
 800839e:	2301      	movs	r3, #1
 80083a0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80083a4:	4610      	mov	r0, r2
 80083a6:	b003      	add	sp, #12
 80083a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083ac:	bfbc      	itt	lt
 80083ae:	464b      	movlt	r3, r9
 80083b0:	46a1      	movlt	r9, r4
 80083b2:	4630      	mov	r0, r6
 80083b4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80083b8:	bfba      	itte	lt
 80083ba:	461c      	movlt	r4, r3
 80083bc:	2501      	movlt	r5, #1
 80083be:	2500      	movge	r5, #0
 80083c0:	f7ff fd40 	bl	8007e44 <_Balloc>
 80083c4:	4602      	mov	r2, r0
 80083c6:	b918      	cbnz	r0, 80083d0 <__mdiff+0x60>
 80083c8:	4b31      	ldr	r3, [pc, #196]	@ (8008490 <__mdiff+0x120>)
 80083ca:	f240 2145 	movw	r1, #581	@ 0x245
 80083ce:	e7e3      	b.n	8008398 <__mdiff+0x28>
 80083d0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80083d4:	6926      	ldr	r6, [r4, #16]
 80083d6:	60c5      	str	r5, [r0, #12]
 80083d8:	f109 0310 	add.w	r3, r9, #16
 80083dc:	f109 0514 	add.w	r5, r9, #20
 80083e0:	f104 0e14 	add.w	lr, r4, #20
 80083e4:	f100 0b14 	add.w	fp, r0, #20
 80083e8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80083ec:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80083f0:	9301      	str	r3, [sp, #4]
 80083f2:	46d9      	mov	r9, fp
 80083f4:	f04f 0c00 	mov.w	ip, #0
 80083f8:	9b01      	ldr	r3, [sp, #4]
 80083fa:	f85e 0b04 	ldr.w	r0, [lr], #4
 80083fe:	f853 af04 	ldr.w	sl, [r3, #4]!
 8008402:	9301      	str	r3, [sp, #4]
 8008404:	fa1f f38a 	uxth.w	r3, sl
 8008408:	4619      	mov	r1, r3
 800840a:	b283      	uxth	r3, r0
 800840c:	1acb      	subs	r3, r1, r3
 800840e:	0c00      	lsrs	r0, r0, #16
 8008410:	4463      	add	r3, ip
 8008412:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8008416:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800841a:	b29b      	uxth	r3, r3
 800841c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8008420:	4576      	cmp	r6, lr
 8008422:	f849 3b04 	str.w	r3, [r9], #4
 8008426:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800842a:	d8e5      	bhi.n	80083f8 <__mdiff+0x88>
 800842c:	1b33      	subs	r3, r6, r4
 800842e:	3b15      	subs	r3, #21
 8008430:	f023 0303 	bic.w	r3, r3, #3
 8008434:	3415      	adds	r4, #21
 8008436:	3304      	adds	r3, #4
 8008438:	42a6      	cmp	r6, r4
 800843a:	bf38      	it	cc
 800843c:	2304      	movcc	r3, #4
 800843e:	441d      	add	r5, r3
 8008440:	445b      	add	r3, fp
 8008442:	461e      	mov	r6, r3
 8008444:	462c      	mov	r4, r5
 8008446:	4544      	cmp	r4, r8
 8008448:	d30e      	bcc.n	8008468 <__mdiff+0xf8>
 800844a:	f108 0103 	add.w	r1, r8, #3
 800844e:	1b49      	subs	r1, r1, r5
 8008450:	f021 0103 	bic.w	r1, r1, #3
 8008454:	3d03      	subs	r5, #3
 8008456:	45a8      	cmp	r8, r5
 8008458:	bf38      	it	cc
 800845a:	2100      	movcc	r1, #0
 800845c:	440b      	add	r3, r1
 800845e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8008462:	b191      	cbz	r1, 800848a <__mdiff+0x11a>
 8008464:	6117      	str	r7, [r2, #16]
 8008466:	e79d      	b.n	80083a4 <__mdiff+0x34>
 8008468:	f854 1b04 	ldr.w	r1, [r4], #4
 800846c:	46e6      	mov	lr, ip
 800846e:	0c08      	lsrs	r0, r1, #16
 8008470:	fa1c fc81 	uxtah	ip, ip, r1
 8008474:	4471      	add	r1, lr
 8008476:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800847a:	b289      	uxth	r1, r1
 800847c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8008480:	f846 1b04 	str.w	r1, [r6], #4
 8008484:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8008488:	e7dd      	b.n	8008446 <__mdiff+0xd6>
 800848a:	3f01      	subs	r7, #1
 800848c:	e7e7      	b.n	800845e <__mdiff+0xee>
 800848e:	bf00      	nop
 8008490:	0800937e 	.word	0x0800937e
 8008494:	0800938f 	.word	0x0800938f

08008498 <__d2b>:
 8008498:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800849c:	460f      	mov	r7, r1
 800849e:	2101      	movs	r1, #1
 80084a0:	ec59 8b10 	vmov	r8, r9, d0
 80084a4:	4616      	mov	r6, r2
 80084a6:	f7ff fccd 	bl	8007e44 <_Balloc>
 80084aa:	4604      	mov	r4, r0
 80084ac:	b930      	cbnz	r0, 80084bc <__d2b+0x24>
 80084ae:	4602      	mov	r2, r0
 80084b0:	4b23      	ldr	r3, [pc, #140]	@ (8008540 <__d2b+0xa8>)
 80084b2:	4824      	ldr	r0, [pc, #144]	@ (8008544 <__d2b+0xac>)
 80084b4:	f240 310f 	movw	r1, #783	@ 0x30f
 80084b8:	f7fe fe0e 	bl	80070d8 <__assert_func>
 80084bc:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80084c0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80084c4:	b10d      	cbz	r5, 80084ca <__d2b+0x32>
 80084c6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80084ca:	9301      	str	r3, [sp, #4]
 80084cc:	f1b8 0300 	subs.w	r3, r8, #0
 80084d0:	d023      	beq.n	800851a <__d2b+0x82>
 80084d2:	4668      	mov	r0, sp
 80084d4:	9300      	str	r3, [sp, #0]
 80084d6:	f7ff fd7c 	bl	8007fd2 <__lo0bits>
 80084da:	e9dd 1200 	ldrd	r1, r2, [sp]
 80084de:	b1d0      	cbz	r0, 8008516 <__d2b+0x7e>
 80084e0:	f1c0 0320 	rsb	r3, r0, #32
 80084e4:	fa02 f303 	lsl.w	r3, r2, r3
 80084e8:	430b      	orrs	r3, r1
 80084ea:	40c2      	lsrs	r2, r0
 80084ec:	6163      	str	r3, [r4, #20]
 80084ee:	9201      	str	r2, [sp, #4]
 80084f0:	9b01      	ldr	r3, [sp, #4]
 80084f2:	61a3      	str	r3, [r4, #24]
 80084f4:	2b00      	cmp	r3, #0
 80084f6:	bf0c      	ite	eq
 80084f8:	2201      	moveq	r2, #1
 80084fa:	2202      	movne	r2, #2
 80084fc:	6122      	str	r2, [r4, #16]
 80084fe:	b1a5      	cbz	r5, 800852a <__d2b+0x92>
 8008500:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8008504:	4405      	add	r5, r0
 8008506:	603d      	str	r5, [r7, #0]
 8008508:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800850c:	6030      	str	r0, [r6, #0]
 800850e:	4620      	mov	r0, r4
 8008510:	b003      	add	sp, #12
 8008512:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008516:	6161      	str	r1, [r4, #20]
 8008518:	e7ea      	b.n	80084f0 <__d2b+0x58>
 800851a:	a801      	add	r0, sp, #4
 800851c:	f7ff fd59 	bl	8007fd2 <__lo0bits>
 8008520:	9b01      	ldr	r3, [sp, #4]
 8008522:	6163      	str	r3, [r4, #20]
 8008524:	3020      	adds	r0, #32
 8008526:	2201      	movs	r2, #1
 8008528:	e7e8      	b.n	80084fc <__d2b+0x64>
 800852a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800852e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8008532:	6038      	str	r0, [r7, #0]
 8008534:	6918      	ldr	r0, [r3, #16]
 8008536:	f7ff fd2d 	bl	8007f94 <__hi0bits>
 800853a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800853e:	e7e5      	b.n	800850c <__d2b+0x74>
 8008540:	0800937e 	.word	0x0800937e
 8008544:	0800938f 	.word	0x0800938f

08008548 <__ssputs_r>:
 8008548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800854c:	688e      	ldr	r6, [r1, #8]
 800854e:	461f      	mov	r7, r3
 8008550:	42be      	cmp	r6, r7
 8008552:	680b      	ldr	r3, [r1, #0]
 8008554:	4682      	mov	sl, r0
 8008556:	460c      	mov	r4, r1
 8008558:	4690      	mov	r8, r2
 800855a:	d82d      	bhi.n	80085b8 <__ssputs_r+0x70>
 800855c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8008560:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8008564:	d026      	beq.n	80085b4 <__ssputs_r+0x6c>
 8008566:	6965      	ldr	r5, [r4, #20]
 8008568:	6909      	ldr	r1, [r1, #16]
 800856a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800856e:	eba3 0901 	sub.w	r9, r3, r1
 8008572:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8008576:	1c7b      	adds	r3, r7, #1
 8008578:	444b      	add	r3, r9
 800857a:	106d      	asrs	r5, r5, #1
 800857c:	429d      	cmp	r5, r3
 800857e:	bf38      	it	cc
 8008580:	461d      	movcc	r5, r3
 8008582:	0553      	lsls	r3, r2, #21
 8008584:	d527      	bpl.n	80085d6 <__ssputs_r+0x8e>
 8008586:	4629      	mov	r1, r5
 8008588:	f7fd fe9c 	bl	80062c4 <_malloc_r>
 800858c:	4606      	mov	r6, r0
 800858e:	b360      	cbz	r0, 80085ea <__ssputs_r+0xa2>
 8008590:	6921      	ldr	r1, [r4, #16]
 8008592:	464a      	mov	r2, r9
 8008594:	f000 fa08 	bl	80089a8 <memcpy>
 8008598:	89a3      	ldrh	r3, [r4, #12]
 800859a:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800859e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80085a2:	81a3      	strh	r3, [r4, #12]
 80085a4:	6126      	str	r6, [r4, #16]
 80085a6:	6165      	str	r5, [r4, #20]
 80085a8:	444e      	add	r6, r9
 80085aa:	eba5 0509 	sub.w	r5, r5, r9
 80085ae:	6026      	str	r6, [r4, #0]
 80085b0:	60a5      	str	r5, [r4, #8]
 80085b2:	463e      	mov	r6, r7
 80085b4:	42be      	cmp	r6, r7
 80085b6:	d900      	bls.n	80085ba <__ssputs_r+0x72>
 80085b8:	463e      	mov	r6, r7
 80085ba:	6820      	ldr	r0, [r4, #0]
 80085bc:	4632      	mov	r2, r6
 80085be:	4641      	mov	r1, r8
 80085c0:	f000 f9d8 	bl	8008974 <memmove>
 80085c4:	68a3      	ldr	r3, [r4, #8]
 80085c6:	1b9b      	subs	r3, r3, r6
 80085c8:	60a3      	str	r3, [r4, #8]
 80085ca:	6823      	ldr	r3, [r4, #0]
 80085cc:	4433      	add	r3, r6
 80085ce:	6023      	str	r3, [r4, #0]
 80085d0:	2000      	movs	r0, #0
 80085d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80085d6:	462a      	mov	r2, r5
 80085d8:	f000 fa0d 	bl	80089f6 <_realloc_r>
 80085dc:	4606      	mov	r6, r0
 80085de:	2800      	cmp	r0, #0
 80085e0:	d1e0      	bne.n	80085a4 <__ssputs_r+0x5c>
 80085e2:	6921      	ldr	r1, [r4, #16]
 80085e4:	4650      	mov	r0, sl
 80085e6:	f7ff fbe3 	bl	8007db0 <_free_r>
 80085ea:	230c      	movs	r3, #12
 80085ec:	f8ca 3000 	str.w	r3, [sl]
 80085f0:	89a3      	ldrh	r3, [r4, #12]
 80085f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80085f6:	81a3      	strh	r3, [r4, #12]
 80085f8:	f04f 30ff 	mov.w	r0, #4294967295
 80085fc:	e7e9      	b.n	80085d2 <__ssputs_r+0x8a>
	...

08008600 <_svfiprintf_r>:
 8008600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008604:	4698      	mov	r8, r3
 8008606:	898b      	ldrh	r3, [r1, #12]
 8008608:	061b      	lsls	r3, r3, #24
 800860a:	b09d      	sub	sp, #116	@ 0x74
 800860c:	4607      	mov	r7, r0
 800860e:	460d      	mov	r5, r1
 8008610:	4614      	mov	r4, r2
 8008612:	d510      	bpl.n	8008636 <_svfiprintf_r+0x36>
 8008614:	690b      	ldr	r3, [r1, #16]
 8008616:	b973      	cbnz	r3, 8008636 <_svfiprintf_r+0x36>
 8008618:	2140      	movs	r1, #64	@ 0x40
 800861a:	f7fd fe53 	bl	80062c4 <_malloc_r>
 800861e:	6028      	str	r0, [r5, #0]
 8008620:	6128      	str	r0, [r5, #16]
 8008622:	b930      	cbnz	r0, 8008632 <_svfiprintf_r+0x32>
 8008624:	230c      	movs	r3, #12
 8008626:	603b      	str	r3, [r7, #0]
 8008628:	f04f 30ff 	mov.w	r0, #4294967295
 800862c:	b01d      	add	sp, #116	@ 0x74
 800862e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008632:	2340      	movs	r3, #64	@ 0x40
 8008634:	616b      	str	r3, [r5, #20]
 8008636:	2300      	movs	r3, #0
 8008638:	9309      	str	r3, [sp, #36]	@ 0x24
 800863a:	2320      	movs	r3, #32
 800863c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8008640:	f8cd 800c 	str.w	r8, [sp, #12]
 8008644:	2330      	movs	r3, #48	@ 0x30
 8008646:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80087e4 <_svfiprintf_r+0x1e4>
 800864a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800864e:	f04f 0901 	mov.w	r9, #1
 8008652:	4623      	mov	r3, r4
 8008654:	469a      	mov	sl, r3
 8008656:	f813 2b01 	ldrb.w	r2, [r3], #1
 800865a:	b10a      	cbz	r2, 8008660 <_svfiprintf_r+0x60>
 800865c:	2a25      	cmp	r2, #37	@ 0x25
 800865e:	d1f9      	bne.n	8008654 <_svfiprintf_r+0x54>
 8008660:	ebba 0b04 	subs.w	fp, sl, r4
 8008664:	d00b      	beq.n	800867e <_svfiprintf_r+0x7e>
 8008666:	465b      	mov	r3, fp
 8008668:	4622      	mov	r2, r4
 800866a:	4629      	mov	r1, r5
 800866c:	4638      	mov	r0, r7
 800866e:	f7ff ff6b 	bl	8008548 <__ssputs_r>
 8008672:	3001      	adds	r0, #1
 8008674:	f000 80a7 	beq.w	80087c6 <_svfiprintf_r+0x1c6>
 8008678:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800867a:	445a      	add	r2, fp
 800867c:	9209      	str	r2, [sp, #36]	@ 0x24
 800867e:	f89a 3000 	ldrb.w	r3, [sl]
 8008682:	2b00      	cmp	r3, #0
 8008684:	f000 809f 	beq.w	80087c6 <_svfiprintf_r+0x1c6>
 8008688:	2300      	movs	r3, #0
 800868a:	f04f 32ff 	mov.w	r2, #4294967295
 800868e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008692:	f10a 0a01 	add.w	sl, sl, #1
 8008696:	9304      	str	r3, [sp, #16]
 8008698:	9307      	str	r3, [sp, #28]
 800869a:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800869e:	931a      	str	r3, [sp, #104]	@ 0x68
 80086a0:	4654      	mov	r4, sl
 80086a2:	2205      	movs	r2, #5
 80086a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80086a8:	484e      	ldr	r0, [pc, #312]	@ (80087e4 <_svfiprintf_r+0x1e4>)
 80086aa:	f7f7 fd99 	bl	80001e0 <memchr>
 80086ae:	9a04      	ldr	r2, [sp, #16]
 80086b0:	b9d8      	cbnz	r0, 80086ea <_svfiprintf_r+0xea>
 80086b2:	06d0      	lsls	r0, r2, #27
 80086b4:	bf44      	itt	mi
 80086b6:	2320      	movmi	r3, #32
 80086b8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80086bc:	0711      	lsls	r1, r2, #28
 80086be:	bf44      	itt	mi
 80086c0:	232b      	movmi	r3, #43	@ 0x2b
 80086c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80086c6:	f89a 3000 	ldrb.w	r3, [sl]
 80086ca:	2b2a      	cmp	r3, #42	@ 0x2a
 80086cc:	d015      	beq.n	80086fa <_svfiprintf_r+0xfa>
 80086ce:	9a07      	ldr	r2, [sp, #28]
 80086d0:	4654      	mov	r4, sl
 80086d2:	2000      	movs	r0, #0
 80086d4:	f04f 0c0a 	mov.w	ip, #10
 80086d8:	4621      	mov	r1, r4
 80086da:	f811 3b01 	ldrb.w	r3, [r1], #1
 80086de:	3b30      	subs	r3, #48	@ 0x30
 80086e0:	2b09      	cmp	r3, #9
 80086e2:	d94b      	bls.n	800877c <_svfiprintf_r+0x17c>
 80086e4:	b1b0      	cbz	r0, 8008714 <_svfiprintf_r+0x114>
 80086e6:	9207      	str	r2, [sp, #28]
 80086e8:	e014      	b.n	8008714 <_svfiprintf_r+0x114>
 80086ea:	eba0 0308 	sub.w	r3, r0, r8
 80086ee:	fa09 f303 	lsl.w	r3, r9, r3
 80086f2:	4313      	orrs	r3, r2
 80086f4:	9304      	str	r3, [sp, #16]
 80086f6:	46a2      	mov	sl, r4
 80086f8:	e7d2      	b.n	80086a0 <_svfiprintf_r+0xa0>
 80086fa:	9b03      	ldr	r3, [sp, #12]
 80086fc:	1d19      	adds	r1, r3, #4
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	9103      	str	r1, [sp, #12]
 8008702:	2b00      	cmp	r3, #0
 8008704:	bfbb      	ittet	lt
 8008706:	425b      	neglt	r3, r3
 8008708:	f042 0202 	orrlt.w	r2, r2, #2
 800870c:	9307      	strge	r3, [sp, #28]
 800870e:	9307      	strlt	r3, [sp, #28]
 8008710:	bfb8      	it	lt
 8008712:	9204      	strlt	r2, [sp, #16]
 8008714:	7823      	ldrb	r3, [r4, #0]
 8008716:	2b2e      	cmp	r3, #46	@ 0x2e
 8008718:	d10a      	bne.n	8008730 <_svfiprintf_r+0x130>
 800871a:	7863      	ldrb	r3, [r4, #1]
 800871c:	2b2a      	cmp	r3, #42	@ 0x2a
 800871e:	d132      	bne.n	8008786 <_svfiprintf_r+0x186>
 8008720:	9b03      	ldr	r3, [sp, #12]
 8008722:	1d1a      	adds	r2, r3, #4
 8008724:	681b      	ldr	r3, [r3, #0]
 8008726:	9203      	str	r2, [sp, #12]
 8008728:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800872c:	3402      	adds	r4, #2
 800872e:	9305      	str	r3, [sp, #20]
 8008730:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80087f4 <_svfiprintf_r+0x1f4>
 8008734:	7821      	ldrb	r1, [r4, #0]
 8008736:	2203      	movs	r2, #3
 8008738:	4650      	mov	r0, sl
 800873a:	f7f7 fd51 	bl	80001e0 <memchr>
 800873e:	b138      	cbz	r0, 8008750 <_svfiprintf_r+0x150>
 8008740:	9b04      	ldr	r3, [sp, #16]
 8008742:	eba0 000a 	sub.w	r0, r0, sl
 8008746:	2240      	movs	r2, #64	@ 0x40
 8008748:	4082      	lsls	r2, r0
 800874a:	4313      	orrs	r3, r2
 800874c:	3401      	adds	r4, #1
 800874e:	9304      	str	r3, [sp, #16]
 8008750:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008754:	4824      	ldr	r0, [pc, #144]	@ (80087e8 <_svfiprintf_r+0x1e8>)
 8008756:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800875a:	2206      	movs	r2, #6
 800875c:	f7f7 fd40 	bl	80001e0 <memchr>
 8008760:	2800      	cmp	r0, #0
 8008762:	d036      	beq.n	80087d2 <_svfiprintf_r+0x1d2>
 8008764:	4b21      	ldr	r3, [pc, #132]	@ (80087ec <_svfiprintf_r+0x1ec>)
 8008766:	bb1b      	cbnz	r3, 80087b0 <_svfiprintf_r+0x1b0>
 8008768:	9b03      	ldr	r3, [sp, #12]
 800876a:	3307      	adds	r3, #7
 800876c:	f023 0307 	bic.w	r3, r3, #7
 8008770:	3308      	adds	r3, #8
 8008772:	9303      	str	r3, [sp, #12]
 8008774:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008776:	4433      	add	r3, r6
 8008778:	9309      	str	r3, [sp, #36]	@ 0x24
 800877a:	e76a      	b.n	8008652 <_svfiprintf_r+0x52>
 800877c:	fb0c 3202 	mla	r2, ip, r2, r3
 8008780:	460c      	mov	r4, r1
 8008782:	2001      	movs	r0, #1
 8008784:	e7a8      	b.n	80086d8 <_svfiprintf_r+0xd8>
 8008786:	2300      	movs	r3, #0
 8008788:	3401      	adds	r4, #1
 800878a:	9305      	str	r3, [sp, #20]
 800878c:	4619      	mov	r1, r3
 800878e:	f04f 0c0a 	mov.w	ip, #10
 8008792:	4620      	mov	r0, r4
 8008794:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008798:	3a30      	subs	r2, #48	@ 0x30
 800879a:	2a09      	cmp	r2, #9
 800879c:	d903      	bls.n	80087a6 <_svfiprintf_r+0x1a6>
 800879e:	2b00      	cmp	r3, #0
 80087a0:	d0c6      	beq.n	8008730 <_svfiprintf_r+0x130>
 80087a2:	9105      	str	r1, [sp, #20]
 80087a4:	e7c4      	b.n	8008730 <_svfiprintf_r+0x130>
 80087a6:	fb0c 2101 	mla	r1, ip, r1, r2
 80087aa:	4604      	mov	r4, r0
 80087ac:	2301      	movs	r3, #1
 80087ae:	e7f0      	b.n	8008792 <_svfiprintf_r+0x192>
 80087b0:	ab03      	add	r3, sp, #12
 80087b2:	9300      	str	r3, [sp, #0]
 80087b4:	462a      	mov	r2, r5
 80087b6:	4b0e      	ldr	r3, [pc, #56]	@ (80087f0 <_svfiprintf_r+0x1f0>)
 80087b8:	a904      	add	r1, sp, #16
 80087ba:	4638      	mov	r0, r7
 80087bc:	f7fd feae 	bl	800651c <_printf_float>
 80087c0:	1c42      	adds	r2, r0, #1
 80087c2:	4606      	mov	r6, r0
 80087c4:	d1d6      	bne.n	8008774 <_svfiprintf_r+0x174>
 80087c6:	89ab      	ldrh	r3, [r5, #12]
 80087c8:	065b      	lsls	r3, r3, #25
 80087ca:	f53f af2d 	bmi.w	8008628 <_svfiprintf_r+0x28>
 80087ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80087d0:	e72c      	b.n	800862c <_svfiprintf_r+0x2c>
 80087d2:	ab03      	add	r3, sp, #12
 80087d4:	9300      	str	r3, [sp, #0]
 80087d6:	462a      	mov	r2, r5
 80087d8:	4b05      	ldr	r3, [pc, #20]	@ (80087f0 <_svfiprintf_r+0x1f0>)
 80087da:	a904      	add	r1, sp, #16
 80087dc:	4638      	mov	r0, r7
 80087de:	f7fe f935 	bl	8006a4c <_printf_i>
 80087e2:	e7ed      	b.n	80087c0 <_svfiprintf_r+0x1c0>
 80087e4:	080094e8 	.word	0x080094e8
 80087e8:	080094f2 	.word	0x080094f2
 80087ec:	0800651d 	.word	0x0800651d
 80087f0:	08008549 	.word	0x08008549
 80087f4:	080094ee 	.word	0x080094ee

080087f8 <__sflush_r>:
 80087f8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80087fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008800:	0716      	lsls	r6, r2, #28
 8008802:	4605      	mov	r5, r0
 8008804:	460c      	mov	r4, r1
 8008806:	d454      	bmi.n	80088b2 <__sflush_r+0xba>
 8008808:	684b      	ldr	r3, [r1, #4]
 800880a:	2b00      	cmp	r3, #0
 800880c:	dc02      	bgt.n	8008814 <__sflush_r+0x1c>
 800880e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8008810:	2b00      	cmp	r3, #0
 8008812:	dd48      	ble.n	80088a6 <__sflush_r+0xae>
 8008814:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8008816:	2e00      	cmp	r6, #0
 8008818:	d045      	beq.n	80088a6 <__sflush_r+0xae>
 800881a:	2300      	movs	r3, #0
 800881c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8008820:	682f      	ldr	r7, [r5, #0]
 8008822:	6a21      	ldr	r1, [r4, #32]
 8008824:	602b      	str	r3, [r5, #0]
 8008826:	d030      	beq.n	800888a <__sflush_r+0x92>
 8008828:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800882a:	89a3      	ldrh	r3, [r4, #12]
 800882c:	0759      	lsls	r1, r3, #29
 800882e:	d505      	bpl.n	800883c <__sflush_r+0x44>
 8008830:	6863      	ldr	r3, [r4, #4]
 8008832:	1ad2      	subs	r2, r2, r3
 8008834:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008836:	b10b      	cbz	r3, 800883c <__sflush_r+0x44>
 8008838:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800883a:	1ad2      	subs	r2, r2, r3
 800883c:	2300      	movs	r3, #0
 800883e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8008840:	6a21      	ldr	r1, [r4, #32]
 8008842:	4628      	mov	r0, r5
 8008844:	47b0      	blx	r6
 8008846:	1c43      	adds	r3, r0, #1
 8008848:	89a3      	ldrh	r3, [r4, #12]
 800884a:	d106      	bne.n	800885a <__sflush_r+0x62>
 800884c:	6829      	ldr	r1, [r5, #0]
 800884e:	291d      	cmp	r1, #29
 8008850:	d82b      	bhi.n	80088aa <__sflush_r+0xb2>
 8008852:	4a2a      	ldr	r2, [pc, #168]	@ (80088fc <__sflush_r+0x104>)
 8008854:	410a      	asrs	r2, r1
 8008856:	07d6      	lsls	r6, r2, #31
 8008858:	d427      	bmi.n	80088aa <__sflush_r+0xb2>
 800885a:	2200      	movs	r2, #0
 800885c:	6062      	str	r2, [r4, #4]
 800885e:	04d9      	lsls	r1, r3, #19
 8008860:	6922      	ldr	r2, [r4, #16]
 8008862:	6022      	str	r2, [r4, #0]
 8008864:	d504      	bpl.n	8008870 <__sflush_r+0x78>
 8008866:	1c42      	adds	r2, r0, #1
 8008868:	d101      	bne.n	800886e <__sflush_r+0x76>
 800886a:	682b      	ldr	r3, [r5, #0]
 800886c:	b903      	cbnz	r3, 8008870 <__sflush_r+0x78>
 800886e:	6560      	str	r0, [r4, #84]	@ 0x54
 8008870:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008872:	602f      	str	r7, [r5, #0]
 8008874:	b1b9      	cbz	r1, 80088a6 <__sflush_r+0xae>
 8008876:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800887a:	4299      	cmp	r1, r3
 800887c:	d002      	beq.n	8008884 <__sflush_r+0x8c>
 800887e:	4628      	mov	r0, r5
 8008880:	f7ff fa96 	bl	8007db0 <_free_r>
 8008884:	2300      	movs	r3, #0
 8008886:	6363      	str	r3, [r4, #52]	@ 0x34
 8008888:	e00d      	b.n	80088a6 <__sflush_r+0xae>
 800888a:	2301      	movs	r3, #1
 800888c:	4628      	mov	r0, r5
 800888e:	47b0      	blx	r6
 8008890:	4602      	mov	r2, r0
 8008892:	1c50      	adds	r0, r2, #1
 8008894:	d1c9      	bne.n	800882a <__sflush_r+0x32>
 8008896:	682b      	ldr	r3, [r5, #0]
 8008898:	2b00      	cmp	r3, #0
 800889a:	d0c6      	beq.n	800882a <__sflush_r+0x32>
 800889c:	2b1d      	cmp	r3, #29
 800889e:	d001      	beq.n	80088a4 <__sflush_r+0xac>
 80088a0:	2b16      	cmp	r3, #22
 80088a2:	d11e      	bne.n	80088e2 <__sflush_r+0xea>
 80088a4:	602f      	str	r7, [r5, #0]
 80088a6:	2000      	movs	r0, #0
 80088a8:	e022      	b.n	80088f0 <__sflush_r+0xf8>
 80088aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80088ae:	b21b      	sxth	r3, r3
 80088b0:	e01b      	b.n	80088ea <__sflush_r+0xf2>
 80088b2:	690f      	ldr	r7, [r1, #16]
 80088b4:	2f00      	cmp	r7, #0
 80088b6:	d0f6      	beq.n	80088a6 <__sflush_r+0xae>
 80088b8:	0793      	lsls	r3, r2, #30
 80088ba:	680e      	ldr	r6, [r1, #0]
 80088bc:	bf08      	it	eq
 80088be:	694b      	ldreq	r3, [r1, #20]
 80088c0:	600f      	str	r7, [r1, #0]
 80088c2:	bf18      	it	ne
 80088c4:	2300      	movne	r3, #0
 80088c6:	eba6 0807 	sub.w	r8, r6, r7
 80088ca:	608b      	str	r3, [r1, #8]
 80088cc:	f1b8 0f00 	cmp.w	r8, #0
 80088d0:	dde9      	ble.n	80088a6 <__sflush_r+0xae>
 80088d2:	6a21      	ldr	r1, [r4, #32]
 80088d4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80088d6:	4643      	mov	r3, r8
 80088d8:	463a      	mov	r2, r7
 80088da:	4628      	mov	r0, r5
 80088dc:	47b0      	blx	r6
 80088de:	2800      	cmp	r0, #0
 80088e0:	dc08      	bgt.n	80088f4 <__sflush_r+0xfc>
 80088e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80088e6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80088ea:	81a3      	strh	r3, [r4, #12]
 80088ec:	f04f 30ff 	mov.w	r0, #4294967295
 80088f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80088f4:	4407      	add	r7, r0
 80088f6:	eba8 0800 	sub.w	r8, r8, r0
 80088fa:	e7e7      	b.n	80088cc <__sflush_r+0xd4>
 80088fc:	dfbffffe 	.word	0xdfbffffe

08008900 <_fflush_r>:
 8008900:	b538      	push	{r3, r4, r5, lr}
 8008902:	690b      	ldr	r3, [r1, #16]
 8008904:	4605      	mov	r5, r0
 8008906:	460c      	mov	r4, r1
 8008908:	b913      	cbnz	r3, 8008910 <_fflush_r+0x10>
 800890a:	2500      	movs	r5, #0
 800890c:	4628      	mov	r0, r5
 800890e:	bd38      	pop	{r3, r4, r5, pc}
 8008910:	b118      	cbz	r0, 800891a <_fflush_r+0x1a>
 8008912:	6a03      	ldr	r3, [r0, #32]
 8008914:	b90b      	cbnz	r3, 800891a <_fflush_r+0x1a>
 8008916:	f7fe fa45 	bl	8006da4 <__sinit>
 800891a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800891e:	2b00      	cmp	r3, #0
 8008920:	d0f3      	beq.n	800890a <_fflush_r+0xa>
 8008922:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8008924:	07d0      	lsls	r0, r2, #31
 8008926:	d404      	bmi.n	8008932 <_fflush_r+0x32>
 8008928:	0599      	lsls	r1, r3, #22
 800892a:	d402      	bmi.n	8008932 <_fflush_r+0x32>
 800892c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800892e:	f7fe fbc8 	bl	80070c2 <__retarget_lock_acquire_recursive>
 8008932:	4628      	mov	r0, r5
 8008934:	4621      	mov	r1, r4
 8008936:	f7ff ff5f 	bl	80087f8 <__sflush_r>
 800893a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800893c:	07da      	lsls	r2, r3, #31
 800893e:	4605      	mov	r5, r0
 8008940:	d4e4      	bmi.n	800890c <_fflush_r+0xc>
 8008942:	89a3      	ldrh	r3, [r4, #12]
 8008944:	059b      	lsls	r3, r3, #22
 8008946:	d4e1      	bmi.n	800890c <_fflush_r+0xc>
 8008948:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800894a:	f7fe fbbb 	bl	80070c4 <__retarget_lock_release_recursive>
 800894e:	e7dd      	b.n	800890c <_fflush_r+0xc>

08008950 <fiprintf>:
 8008950:	b40e      	push	{r1, r2, r3}
 8008952:	b503      	push	{r0, r1, lr}
 8008954:	4601      	mov	r1, r0
 8008956:	ab03      	add	r3, sp, #12
 8008958:	4805      	ldr	r0, [pc, #20]	@ (8008970 <fiprintf+0x20>)
 800895a:	f853 2b04 	ldr.w	r2, [r3], #4
 800895e:	6800      	ldr	r0, [r0, #0]
 8008960:	9301      	str	r3, [sp, #4]
 8008962:	f000 f8ad 	bl	8008ac0 <_vfiprintf_r>
 8008966:	b002      	add	sp, #8
 8008968:	f85d eb04 	ldr.w	lr, [sp], #4
 800896c:	b003      	add	sp, #12
 800896e:	4770      	bx	lr
 8008970:	20000018 	.word	0x20000018

08008974 <memmove>:
 8008974:	4288      	cmp	r0, r1
 8008976:	b510      	push	{r4, lr}
 8008978:	eb01 0402 	add.w	r4, r1, r2
 800897c:	d902      	bls.n	8008984 <memmove+0x10>
 800897e:	4284      	cmp	r4, r0
 8008980:	4623      	mov	r3, r4
 8008982:	d807      	bhi.n	8008994 <memmove+0x20>
 8008984:	1e43      	subs	r3, r0, #1
 8008986:	42a1      	cmp	r1, r4
 8008988:	d008      	beq.n	800899c <memmove+0x28>
 800898a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800898e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8008992:	e7f8      	b.n	8008986 <memmove+0x12>
 8008994:	4402      	add	r2, r0
 8008996:	4601      	mov	r1, r0
 8008998:	428a      	cmp	r2, r1
 800899a:	d100      	bne.n	800899e <memmove+0x2a>
 800899c:	bd10      	pop	{r4, pc}
 800899e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80089a2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80089a6:	e7f7      	b.n	8008998 <memmove+0x24>

080089a8 <memcpy>:
 80089a8:	440a      	add	r2, r1
 80089aa:	4291      	cmp	r1, r2
 80089ac:	f100 33ff 	add.w	r3, r0, #4294967295
 80089b0:	d100      	bne.n	80089b4 <memcpy+0xc>
 80089b2:	4770      	bx	lr
 80089b4:	b510      	push	{r4, lr}
 80089b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80089ba:	f803 4f01 	strb.w	r4, [r3, #1]!
 80089be:	4291      	cmp	r1, r2
 80089c0:	d1f9      	bne.n	80089b6 <memcpy+0xe>
 80089c2:	bd10      	pop	{r4, pc}

080089c4 <abort>:
 80089c4:	b508      	push	{r3, lr}
 80089c6:	2006      	movs	r0, #6
 80089c8:	f000 fa4e 	bl	8008e68 <raise>
 80089cc:	2001      	movs	r0, #1
 80089ce:	f7f9 fb7f 	bl	80020d0 <_exit>

080089d2 <__ascii_mbtowc>:
 80089d2:	b082      	sub	sp, #8
 80089d4:	b901      	cbnz	r1, 80089d8 <__ascii_mbtowc+0x6>
 80089d6:	a901      	add	r1, sp, #4
 80089d8:	b142      	cbz	r2, 80089ec <__ascii_mbtowc+0x1a>
 80089da:	b14b      	cbz	r3, 80089f0 <__ascii_mbtowc+0x1e>
 80089dc:	7813      	ldrb	r3, [r2, #0]
 80089de:	600b      	str	r3, [r1, #0]
 80089e0:	7812      	ldrb	r2, [r2, #0]
 80089e2:	1e10      	subs	r0, r2, #0
 80089e4:	bf18      	it	ne
 80089e6:	2001      	movne	r0, #1
 80089e8:	b002      	add	sp, #8
 80089ea:	4770      	bx	lr
 80089ec:	4610      	mov	r0, r2
 80089ee:	e7fb      	b.n	80089e8 <__ascii_mbtowc+0x16>
 80089f0:	f06f 0001 	mvn.w	r0, #1
 80089f4:	e7f8      	b.n	80089e8 <__ascii_mbtowc+0x16>

080089f6 <_realloc_r>:
 80089f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089fa:	4680      	mov	r8, r0
 80089fc:	4615      	mov	r5, r2
 80089fe:	460c      	mov	r4, r1
 8008a00:	b921      	cbnz	r1, 8008a0c <_realloc_r+0x16>
 8008a02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008a06:	4611      	mov	r1, r2
 8008a08:	f7fd bc5c 	b.w	80062c4 <_malloc_r>
 8008a0c:	b92a      	cbnz	r2, 8008a1a <_realloc_r+0x24>
 8008a0e:	f7ff f9cf 	bl	8007db0 <_free_r>
 8008a12:	2400      	movs	r4, #0
 8008a14:	4620      	mov	r0, r4
 8008a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a1a:	f000 fa41 	bl	8008ea0 <_malloc_usable_size_r>
 8008a1e:	4285      	cmp	r5, r0
 8008a20:	4606      	mov	r6, r0
 8008a22:	d802      	bhi.n	8008a2a <_realloc_r+0x34>
 8008a24:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8008a28:	d8f4      	bhi.n	8008a14 <_realloc_r+0x1e>
 8008a2a:	4629      	mov	r1, r5
 8008a2c:	4640      	mov	r0, r8
 8008a2e:	f7fd fc49 	bl	80062c4 <_malloc_r>
 8008a32:	4607      	mov	r7, r0
 8008a34:	2800      	cmp	r0, #0
 8008a36:	d0ec      	beq.n	8008a12 <_realloc_r+0x1c>
 8008a38:	42b5      	cmp	r5, r6
 8008a3a:	462a      	mov	r2, r5
 8008a3c:	4621      	mov	r1, r4
 8008a3e:	bf28      	it	cs
 8008a40:	4632      	movcs	r2, r6
 8008a42:	f7ff ffb1 	bl	80089a8 <memcpy>
 8008a46:	4621      	mov	r1, r4
 8008a48:	4640      	mov	r0, r8
 8008a4a:	f7ff f9b1 	bl	8007db0 <_free_r>
 8008a4e:	463c      	mov	r4, r7
 8008a50:	e7e0      	b.n	8008a14 <_realloc_r+0x1e>

08008a52 <__ascii_wctomb>:
 8008a52:	4603      	mov	r3, r0
 8008a54:	4608      	mov	r0, r1
 8008a56:	b141      	cbz	r1, 8008a6a <__ascii_wctomb+0x18>
 8008a58:	2aff      	cmp	r2, #255	@ 0xff
 8008a5a:	d904      	bls.n	8008a66 <__ascii_wctomb+0x14>
 8008a5c:	228a      	movs	r2, #138	@ 0x8a
 8008a5e:	601a      	str	r2, [r3, #0]
 8008a60:	f04f 30ff 	mov.w	r0, #4294967295
 8008a64:	4770      	bx	lr
 8008a66:	700a      	strb	r2, [r1, #0]
 8008a68:	2001      	movs	r0, #1
 8008a6a:	4770      	bx	lr

08008a6c <__sfputc_r>:
 8008a6c:	6893      	ldr	r3, [r2, #8]
 8008a6e:	3b01      	subs	r3, #1
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	b410      	push	{r4}
 8008a74:	6093      	str	r3, [r2, #8]
 8008a76:	da08      	bge.n	8008a8a <__sfputc_r+0x1e>
 8008a78:	6994      	ldr	r4, [r2, #24]
 8008a7a:	42a3      	cmp	r3, r4
 8008a7c:	db01      	blt.n	8008a82 <__sfputc_r+0x16>
 8008a7e:	290a      	cmp	r1, #10
 8008a80:	d103      	bne.n	8008a8a <__sfputc_r+0x1e>
 8008a82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a86:	f000 b933 	b.w	8008cf0 <__swbuf_r>
 8008a8a:	6813      	ldr	r3, [r2, #0]
 8008a8c:	1c58      	adds	r0, r3, #1
 8008a8e:	6010      	str	r0, [r2, #0]
 8008a90:	7019      	strb	r1, [r3, #0]
 8008a92:	4608      	mov	r0, r1
 8008a94:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a98:	4770      	bx	lr

08008a9a <__sfputs_r>:
 8008a9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a9c:	4606      	mov	r6, r0
 8008a9e:	460f      	mov	r7, r1
 8008aa0:	4614      	mov	r4, r2
 8008aa2:	18d5      	adds	r5, r2, r3
 8008aa4:	42ac      	cmp	r4, r5
 8008aa6:	d101      	bne.n	8008aac <__sfputs_r+0x12>
 8008aa8:	2000      	movs	r0, #0
 8008aaa:	e007      	b.n	8008abc <__sfputs_r+0x22>
 8008aac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008ab0:	463a      	mov	r2, r7
 8008ab2:	4630      	mov	r0, r6
 8008ab4:	f7ff ffda 	bl	8008a6c <__sfputc_r>
 8008ab8:	1c43      	adds	r3, r0, #1
 8008aba:	d1f3      	bne.n	8008aa4 <__sfputs_r+0xa>
 8008abc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008ac0 <_vfiprintf_r>:
 8008ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ac4:	460d      	mov	r5, r1
 8008ac6:	b09d      	sub	sp, #116	@ 0x74
 8008ac8:	4614      	mov	r4, r2
 8008aca:	4698      	mov	r8, r3
 8008acc:	4606      	mov	r6, r0
 8008ace:	b118      	cbz	r0, 8008ad8 <_vfiprintf_r+0x18>
 8008ad0:	6a03      	ldr	r3, [r0, #32]
 8008ad2:	b90b      	cbnz	r3, 8008ad8 <_vfiprintf_r+0x18>
 8008ad4:	f7fe f966 	bl	8006da4 <__sinit>
 8008ad8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008ada:	07d9      	lsls	r1, r3, #31
 8008adc:	d405      	bmi.n	8008aea <_vfiprintf_r+0x2a>
 8008ade:	89ab      	ldrh	r3, [r5, #12]
 8008ae0:	059a      	lsls	r2, r3, #22
 8008ae2:	d402      	bmi.n	8008aea <_vfiprintf_r+0x2a>
 8008ae4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008ae6:	f7fe faec 	bl	80070c2 <__retarget_lock_acquire_recursive>
 8008aea:	89ab      	ldrh	r3, [r5, #12]
 8008aec:	071b      	lsls	r3, r3, #28
 8008aee:	d501      	bpl.n	8008af4 <_vfiprintf_r+0x34>
 8008af0:	692b      	ldr	r3, [r5, #16]
 8008af2:	b99b      	cbnz	r3, 8008b1c <_vfiprintf_r+0x5c>
 8008af4:	4629      	mov	r1, r5
 8008af6:	4630      	mov	r0, r6
 8008af8:	f000 f938 	bl	8008d6c <__swsetup_r>
 8008afc:	b170      	cbz	r0, 8008b1c <_vfiprintf_r+0x5c>
 8008afe:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008b00:	07dc      	lsls	r4, r3, #31
 8008b02:	d504      	bpl.n	8008b0e <_vfiprintf_r+0x4e>
 8008b04:	f04f 30ff 	mov.w	r0, #4294967295
 8008b08:	b01d      	add	sp, #116	@ 0x74
 8008b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b0e:	89ab      	ldrh	r3, [r5, #12]
 8008b10:	0598      	lsls	r0, r3, #22
 8008b12:	d4f7      	bmi.n	8008b04 <_vfiprintf_r+0x44>
 8008b14:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008b16:	f7fe fad5 	bl	80070c4 <__retarget_lock_release_recursive>
 8008b1a:	e7f3      	b.n	8008b04 <_vfiprintf_r+0x44>
 8008b1c:	2300      	movs	r3, #0
 8008b1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8008b20:	2320      	movs	r3, #32
 8008b22:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8008b26:	f8cd 800c 	str.w	r8, [sp, #12]
 8008b2a:	2330      	movs	r3, #48	@ 0x30
 8008b2c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8008cdc <_vfiprintf_r+0x21c>
 8008b30:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8008b34:	f04f 0901 	mov.w	r9, #1
 8008b38:	4623      	mov	r3, r4
 8008b3a:	469a      	mov	sl, r3
 8008b3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008b40:	b10a      	cbz	r2, 8008b46 <_vfiprintf_r+0x86>
 8008b42:	2a25      	cmp	r2, #37	@ 0x25
 8008b44:	d1f9      	bne.n	8008b3a <_vfiprintf_r+0x7a>
 8008b46:	ebba 0b04 	subs.w	fp, sl, r4
 8008b4a:	d00b      	beq.n	8008b64 <_vfiprintf_r+0xa4>
 8008b4c:	465b      	mov	r3, fp
 8008b4e:	4622      	mov	r2, r4
 8008b50:	4629      	mov	r1, r5
 8008b52:	4630      	mov	r0, r6
 8008b54:	f7ff ffa1 	bl	8008a9a <__sfputs_r>
 8008b58:	3001      	adds	r0, #1
 8008b5a:	f000 80a7 	beq.w	8008cac <_vfiprintf_r+0x1ec>
 8008b5e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008b60:	445a      	add	r2, fp
 8008b62:	9209      	str	r2, [sp, #36]	@ 0x24
 8008b64:	f89a 3000 	ldrb.w	r3, [sl]
 8008b68:	2b00      	cmp	r3, #0
 8008b6a:	f000 809f 	beq.w	8008cac <_vfiprintf_r+0x1ec>
 8008b6e:	2300      	movs	r3, #0
 8008b70:	f04f 32ff 	mov.w	r2, #4294967295
 8008b74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008b78:	f10a 0a01 	add.w	sl, sl, #1
 8008b7c:	9304      	str	r3, [sp, #16]
 8008b7e:	9307      	str	r3, [sp, #28]
 8008b80:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8008b84:	931a      	str	r3, [sp, #104]	@ 0x68
 8008b86:	4654      	mov	r4, sl
 8008b88:	2205      	movs	r2, #5
 8008b8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008b8e:	4853      	ldr	r0, [pc, #332]	@ (8008cdc <_vfiprintf_r+0x21c>)
 8008b90:	f7f7 fb26 	bl	80001e0 <memchr>
 8008b94:	9a04      	ldr	r2, [sp, #16]
 8008b96:	b9d8      	cbnz	r0, 8008bd0 <_vfiprintf_r+0x110>
 8008b98:	06d1      	lsls	r1, r2, #27
 8008b9a:	bf44      	itt	mi
 8008b9c:	2320      	movmi	r3, #32
 8008b9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008ba2:	0713      	lsls	r3, r2, #28
 8008ba4:	bf44      	itt	mi
 8008ba6:	232b      	movmi	r3, #43	@ 0x2b
 8008ba8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008bac:	f89a 3000 	ldrb.w	r3, [sl]
 8008bb0:	2b2a      	cmp	r3, #42	@ 0x2a
 8008bb2:	d015      	beq.n	8008be0 <_vfiprintf_r+0x120>
 8008bb4:	9a07      	ldr	r2, [sp, #28]
 8008bb6:	4654      	mov	r4, sl
 8008bb8:	2000      	movs	r0, #0
 8008bba:	f04f 0c0a 	mov.w	ip, #10
 8008bbe:	4621      	mov	r1, r4
 8008bc0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008bc4:	3b30      	subs	r3, #48	@ 0x30
 8008bc6:	2b09      	cmp	r3, #9
 8008bc8:	d94b      	bls.n	8008c62 <_vfiprintf_r+0x1a2>
 8008bca:	b1b0      	cbz	r0, 8008bfa <_vfiprintf_r+0x13a>
 8008bcc:	9207      	str	r2, [sp, #28]
 8008bce:	e014      	b.n	8008bfa <_vfiprintf_r+0x13a>
 8008bd0:	eba0 0308 	sub.w	r3, r0, r8
 8008bd4:	fa09 f303 	lsl.w	r3, r9, r3
 8008bd8:	4313      	orrs	r3, r2
 8008bda:	9304      	str	r3, [sp, #16]
 8008bdc:	46a2      	mov	sl, r4
 8008bde:	e7d2      	b.n	8008b86 <_vfiprintf_r+0xc6>
 8008be0:	9b03      	ldr	r3, [sp, #12]
 8008be2:	1d19      	adds	r1, r3, #4
 8008be4:	681b      	ldr	r3, [r3, #0]
 8008be6:	9103      	str	r1, [sp, #12]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	bfbb      	ittet	lt
 8008bec:	425b      	neglt	r3, r3
 8008bee:	f042 0202 	orrlt.w	r2, r2, #2
 8008bf2:	9307      	strge	r3, [sp, #28]
 8008bf4:	9307      	strlt	r3, [sp, #28]
 8008bf6:	bfb8      	it	lt
 8008bf8:	9204      	strlt	r2, [sp, #16]
 8008bfa:	7823      	ldrb	r3, [r4, #0]
 8008bfc:	2b2e      	cmp	r3, #46	@ 0x2e
 8008bfe:	d10a      	bne.n	8008c16 <_vfiprintf_r+0x156>
 8008c00:	7863      	ldrb	r3, [r4, #1]
 8008c02:	2b2a      	cmp	r3, #42	@ 0x2a
 8008c04:	d132      	bne.n	8008c6c <_vfiprintf_r+0x1ac>
 8008c06:	9b03      	ldr	r3, [sp, #12]
 8008c08:	1d1a      	adds	r2, r3, #4
 8008c0a:	681b      	ldr	r3, [r3, #0]
 8008c0c:	9203      	str	r2, [sp, #12]
 8008c0e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8008c12:	3402      	adds	r4, #2
 8008c14:	9305      	str	r3, [sp, #20]
 8008c16:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8008cec <_vfiprintf_r+0x22c>
 8008c1a:	7821      	ldrb	r1, [r4, #0]
 8008c1c:	2203      	movs	r2, #3
 8008c1e:	4650      	mov	r0, sl
 8008c20:	f7f7 fade 	bl	80001e0 <memchr>
 8008c24:	b138      	cbz	r0, 8008c36 <_vfiprintf_r+0x176>
 8008c26:	9b04      	ldr	r3, [sp, #16]
 8008c28:	eba0 000a 	sub.w	r0, r0, sl
 8008c2c:	2240      	movs	r2, #64	@ 0x40
 8008c2e:	4082      	lsls	r2, r0
 8008c30:	4313      	orrs	r3, r2
 8008c32:	3401      	adds	r4, #1
 8008c34:	9304      	str	r3, [sp, #16]
 8008c36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008c3a:	4829      	ldr	r0, [pc, #164]	@ (8008ce0 <_vfiprintf_r+0x220>)
 8008c3c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8008c40:	2206      	movs	r2, #6
 8008c42:	f7f7 facd 	bl	80001e0 <memchr>
 8008c46:	2800      	cmp	r0, #0
 8008c48:	d03f      	beq.n	8008cca <_vfiprintf_r+0x20a>
 8008c4a:	4b26      	ldr	r3, [pc, #152]	@ (8008ce4 <_vfiprintf_r+0x224>)
 8008c4c:	bb1b      	cbnz	r3, 8008c96 <_vfiprintf_r+0x1d6>
 8008c4e:	9b03      	ldr	r3, [sp, #12]
 8008c50:	3307      	adds	r3, #7
 8008c52:	f023 0307 	bic.w	r3, r3, #7
 8008c56:	3308      	adds	r3, #8
 8008c58:	9303      	str	r3, [sp, #12]
 8008c5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008c5c:	443b      	add	r3, r7
 8008c5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8008c60:	e76a      	b.n	8008b38 <_vfiprintf_r+0x78>
 8008c62:	fb0c 3202 	mla	r2, ip, r2, r3
 8008c66:	460c      	mov	r4, r1
 8008c68:	2001      	movs	r0, #1
 8008c6a:	e7a8      	b.n	8008bbe <_vfiprintf_r+0xfe>
 8008c6c:	2300      	movs	r3, #0
 8008c6e:	3401      	adds	r4, #1
 8008c70:	9305      	str	r3, [sp, #20]
 8008c72:	4619      	mov	r1, r3
 8008c74:	f04f 0c0a 	mov.w	ip, #10
 8008c78:	4620      	mov	r0, r4
 8008c7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008c7e:	3a30      	subs	r2, #48	@ 0x30
 8008c80:	2a09      	cmp	r2, #9
 8008c82:	d903      	bls.n	8008c8c <_vfiprintf_r+0x1cc>
 8008c84:	2b00      	cmp	r3, #0
 8008c86:	d0c6      	beq.n	8008c16 <_vfiprintf_r+0x156>
 8008c88:	9105      	str	r1, [sp, #20]
 8008c8a:	e7c4      	b.n	8008c16 <_vfiprintf_r+0x156>
 8008c8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8008c90:	4604      	mov	r4, r0
 8008c92:	2301      	movs	r3, #1
 8008c94:	e7f0      	b.n	8008c78 <_vfiprintf_r+0x1b8>
 8008c96:	ab03      	add	r3, sp, #12
 8008c98:	9300      	str	r3, [sp, #0]
 8008c9a:	462a      	mov	r2, r5
 8008c9c:	4b12      	ldr	r3, [pc, #72]	@ (8008ce8 <_vfiprintf_r+0x228>)
 8008c9e:	a904      	add	r1, sp, #16
 8008ca0:	4630      	mov	r0, r6
 8008ca2:	f7fd fc3b 	bl	800651c <_printf_float>
 8008ca6:	4607      	mov	r7, r0
 8008ca8:	1c78      	adds	r0, r7, #1
 8008caa:	d1d6      	bne.n	8008c5a <_vfiprintf_r+0x19a>
 8008cac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008cae:	07d9      	lsls	r1, r3, #31
 8008cb0:	d405      	bmi.n	8008cbe <_vfiprintf_r+0x1fe>
 8008cb2:	89ab      	ldrh	r3, [r5, #12]
 8008cb4:	059a      	lsls	r2, r3, #22
 8008cb6:	d402      	bmi.n	8008cbe <_vfiprintf_r+0x1fe>
 8008cb8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008cba:	f7fe fa03 	bl	80070c4 <__retarget_lock_release_recursive>
 8008cbe:	89ab      	ldrh	r3, [r5, #12]
 8008cc0:	065b      	lsls	r3, r3, #25
 8008cc2:	f53f af1f 	bmi.w	8008b04 <_vfiprintf_r+0x44>
 8008cc6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008cc8:	e71e      	b.n	8008b08 <_vfiprintf_r+0x48>
 8008cca:	ab03      	add	r3, sp, #12
 8008ccc:	9300      	str	r3, [sp, #0]
 8008cce:	462a      	mov	r2, r5
 8008cd0:	4b05      	ldr	r3, [pc, #20]	@ (8008ce8 <_vfiprintf_r+0x228>)
 8008cd2:	a904      	add	r1, sp, #16
 8008cd4:	4630      	mov	r0, r6
 8008cd6:	f7fd feb9 	bl	8006a4c <_printf_i>
 8008cda:	e7e4      	b.n	8008ca6 <_vfiprintf_r+0x1e6>
 8008cdc:	080094e8 	.word	0x080094e8
 8008ce0:	080094f2 	.word	0x080094f2
 8008ce4:	0800651d 	.word	0x0800651d
 8008ce8:	08008a9b 	.word	0x08008a9b
 8008cec:	080094ee 	.word	0x080094ee

08008cf0 <__swbuf_r>:
 8008cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008cf2:	460e      	mov	r6, r1
 8008cf4:	4614      	mov	r4, r2
 8008cf6:	4605      	mov	r5, r0
 8008cf8:	b118      	cbz	r0, 8008d02 <__swbuf_r+0x12>
 8008cfa:	6a03      	ldr	r3, [r0, #32]
 8008cfc:	b90b      	cbnz	r3, 8008d02 <__swbuf_r+0x12>
 8008cfe:	f7fe f851 	bl	8006da4 <__sinit>
 8008d02:	69a3      	ldr	r3, [r4, #24]
 8008d04:	60a3      	str	r3, [r4, #8]
 8008d06:	89a3      	ldrh	r3, [r4, #12]
 8008d08:	071a      	lsls	r2, r3, #28
 8008d0a:	d501      	bpl.n	8008d10 <__swbuf_r+0x20>
 8008d0c:	6923      	ldr	r3, [r4, #16]
 8008d0e:	b943      	cbnz	r3, 8008d22 <__swbuf_r+0x32>
 8008d10:	4621      	mov	r1, r4
 8008d12:	4628      	mov	r0, r5
 8008d14:	f000 f82a 	bl	8008d6c <__swsetup_r>
 8008d18:	b118      	cbz	r0, 8008d22 <__swbuf_r+0x32>
 8008d1a:	f04f 37ff 	mov.w	r7, #4294967295
 8008d1e:	4638      	mov	r0, r7
 8008d20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008d22:	6823      	ldr	r3, [r4, #0]
 8008d24:	6922      	ldr	r2, [r4, #16]
 8008d26:	1a98      	subs	r0, r3, r2
 8008d28:	6963      	ldr	r3, [r4, #20]
 8008d2a:	b2f6      	uxtb	r6, r6
 8008d2c:	4283      	cmp	r3, r0
 8008d2e:	4637      	mov	r7, r6
 8008d30:	dc05      	bgt.n	8008d3e <__swbuf_r+0x4e>
 8008d32:	4621      	mov	r1, r4
 8008d34:	4628      	mov	r0, r5
 8008d36:	f7ff fde3 	bl	8008900 <_fflush_r>
 8008d3a:	2800      	cmp	r0, #0
 8008d3c:	d1ed      	bne.n	8008d1a <__swbuf_r+0x2a>
 8008d3e:	68a3      	ldr	r3, [r4, #8]
 8008d40:	3b01      	subs	r3, #1
 8008d42:	60a3      	str	r3, [r4, #8]
 8008d44:	6823      	ldr	r3, [r4, #0]
 8008d46:	1c5a      	adds	r2, r3, #1
 8008d48:	6022      	str	r2, [r4, #0]
 8008d4a:	701e      	strb	r6, [r3, #0]
 8008d4c:	6962      	ldr	r2, [r4, #20]
 8008d4e:	1c43      	adds	r3, r0, #1
 8008d50:	429a      	cmp	r2, r3
 8008d52:	d004      	beq.n	8008d5e <__swbuf_r+0x6e>
 8008d54:	89a3      	ldrh	r3, [r4, #12]
 8008d56:	07db      	lsls	r3, r3, #31
 8008d58:	d5e1      	bpl.n	8008d1e <__swbuf_r+0x2e>
 8008d5a:	2e0a      	cmp	r6, #10
 8008d5c:	d1df      	bne.n	8008d1e <__swbuf_r+0x2e>
 8008d5e:	4621      	mov	r1, r4
 8008d60:	4628      	mov	r0, r5
 8008d62:	f7ff fdcd 	bl	8008900 <_fflush_r>
 8008d66:	2800      	cmp	r0, #0
 8008d68:	d0d9      	beq.n	8008d1e <__swbuf_r+0x2e>
 8008d6a:	e7d6      	b.n	8008d1a <__swbuf_r+0x2a>

08008d6c <__swsetup_r>:
 8008d6c:	b538      	push	{r3, r4, r5, lr}
 8008d6e:	4b29      	ldr	r3, [pc, #164]	@ (8008e14 <__swsetup_r+0xa8>)
 8008d70:	4605      	mov	r5, r0
 8008d72:	6818      	ldr	r0, [r3, #0]
 8008d74:	460c      	mov	r4, r1
 8008d76:	b118      	cbz	r0, 8008d80 <__swsetup_r+0x14>
 8008d78:	6a03      	ldr	r3, [r0, #32]
 8008d7a:	b90b      	cbnz	r3, 8008d80 <__swsetup_r+0x14>
 8008d7c:	f7fe f812 	bl	8006da4 <__sinit>
 8008d80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008d84:	0719      	lsls	r1, r3, #28
 8008d86:	d422      	bmi.n	8008dce <__swsetup_r+0x62>
 8008d88:	06da      	lsls	r2, r3, #27
 8008d8a:	d407      	bmi.n	8008d9c <__swsetup_r+0x30>
 8008d8c:	2209      	movs	r2, #9
 8008d8e:	602a      	str	r2, [r5, #0]
 8008d90:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008d94:	81a3      	strh	r3, [r4, #12]
 8008d96:	f04f 30ff 	mov.w	r0, #4294967295
 8008d9a:	e033      	b.n	8008e04 <__swsetup_r+0x98>
 8008d9c:	0758      	lsls	r0, r3, #29
 8008d9e:	d512      	bpl.n	8008dc6 <__swsetup_r+0x5a>
 8008da0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008da2:	b141      	cbz	r1, 8008db6 <__swsetup_r+0x4a>
 8008da4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008da8:	4299      	cmp	r1, r3
 8008daa:	d002      	beq.n	8008db2 <__swsetup_r+0x46>
 8008dac:	4628      	mov	r0, r5
 8008dae:	f7fe ffff 	bl	8007db0 <_free_r>
 8008db2:	2300      	movs	r3, #0
 8008db4:	6363      	str	r3, [r4, #52]	@ 0x34
 8008db6:	89a3      	ldrh	r3, [r4, #12]
 8008db8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008dbc:	81a3      	strh	r3, [r4, #12]
 8008dbe:	2300      	movs	r3, #0
 8008dc0:	6063      	str	r3, [r4, #4]
 8008dc2:	6923      	ldr	r3, [r4, #16]
 8008dc4:	6023      	str	r3, [r4, #0]
 8008dc6:	89a3      	ldrh	r3, [r4, #12]
 8008dc8:	f043 0308 	orr.w	r3, r3, #8
 8008dcc:	81a3      	strh	r3, [r4, #12]
 8008dce:	6923      	ldr	r3, [r4, #16]
 8008dd0:	b94b      	cbnz	r3, 8008de6 <__swsetup_r+0x7a>
 8008dd2:	89a3      	ldrh	r3, [r4, #12]
 8008dd4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008dd8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008ddc:	d003      	beq.n	8008de6 <__swsetup_r+0x7a>
 8008dde:	4621      	mov	r1, r4
 8008de0:	4628      	mov	r0, r5
 8008de2:	f000 f88b 	bl	8008efc <__smakebuf_r>
 8008de6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008dea:	f013 0201 	ands.w	r2, r3, #1
 8008dee:	d00a      	beq.n	8008e06 <__swsetup_r+0x9a>
 8008df0:	2200      	movs	r2, #0
 8008df2:	60a2      	str	r2, [r4, #8]
 8008df4:	6962      	ldr	r2, [r4, #20]
 8008df6:	4252      	negs	r2, r2
 8008df8:	61a2      	str	r2, [r4, #24]
 8008dfa:	6922      	ldr	r2, [r4, #16]
 8008dfc:	b942      	cbnz	r2, 8008e10 <__swsetup_r+0xa4>
 8008dfe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8008e02:	d1c5      	bne.n	8008d90 <__swsetup_r+0x24>
 8008e04:	bd38      	pop	{r3, r4, r5, pc}
 8008e06:	0799      	lsls	r1, r3, #30
 8008e08:	bf58      	it	pl
 8008e0a:	6962      	ldrpl	r2, [r4, #20]
 8008e0c:	60a2      	str	r2, [r4, #8]
 8008e0e:	e7f4      	b.n	8008dfa <__swsetup_r+0x8e>
 8008e10:	2000      	movs	r0, #0
 8008e12:	e7f7      	b.n	8008e04 <__swsetup_r+0x98>
 8008e14:	20000018 	.word	0x20000018

08008e18 <_raise_r>:
 8008e18:	291f      	cmp	r1, #31
 8008e1a:	b538      	push	{r3, r4, r5, lr}
 8008e1c:	4605      	mov	r5, r0
 8008e1e:	460c      	mov	r4, r1
 8008e20:	d904      	bls.n	8008e2c <_raise_r+0x14>
 8008e22:	2316      	movs	r3, #22
 8008e24:	6003      	str	r3, [r0, #0]
 8008e26:	f04f 30ff 	mov.w	r0, #4294967295
 8008e2a:	bd38      	pop	{r3, r4, r5, pc}
 8008e2c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8008e2e:	b112      	cbz	r2, 8008e36 <_raise_r+0x1e>
 8008e30:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008e34:	b94b      	cbnz	r3, 8008e4a <_raise_r+0x32>
 8008e36:	4628      	mov	r0, r5
 8008e38:	f000 f830 	bl	8008e9c <_getpid_r>
 8008e3c:	4622      	mov	r2, r4
 8008e3e:	4601      	mov	r1, r0
 8008e40:	4628      	mov	r0, r5
 8008e42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008e46:	f000 b817 	b.w	8008e78 <_kill_r>
 8008e4a:	2b01      	cmp	r3, #1
 8008e4c:	d00a      	beq.n	8008e64 <_raise_r+0x4c>
 8008e4e:	1c59      	adds	r1, r3, #1
 8008e50:	d103      	bne.n	8008e5a <_raise_r+0x42>
 8008e52:	2316      	movs	r3, #22
 8008e54:	6003      	str	r3, [r0, #0]
 8008e56:	2001      	movs	r0, #1
 8008e58:	e7e7      	b.n	8008e2a <_raise_r+0x12>
 8008e5a:	2100      	movs	r1, #0
 8008e5c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008e60:	4620      	mov	r0, r4
 8008e62:	4798      	blx	r3
 8008e64:	2000      	movs	r0, #0
 8008e66:	e7e0      	b.n	8008e2a <_raise_r+0x12>

08008e68 <raise>:
 8008e68:	4b02      	ldr	r3, [pc, #8]	@ (8008e74 <raise+0xc>)
 8008e6a:	4601      	mov	r1, r0
 8008e6c:	6818      	ldr	r0, [r3, #0]
 8008e6e:	f7ff bfd3 	b.w	8008e18 <_raise_r>
 8008e72:	bf00      	nop
 8008e74:	20000018 	.word	0x20000018

08008e78 <_kill_r>:
 8008e78:	b538      	push	{r3, r4, r5, lr}
 8008e7a:	4d07      	ldr	r5, [pc, #28]	@ (8008e98 <_kill_r+0x20>)
 8008e7c:	2300      	movs	r3, #0
 8008e7e:	4604      	mov	r4, r0
 8008e80:	4608      	mov	r0, r1
 8008e82:	4611      	mov	r1, r2
 8008e84:	602b      	str	r3, [r5, #0]
 8008e86:	f7f9 f913 	bl	80020b0 <_kill>
 8008e8a:	1c43      	adds	r3, r0, #1
 8008e8c:	d102      	bne.n	8008e94 <_kill_r+0x1c>
 8008e8e:	682b      	ldr	r3, [r5, #0]
 8008e90:	b103      	cbz	r3, 8008e94 <_kill_r+0x1c>
 8008e92:	6023      	str	r3, [r4, #0]
 8008e94:	bd38      	pop	{r3, r4, r5, pc}
 8008e96:	bf00      	nop
 8008e98:	20000614 	.word	0x20000614

08008e9c <_getpid_r>:
 8008e9c:	f7f9 b900 	b.w	80020a0 <_getpid>

08008ea0 <_malloc_usable_size_r>:
 8008ea0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008ea4:	1f18      	subs	r0, r3, #4
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	bfbc      	itt	lt
 8008eaa:	580b      	ldrlt	r3, [r1, r0]
 8008eac:	18c0      	addlt	r0, r0, r3
 8008eae:	4770      	bx	lr

08008eb0 <__swhatbuf_r>:
 8008eb0:	b570      	push	{r4, r5, r6, lr}
 8008eb2:	460c      	mov	r4, r1
 8008eb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008eb8:	2900      	cmp	r1, #0
 8008eba:	b096      	sub	sp, #88	@ 0x58
 8008ebc:	4615      	mov	r5, r2
 8008ebe:	461e      	mov	r6, r3
 8008ec0:	da0d      	bge.n	8008ede <__swhatbuf_r+0x2e>
 8008ec2:	89a3      	ldrh	r3, [r4, #12]
 8008ec4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8008ec8:	f04f 0100 	mov.w	r1, #0
 8008ecc:	bf14      	ite	ne
 8008ece:	2340      	movne	r3, #64	@ 0x40
 8008ed0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008ed4:	2000      	movs	r0, #0
 8008ed6:	6031      	str	r1, [r6, #0]
 8008ed8:	602b      	str	r3, [r5, #0]
 8008eda:	b016      	add	sp, #88	@ 0x58
 8008edc:	bd70      	pop	{r4, r5, r6, pc}
 8008ede:	466a      	mov	r2, sp
 8008ee0:	f000 f848 	bl	8008f74 <_fstat_r>
 8008ee4:	2800      	cmp	r0, #0
 8008ee6:	dbec      	blt.n	8008ec2 <__swhatbuf_r+0x12>
 8008ee8:	9901      	ldr	r1, [sp, #4]
 8008eea:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8008eee:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008ef2:	4259      	negs	r1, r3
 8008ef4:	4159      	adcs	r1, r3
 8008ef6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8008efa:	e7eb      	b.n	8008ed4 <__swhatbuf_r+0x24>

08008efc <__smakebuf_r>:
 8008efc:	898b      	ldrh	r3, [r1, #12]
 8008efe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f00:	079d      	lsls	r5, r3, #30
 8008f02:	4606      	mov	r6, r0
 8008f04:	460c      	mov	r4, r1
 8008f06:	d507      	bpl.n	8008f18 <__smakebuf_r+0x1c>
 8008f08:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8008f0c:	6023      	str	r3, [r4, #0]
 8008f0e:	6123      	str	r3, [r4, #16]
 8008f10:	2301      	movs	r3, #1
 8008f12:	6163      	str	r3, [r4, #20]
 8008f14:	b003      	add	sp, #12
 8008f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f18:	ab01      	add	r3, sp, #4
 8008f1a:	466a      	mov	r2, sp
 8008f1c:	f7ff ffc8 	bl	8008eb0 <__swhatbuf_r>
 8008f20:	9f00      	ldr	r7, [sp, #0]
 8008f22:	4605      	mov	r5, r0
 8008f24:	4639      	mov	r1, r7
 8008f26:	4630      	mov	r0, r6
 8008f28:	f7fd f9cc 	bl	80062c4 <_malloc_r>
 8008f2c:	b948      	cbnz	r0, 8008f42 <__smakebuf_r+0x46>
 8008f2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008f32:	059a      	lsls	r2, r3, #22
 8008f34:	d4ee      	bmi.n	8008f14 <__smakebuf_r+0x18>
 8008f36:	f023 0303 	bic.w	r3, r3, #3
 8008f3a:	f043 0302 	orr.w	r3, r3, #2
 8008f3e:	81a3      	strh	r3, [r4, #12]
 8008f40:	e7e2      	b.n	8008f08 <__smakebuf_r+0xc>
 8008f42:	89a3      	ldrh	r3, [r4, #12]
 8008f44:	6020      	str	r0, [r4, #0]
 8008f46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008f4a:	81a3      	strh	r3, [r4, #12]
 8008f4c:	9b01      	ldr	r3, [sp, #4]
 8008f4e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8008f52:	b15b      	cbz	r3, 8008f6c <__smakebuf_r+0x70>
 8008f54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008f58:	4630      	mov	r0, r6
 8008f5a:	f000 f81d 	bl	8008f98 <_isatty_r>
 8008f5e:	b128      	cbz	r0, 8008f6c <__smakebuf_r+0x70>
 8008f60:	89a3      	ldrh	r3, [r4, #12]
 8008f62:	f023 0303 	bic.w	r3, r3, #3
 8008f66:	f043 0301 	orr.w	r3, r3, #1
 8008f6a:	81a3      	strh	r3, [r4, #12]
 8008f6c:	89a3      	ldrh	r3, [r4, #12]
 8008f6e:	431d      	orrs	r5, r3
 8008f70:	81a5      	strh	r5, [r4, #12]
 8008f72:	e7cf      	b.n	8008f14 <__smakebuf_r+0x18>

08008f74 <_fstat_r>:
 8008f74:	b538      	push	{r3, r4, r5, lr}
 8008f76:	4d07      	ldr	r5, [pc, #28]	@ (8008f94 <_fstat_r+0x20>)
 8008f78:	2300      	movs	r3, #0
 8008f7a:	4604      	mov	r4, r0
 8008f7c:	4608      	mov	r0, r1
 8008f7e:	4611      	mov	r1, r2
 8008f80:	602b      	str	r3, [r5, #0]
 8008f82:	f7f9 f8f5 	bl	8002170 <_fstat>
 8008f86:	1c43      	adds	r3, r0, #1
 8008f88:	d102      	bne.n	8008f90 <_fstat_r+0x1c>
 8008f8a:	682b      	ldr	r3, [r5, #0]
 8008f8c:	b103      	cbz	r3, 8008f90 <_fstat_r+0x1c>
 8008f8e:	6023      	str	r3, [r4, #0]
 8008f90:	bd38      	pop	{r3, r4, r5, pc}
 8008f92:	bf00      	nop
 8008f94:	20000614 	.word	0x20000614

08008f98 <_isatty_r>:
 8008f98:	b538      	push	{r3, r4, r5, lr}
 8008f9a:	4d06      	ldr	r5, [pc, #24]	@ (8008fb4 <_isatty_r+0x1c>)
 8008f9c:	2300      	movs	r3, #0
 8008f9e:	4604      	mov	r4, r0
 8008fa0:	4608      	mov	r0, r1
 8008fa2:	602b      	str	r3, [r5, #0]
 8008fa4:	f7f9 f8f4 	bl	8002190 <_isatty>
 8008fa8:	1c43      	adds	r3, r0, #1
 8008faa:	d102      	bne.n	8008fb2 <_isatty_r+0x1a>
 8008fac:	682b      	ldr	r3, [r5, #0]
 8008fae:	b103      	cbz	r3, 8008fb2 <_isatty_r+0x1a>
 8008fb0:	6023      	str	r3, [r4, #0]
 8008fb2:	bd38      	pop	{r3, r4, r5, pc}
 8008fb4:	20000614 	.word	0x20000614

08008fb8 <_init>:
 8008fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008fba:	bf00      	nop
 8008fbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008fbe:	bc08      	pop	{r3}
 8008fc0:	469e      	mov	lr, r3
 8008fc2:	4770      	bx	lr

08008fc4 <_fini>:
 8008fc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008fc6:	bf00      	nop
 8008fc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008fca:	bc08      	pop	{r3}
 8008fcc:	469e      	mov	lr, r3
 8008fce:	4770      	bx	lr
